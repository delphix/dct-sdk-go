/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the AccountCreateParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountCreateParameter{}

// AccountCreateParameter struct for AccountCreateParameter
type AccountCreateParameter struct {
	// Whether the created account must be granted to admin role.
	IsAdmin *bool `json:"is_admin,omitempty"`
	// Whether an API key must be generated for this Account. This must be set if the Account will be used for API key based authentication, and unset otherwise.
	GenerateApiKey *bool `json:"generate_api_key,omitempty"`
	// The unique ID which is used to identify the identity of an API request. The web server (nginx) configuration must be configured so as to include the external ID as the value of the X_CLIENT_ID HTTP request header when requests are proxied. If this value isn't set, the application will automatically generate one. For OAuth2/JWT based authentication, this typically corresponds to a value extracted from the JWT, uniquely identifying the Account.
	ApiClientId *string `json:"api_client_id,omitempty"`
	// An optional first name for the Account.
	FirstName *string `json:"first_name,omitempty"`
	// An optional last name for the Account.
	LastName *string `json:"last_name,omitempty"`
	// An optional email for the Account.
	Email *string `json:"email,omitempty"`
	// The username for username/password authentication. This can also be used to provide an optional logical name for the Account.
	Username *string `json:"username,omitempty"`
	// The password for username/password authentication.
	Password *string `json:"password,omitempty"`
	// This value will be used for linking this account to an LDAP user when authenticated with the same LDAP principal. When accounts authenticate with LDAP, an LDAP principal value is calculated based on the username, msad_domain_name, search_base and username_pattern.
	LdapPrincipal *string `json:"ldap_principal,omitempty"`
	// The tags to be created for this Account.
	Tags []Tag `json:"tags,omitempty"`
}

// NewAccountCreateParameter instantiates a new AccountCreateParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountCreateParameter() *AccountCreateParameter {
	this := AccountCreateParameter{}
	var isAdmin bool = false
	this.IsAdmin = &isAdmin
	var generateApiKey bool = false
	this.GenerateApiKey = &generateApiKey
	return &this
}

// NewAccountCreateParameterWithDefaults instantiates a new AccountCreateParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountCreateParameterWithDefaults() *AccountCreateParameter {
	this := AccountCreateParameter{}
	var isAdmin bool = false
	this.IsAdmin = &isAdmin
	var generateApiKey bool = false
	this.GenerateApiKey = &generateApiKey
	return &this
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *AccountCreateParameter) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetGenerateApiKey returns the GenerateApiKey field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetGenerateApiKey() bool {
	if o == nil || IsNil(o.GenerateApiKey) {
		var ret bool
		return ret
	}
	return *o.GenerateApiKey
}

// GetGenerateApiKeyOk returns a tuple with the GenerateApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetGenerateApiKeyOk() (*bool, bool) {
	if o == nil || IsNil(o.GenerateApiKey) {
		return nil, false
	}
	return o.GenerateApiKey, true
}

// HasGenerateApiKey returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasGenerateApiKey() bool {
	if o != nil && !IsNil(o.GenerateApiKey) {
		return true
	}

	return false
}

// SetGenerateApiKey gets a reference to the given bool and assigns it to the GenerateApiKey field.
func (o *AccountCreateParameter) SetGenerateApiKey(v bool) {
	o.GenerateApiKey = &v
}

// GetApiClientId returns the ApiClientId field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetApiClientId() string {
	if o == nil || IsNil(o.ApiClientId) {
		var ret string
		return ret
	}
	return *o.ApiClientId
}

// GetApiClientIdOk returns a tuple with the ApiClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetApiClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApiClientId) {
		return nil, false
	}
	return o.ApiClientId, true
}

// HasApiClientId returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasApiClientId() bool {
	if o != nil && !IsNil(o.ApiClientId) {
		return true
	}

	return false
}

// SetApiClientId gets a reference to the given string and assigns it to the ApiClientId field.
func (o *AccountCreateParameter) SetApiClientId(v string) {
	o.ApiClientId = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *AccountCreateParameter) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *AccountCreateParameter) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AccountCreateParameter) SetEmail(v string) {
	o.Email = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AccountCreateParameter) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AccountCreateParameter) SetPassword(v string) {
	o.Password = &v
}

// GetLdapPrincipal returns the LdapPrincipal field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetLdapPrincipal() string {
	if o == nil || IsNil(o.LdapPrincipal) {
		var ret string
		return ret
	}
	return *o.LdapPrincipal
}

// GetLdapPrincipalOk returns a tuple with the LdapPrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetLdapPrincipalOk() (*string, bool) {
	if o == nil || IsNil(o.LdapPrincipal) {
		return nil, false
	}
	return o.LdapPrincipal, true
}

// HasLdapPrincipal returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasLdapPrincipal() bool {
	if o != nil && !IsNil(o.LdapPrincipal) {
		return true
	}

	return false
}

// SetLdapPrincipal gets a reference to the given string and assigns it to the LdapPrincipal field.
func (o *AccountCreateParameter) SetLdapPrincipal(v string) {
	o.LdapPrincipal = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AccountCreateParameter) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateParameter) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AccountCreateParameter) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *AccountCreateParameter) SetTags(v []Tag) {
	o.Tags = v
}

func (o AccountCreateParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountCreateParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsAdmin) {
		toSerialize["is_admin"] = o.IsAdmin
	}
	if !IsNil(o.GenerateApiKey) {
		toSerialize["generate_api_key"] = o.GenerateApiKey
	}
	if !IsNil(o.ApiClientId) {
		toSerialize["api_client_id"] = o.ApiClientId
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.LdapPrincipal) {
		toSerialize["ldap_principal"] = o.LdapPrincipal
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableAccountCreateParameter struct {
	value *AccountCreateParameter
	isSet bool
}

func (v NullableAccountCreateParameter) Get() *AccountCreateParameter {
	return v.value
}

func (v *NullableAccountCreateParameter) Set(val *AccountCreateParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountCreateParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountCreateParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountCreateParameter(val *AccountCreateParameter) *NullableAccountCreateParameter {
	return &NullableAccountCreateParameter{value: val, isSet: true}
}

func (v NullableAccountCreateParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountCreateParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


