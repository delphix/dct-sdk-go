/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OracleStagingPushDSourceLinkSourceParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OracleStagingPushDSourceLinkSourceParameters{}

// OracleStagingPushDSourceLinkSourceParameters struct for OracleStagingPushDSourceLinkSourceParameters
type OracleStagingPushDSourceLinkSourceParameters struct {
	// Name of the dSource to be created.
	Name *string `json:"name,omitempty"`
	// Id of the source to link.
	SourceId *string `json:"source_id,omitempty"`
	// Id of the dataset group where this dSource should belong to.
	GroupId *string `json:"group_id,omitempty"`
	// The notes/description for the dSource.
	Description *string `json:"description,omitempty"`
	// True if LogSync should run for this database.
	LogSyncEnabled *bool `json:"log_sync_enabled,omitempty"`
	// The ID of the SnapSync policy for the dSource.
	SyncPolicyId *string `json:"sync_policy_id,omitempty"`
	// The ID of the Retention policy for the dSource.
	RetentionPolicyId *string `json:"retention_policy_id,omitempty"`
	// Whether the account creating this reporting schedule must be configured as owner of the reporting schedule.
	MakeCurrentAccountOwner *bool `json:"make_current_account_owner,omitempty"`
	// The tags to be created for dSource.
	Tags []Tag `json:"tags,omitempty"`
	// Operations to perform before syncing the created dSource. These operations can quiesce any data prior to syncing.
	OpsPreSync []SourceOperation `json:"ops_pre_sync,omitempty"`
	// Operations to perform after syncing a created dSource.
	OpsPostSync []SourceOperation `json:"ops_post_sync,omitempty"`
	// The ID of the engine to link staging push database on.
	EngineId string `json:"engine_id"`
	// The container type of this database.If not provided the request would be considered as a PDB database.
	ContainerType *string `json:"container_type,omitempty"`
	// Id of the environment user to use for linking.
	EnvironmentUserId *string `json:"environment_user_id,omitempty"`
	// The repository reference to link.
	Repository *string `json:"repository,omitempty"`
	// The name of the database.
	DatabaseName string `json:"database_name"`
	// The unique name of the database.
	DatabaseUniqueName *string `json:"database_unique_name,omitempty"`
	// The name (sid) of the instance.
	Sid *string `json:"sid,omitempty"`
	// The base mount point to use for the NFS mounts.
	MountBase *string `json:"mount_base,omitempty"`
	// An array of name value pair of environment variables.
	CustomEnvVariablesPairs []NameValuePair `json:"custom_env_variables_pairs,omitempty"`
	// An array of strings of whitespace-separated parameters to be passed to the source command. The first parameter must be an absolute path to a file that exists on the target environment. Every subsequent parameter will be treated as an argument interpreted by the environment file.
	CustomEnvVariablesPaths []string `json:"custom_env_variables_paths,omitempty"`
	// Boolean value indicates whether this staging database should automatically be restarted when staging host reboot is detected.
	AutoStagingRestart *bool `json:"auto_staging_restart,omitempty"`
	// Boolean value indicates whether this staging database will be configured as a physical standby.
	PhysicalStandby *bool `json:"physical_standby,omitempty"`
	// Boolean value indicates whether this staging database snapshot will be validated by opening it in read-only.
	ValidateSnapshotInReadonly *bool `json:"validate_snapshot_in_readonly,omitempty"`
	// An array of name value pair of Oracle database configuration parameter overrides. This property is deprecated. Use staging_database_config_params instead.
	// Deprecated
	StagingDatabaseTemplates []NameValuePair `json:"staging_database_templates,omitempty"`
	// Oracle database configuration parameter overrides. If both staging_database_templates and staging_database_config_params are specified, staging_database_config_params will be used.
	StagingDatabaseConfigParams map[string]string `json:"staging_database_config_params,omitempty"`
	// Reference of the CDB source config.
	StagingContainerDatabaseReference *string `json:"staging_container_database_reference,omitempty"`
	// Operations to perform after syncing a created dSource and before running the LogSync.
	OpsPreLogSync []SourceOperation `json:"ops_pre_log_sync,omitempty"`
	// The type of TDE keystore configuration to use for the staging database.
	TdeKeystoreConfigType *string `json:"tde_keystore_config_type,omitempty"`
	// The template ID of the target Oracle Staging Push dSource.
	TemplateId *string `json:"template_id,omitempty"`
}

type _OracleStagingPushDSourceLinkSourceParameters OracleStagingPushDSourceLinkSourceParameters

// NewOracleStagingPushDSourceLinkSourceParameters instantiates a new OracleStagingPushDSourceLinkSourceParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleStagingPushDSourceLinkSourceParameters(engineId string, databaseName string) *OracleStagingPushDSourceLinkSourceParameters {
	this := OracleStagingPushDSourceLinkSourceParameters{}
	var logSyncEnabled bool = false
	this.LogSyncEnabled = &logSyncEnabled
	var makeCurrentAccountOwner bool = true
	this.MakeCurrentAccountOwner = &makeCurrentAccountOwner
	this.EngineId = engineId
	this.DatabaseName = databaseName
	var autoStagingRestart bool = false
	this.AutoStagingRestart = &autoStagingRestart
	var physicalStandby bool = false
	this.PhysicalStandby = &physicalStandby
	var validateSnapshotInReadonly bool = false
	this.ValidateSnapshotInReadonly = &validateSnapshotInReadonly
	return &this
}

// NewOracleStagingPushDSourceLinkSourceParametersWithDefaults instantiates a new OracleStagingPushDSourceLinkSourceParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleStagingPushDSourceLinkSourceParametersWithDefaults() *OracleStagingPushDSourceLinkSourceParameters {
	this := OracleStagingPushDSourceLinkSourceParameters{}
	var logSyncEnabled bool = false
	this.LogSyncEnabled = &logSyncEnabled
	var makeCurrentAccountOwner bool = true
	this.MakeCurrentAccountOwner = &makeCurrentAccountOwner
	var autoStagingRestart bool = false
	this.AutoStagingRestart = &autoStagingRestart
	var physicalStandby bool = false
	this.PhysicalStandby = &physicalStandby
	var validateSnapshotInReadonly bool = false
	this.ValidateSnapshotInReadonly = &validateSnapshotInReadonly
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetName(v string) {
	o.Name = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetSourceId(v string) {
	o.SourceId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetGroupId(v string) {
	o.GroupId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetDescription(v string) {
	o.Description = &v
}

// GetLogSyncEnabled returns the LogSyncEnabled field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetLogSyncEnabled() bool {
	if o == nil || IsNil(o.LogSyncEnabled) {
		var ret bool
		return ret
	}
	return *o.LogSyncEnabled
}

// GetLogSyncEnabledOk returns a tuple with the LogSyncEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetLogSyncEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LogSyncEnabled) {
		return nil, false
	}
	return o.LogSyncEnabled, true
}

// HasLogSyncEnabled returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasLogSyncEnabled() bool {
	if o != nil && !IsNil(o.LogSyncEnabled) {
		return true
	}

	return false
}

// SetLogSyncEnabled gets a reference to the given bool and assigns it to the LogSyncEnabled field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetLogSyncEnabled(v bool) {
	o.LogSyncEnabled = &v
}

// GetSyncPolicyId returns the SyncPolicyId field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetSyncPolicyId() string {
	if o == nil || IsNil(o.SyncPolicyId) {
		var ret string
		return ret
	}
	return *o.SyncPolicyId
}

// GetSyncPolicyIdOk returns a tuple with the SyncPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetSyncPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.SyncPolicyId) {
		return nil, false
	}
	return o.SyncPolicyId, true
}

// HasSyncPolicyId returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasSyncPolicyId() bool {
	if o != nil && !IsNil(o.SyncPolicyId) {
		return true
	}

	return false
}

// SetSyncPolicyId gets a reference to the given string and assigns it to the SyncPolicyId field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetSyncPolicyId(v string) {
	o.SyncPolicyId = &v
}

// GetRetentionPolicyId returns the RetentionPolicyId field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetRetentionPolicyId() string {
	if o == nil || IsNil(o.RetentionPolicyId) {
		var ret string
		return ret
	}
	return *o.RetentionPolicyId
}

// GetRetentionPolicyIdOk returns a tuple with the RetentionPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetRetentionPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.RetentionPolicyId) {
		return nil, false
	}
	return o.RetentionPolicyId, true
}

// HasRetentionPolicyId returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasRetentionPolicyId() bool {
	if o != nil && !IsNil(o.RetentionPolicyId) {
		return true
	}

	return false
}

// SetRetentionPolicyId gets a reference to the given string and assigns it to the RetentionPolicyId field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetRetentionPolicyId(v string) {
	o.RetentionPolicyId = &v
}

// GetMakeCurrentAccountOwner returns the MakeCurrentAccountOwner field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetMakeCurrentAccountOwner() bool {
	if o == nil || IsNil(o.MakeCurrentAccountOwner) {
		var ret bool
		return ret
	}
	return *o.MakeCurrentAccountOwner
}

// GetMakeCurrentAccountOwnerOk returns a tuple with the MakeCurrentAccountOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetMakeCurrentAccountOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.MakeCurrentAccountOwner) {
		return nil, false
	}
	return o.MakeCurrentAccountOwner, true
}

// HasMakeCurrentAccountOwner returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasMakeCurrentAccountOwner() bool {
	if o != nil && !IsNil(o.MakeCurrentAccountOwner) {
		return true
	}

	return false
}

// SetMakeCurrentAccountOwner gets a reference to the given bool and assigns it to the MakeCurrentAccountOwner field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetMakeCurrentAccountOwner(v bool) {
	o.MakeCurrentAccountOwner = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetTags(v []Tag) {
	o.Tags = v
}

// GetOpsPreSync returns the OpsPreSync field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetOpsPreSync() []SourceOperation {
	if o == nil || IsNil(o.OpsPreSync) {
		var ret []SourceOperation
		return ret
	}
	return o.OpsPreSync
}

// GetOpsPreSyncOk returns a tuple with the OpsPreSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetOpsPreSyncOk() ([]SourceOperation, bool) {
	if o == nil || IsNil(o.OpsPreSync) {
		return nil, false
	}
	return o.OpsPreSync, true
}

// HasOpsPreSync returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasOpsPreSync() bool {
	if o != nil && !IsNil(o.OpsPreSync) {
		return true
	}

	return false
}

// SetOpsPreSync gets a reference to the given []SourceOperation and assigns it to the OpsPreSync field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetOpsPreSync(v []SourceOperation) {
	o.OpsPreSync = v
}

// GetOpsPostSync returns the OpsPostSync field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetOpsPostSync() []SourceOperation {
	if o == nil || IsNil(o.OpsPostSync) {
		var ret []SourceOperation
		return ret
	}
	return o.OpsPostSync
}

// GetOpsPostSyncOk returns a tuple with the OpsPostSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetOpsPostSyncOk() ([]SourceOperation, bool) {
	if o == nil || IsNil(o.OpsPostSync) {
		return nil, false
	}
	return o.OpsPostSync, true
}

// HasOpsPostSync returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasOpsPostSync() bool {
	if o != nil && !IsNil(o.OpsPostSync) {
		return true
	}

	return false
}

// SetOpsPostSync gets a reference to the given []SourceOperation and assigns it to the OpsPostSync field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetOpsPostSync(v []SourceOperation) {
	o.OpsPostSync = v
}

// GetEngineId returns the EngineId field value
func (o *OracleStagingPushDSourceLinkSourceParameters) GetEngineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EngineId, true
}

// SetEngineId sets field value
func (o *OracleStagingPushDSourceLinkSourceParameters) SetEngineId(v string) {
	o.EngineId = v
}

// GetContainerType returns the ContainerType field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetContainerType() string {
	if o == nil || IsNil(o.ContainerType) {
		var ret string
		return ret
	}
	return *o.ContainerType
}

// GetContainerTypeOk returns a tuple with the ContainerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetContainerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContainerType) {
		return nil, false
	}
	return o.ContainerType, true
}

// HasContainerType returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasContainerType() bool {
	if o != nil && !IsNil(o.ContainerType) {
		return true
	}

	return false
}

// SetContainerType gets a reference to the given string and assigns it to the ContainerType field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetContainerType(v string) {
	o.ContainerType = &v
}

// GetEnvironmentUserId returns the EnvironmentUserId field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetEnvironmentUserId() string {
	if o == nil || IsNil(o.EnvironmentUserId) {
		var ret string
		return ret
	}
	return *o.EnvironmentUserId
}

// GetEnvironmentUserIdOk returns a tuple with the EnvironmentUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetEnvironmentUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentUserId) {
		return nil, false
	}
	return o.EnvironmentUserId, true
}

// HasEnvironmentUserId returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasEnvironmentUserId() bool {
	if o != nil && !IsNil(o.EnvironmentUserId) {
		return true
	}

	return false
}

// SetEnvironmentUserId gets a reference to the given string and assigns it to the EnvironmentUserId field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetEnvironmentUserId(v string) {
	o.EnvironmentUserId = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetRepository() string {
	if o == nil || IsNil(o.Repository) {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetRepositoryOk() (*string, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetRepository(v string) {
	o.Repository = &v
}

// GetDatabaseName returns the DatabaseName field value
func (o *OracleStagingPushDSourceLinkSourceParameters) GetDatabaseName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatabaseName
}

// GetDatabaseNameOk returns a tuple with the DatabaseName field value
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetDatabaseNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatabaseName, true
}

// SetDatabaseName sets field value
func (o *OracleStagingPushDSourceLinkSourceParameters) SetDatabaseName(v string) {
	o.DatabaseName = v
}

// GetDatabaseUniqueName returns the DatabaseUniqueName field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetDatabaseUniqueName() string {
	if o == nil || IsNil(o.DatabaseUniqueName) {
		var ret string
		return ret
	}
	return *o.DatabaseUniqueName
}

// GetDatabaseUniqueNameOk returns a tuple with the DatabaseUniqueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetDatabaseUniqueNameOk() (*string, bool) {
	if o == nil || IsNil(o.DatabaseUniqueName) {
		return nil, false
	}
	return o.DatabaseUniqueName, true
}

// HasDatabaseUniqueName returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasDatabaseUniqueName() bool {
	if o != nil && !IsNil(o.DatabaseUniqueName) {
		return true
	}

	return false
}

// SetDatabaseUniqueName gets a reference to the given string and assigns it to the DatabaseUniqueName field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetDatabaseUniqueName(v string) {
	o.DatabaseUniqueName = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetSid(v string) {
	o.Sid = &v
}

// GetMountBase returns the MountBase field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetMountBase() string {
	if o == nil || IsNil(o.MountBase) {
		var ret string
		return ret
	}
	return *o.MountBase
}

// GetMountBaseOk returns a tuple with the MountBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetMountBaseOk() (*string, bool) {
	if o == nil || IsNil(o.MountBase) {
		return nil, false
	}
	return o.MountBase, true
}

// HasMountBase returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasMountBase() bool {
	if o != nil && !IsNil(o.MountBase) {
		return true
	}

	return false
}

// SetMountBase gets a reference to the given string and assigns it to the MountBase field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetMountBase(v string) {
	o.MountBase = &v
}

// GetCustomEnvVariablesPairs returns the CustomEnvVariablesPairs field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetCustomEnvVariablesPairs() []NameValuePair {
	if o == nil || IsNil(o.CustomEnvVariablesPairs) {
		var ret []NameValuePair
		return ret
	}
	return o.CustomEnvVariablesPairs
}

// GetCustomEnvVariablesPairsOk returns a tuple with the CustomEnvVariablesPairs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetCustomEnvVariablesPairsOk() ([]NameValuePair, bool) {
	if o == nil || IsNil(o.CustomEnvVariablesPairs) {
		return nil, false
	}
	return o.CustomEnvVariablesPairs, true
}

// HasCustomEnvVariablesPairs returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasCustomEnvVariablesPairs() bool {
	if o != nil && !IsNil(o.CustomEnvVariablesPairs) {
		return true
	}

	return false
}

// SetCustomEnvVariablesPairs gets a reference to the given []NameValuePair and assigns it to the CustomEnvVariablesPairs field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetCustomEnvVariablesPairs(v []NameValuePair) {
	o.CustomEnvVariablesPairs = v
}

// GetCustomEnvVariablesPaths returns the CustomEnvVariablesPaths field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetCustomEnvVariablesPaths() []string {
	if o == nil || IsNil(o.CustomEnvVariablesPaths) {
		var ret []string
		return ret
	}
	return o.CustomEnvVariablesPaths
}

// GetCustomEnvVariablesPathsOk returns a tuple with the CustomEnvVariablesPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetCustomEnvVariablesPathsOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomEnvVariablesPaths) {
		return nil, false
	}
	return o.CustomEnvVariablesPaths, true
}

// HasCustomEnvVariablesPaths returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasCustomEnvVariablesPaths() bool {
	if o != nil && !IsNil(o.CustomEnvVariablesPaths) {
		return true
	}

	return false
}

// SetCustomEnvVariablesPaths gets a reference to the given []string and assigns it to the CustomEnvVariablesPaths field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetCustomEnvVariablesPaths(v []string) {
	o.CustomEnvVariablesPaths = v
}

// GetAutoStagingRestart returns the AutoStagingRestart field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetAutoStagingRestart() bool {
	if o == nil || IsNil(o.AutoStagingRestart) {
		var ret bool
		return ret
	}
	return *o.AutoStagingRestart
}

// GetAutoStagingRestartOk returns a tuple with the AutoStagingRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetAutoStagingRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoStagingRestart) {
		return nil, false
	}
	return o.AutoStagingRestart, true
}

// HasAutoStagingRestart returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasAutoStagingRestart() bool {
	if o != nil && !IsNil(o.AutoStagingRestart) {
		return true
	}

	return false
}

// SetAutoStagingRestart gets a reference to the given bool and assigns it to the AutoStagingRestart field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetAutoStagingRestart(v bool) {
	o.AutoStagingRestart = &v
}

// GetPhysicalStandby returns the PhysicalStandby field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetPhysicalStandby() bool {
	if o == nil || IsNil(o.PhysicalStandby) {
		var ret bool
		return ret
	}
	return *o.PhysicalStandby
}

// GetPhysicalStandbyOk returns a tuple with the PhysicalStandby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetPhysicalStandbyOk() (*bool, bool) {
	if o == nil || IsNil(o.PhysicalStandby) {
		return nil, false
	}
	return o.PhysicalStandby, true
}

// HasPhysicalStandby returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasPhysicalStandby() bool {
	if o != nil && !IsNil(o.PhysicalStandby) {
		return true
	}

	return false
}

// SetPhysicalStandby gets a reference to the given bool and assigns it to the PhysicalStandby field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetPhysicalStandby(v bool) {
	o.PhysicalStandby = &v
}

// GetValidateSnapshotInReadonly returns the ValidateSnapshotInReadonly field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetValidateSnapshotInReadonly() bool {
	if o == nil || IsNil(o.ValidateSnapshotInReadonly) {
		var ret bool
		return ret
	}
	return *o.ValidateSnapshotInReadonly
}

// GetValidateSnapshotInReadonlyOk returns a tuple with the ValidateSnapshotInReadonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetValidateSnapshotInReadonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateSnapshotInReadonly) {
		return nil, false
	}
	return o.ValidateSnapshotInReadonly, true
}

// HasValidateSnapshotInReadonly returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasValidateSnapshotInReadonly() bool {
	if o != nil && !IsNil(o.ValidateSnapshotInReadonly) {
		return true
	}

	return false
}

// SetValidateSnapshotInReadonly gets a reference to the given bool and assigns it to the ValidateSnapshotInReadonly field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetValidateSnapshotInReadonly(v bool) {
	o.ValidateSnapshotInReadonly = &v
}

// GetStagingDatabaseTemplates returns the StagingDatabaseTemplates field value if set, zero value otherwise.
// Deprecated
func (o *OracleStagingPushDSourceLinkSourceParameters) GetStagingDatabaseTemplates() []NameValuePair {
	if o == nil || IsNil(o.StagingDatabaseTemplates) {
		var ret []NameValuePair
		return ret
	}
	return o.StagingDatabaseTemplates
}

// GetStagingDatabaseTemplatesOk returns a tuple with the StagingDatabaseTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *OracleStagingPushDSourceLinkSourceParameters) GetStagingDatabaseTemplatesOk() ([]NameValuePair, bool) {
	if o == nil || IsNil(o.StagingDatabaseTemplates) {
		return nil, false
	}
	return o.StagingDatabaseTemplates, true
}

// HasStagingDatabaseTemplates returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasStagingDatabaseTemplates() bool {
	if o != nil && !IsNil(o.StagingDatabaseTemplates) {
		return true
	}

	return false
}

// SetStagingDatabaseTemplates gets a reference to the given []NameValuePair and assigns it to the StagingDatabaseTemplates field.
// Deprecated
func (o *OracleStagingPushDSourceLinkSourceParameters) SetStagingDatabaseTemplates(v []NameValuePair) {
	o.StagingDatabaseTemplates = v
}

// GetStagingDatabaseConfigParams returns the StagingDatabaseConfigParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OracleStagingPushDSourceLinkSourceParameters) GetStagingDatabaseConfigParams() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.StagingDatabaseConfigParams
}

// GetStagingDatabaseConfigParamsOk returns a tuple with the StagingDatabaseConfigParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OracleStagingPushDSourceLinkSourceParameters) GetStagingDatabaseConfigParamsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.StagingDatabaseConfigParams) {
		return nil, false
	}
	return &o.StagingDatabaseConfigParams, true
}

// HasStagingDatabaseConfigParams returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasStagingDatabaseConfigParams() bool {
	if o != nil && !IsNil(o.StagingDatabaseConfigParams) {
		return true
	}

	return false
}

// SetStagingDatabaseConfigParams gets a reference to the given map[string]string and assigns it to the StagingDatabaseConfigParams field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetStagingDatabaseConfigParams(v map[string]string) {
	o.StagingDatabaseConfigParams = v
}

// GetStagingContainerDatabaseReference returns the StagingContainerDatabaseReference field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetStagingContainerDatabaseReference() string {
	if o == nil || IsNil(o.StagingContainerDatabaseReference) {
		var ret string
		return ret
	}
	return *o.StagingContainerDatabaseReference
}

// GetStagingContainerDatabaseReferenceOk returns a tuple with the StagingContainerDatabaseReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetStagingContainerDatabaseReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.StagingContainerDatabaseReference) {
		return nil, false
	}
	return o.StagingContainerDatabaseReference, true
}

// HasStagingContainerDatabaseReference returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasStagingContainerDatabaseReference() bool {
	if o != nil && !IsNil(o.StagingContainerDatabaseReference) {
		return true
	}

	return false
}

// SetStagingContainerDatabaseReference gets a reference to the given string and assigns it to the StagingContainerDatabaseReference field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetStagingContainerDatabaseReference(v string) {
	o.StagingContainerDatabaseReference = &v
}

// GetOpsPreLogSync returns the OpsPreLogSync field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetOpsPreLogSync() []SourceOperation {
	if o == nil || IsNil(o.OpsPreLogSync) {
		var ret []SourceOperation
		return ret
	}
	return o.OpsPreLogSync
}

// GetOpsPreLogSyncOk returns a tuple with the OpsPreLogSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetOpsPreLogSyncOk() ([]SourceOperation, bool) {
	if o == nil || IsNil(o.OpsPreLogSync) {
		return nil, false
	}
	return o.OpsPreLogSync, true
}

// HasOpsPreLogSync returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasOpsPreLogSync() bool {
	if o != nil && !IsNil(o.OpsPreLogSync) {
		return true
	}

	return false
}

// SetOpsPreLogSync gets a reference to the given []SourceOperation and assigns it to the OpsPreLogSync field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetOpsPreLogSync(v []SourceOperation) {
	o.OpsPreLogSync = v
}

// GetTdeKeystoreConfigType returns the TdeKeystoreConfigType field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetTdeKeystoreConfigType() string {
	if o == nil || IsNil(o.TdeKeystoreConfigType) {
		var ret string
		return ret
	}
	return *o.TdeKeystoreConfigType
}

// GetTdeKeystoreConfigTypeOk returns a tuple with the TdeKeystoreConfigType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetTdeKeystoreConfigTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TdeKeystoreConfigType) {
		return nil, false
	}
	return o.TdeKeystoreConfigType, true
}

// HasTdeKeystoreConfigType returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasTdeKeystoreConfigType() bool {
	if o != nil && !IsNil(o.TdeKeystoreConfigType) {
		return true
	}

	return false
}

// SetTdeKeystoreConfigType gets a reference to the given string and assigns it to the TdeKeystoreConfigType field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetTdeKeystoreConfigType(v string) {
	o.TdeKeystoreConfigType = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetTemplateId() string {
	if o == nil || IsNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) GetTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *OracleStagingPushDSourceLinkSourceParameters) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *OracleStagingPushDSourceLinkSourceParameters) SetTemplateId(v string) {
	o.TemplateId = &v
}

func (o OracleStagingPushDSourceLinkSourceParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OracleStagingPushDSourceLinkSourceParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SourceId) {
		toSerialize["source_id"] = o.SourceId
	}
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LogSyncEnabled) {
		toSerialize["log_sync_enabled"] = o.LogSyncEnabled
	}
	if !IsNil(o.SyncPolicyId) {
		toSerialize["sync_policy_id"] = o.SyncPolicyId
	}
	if !IsNil(o.RetentionPolicyId) {
		toSerialize["retention_policy_id"] = o.RetentionPolicyId
	}
	if !IsNil(o.MakeCurrentAccountOwner) {
		toSerialize["make_current_account_owner"] = o.MakeCurrentAccountOwner
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.OpsPreSync) {
		toSerialize["ops_pre_sync"] = o.OpsPreSync
	}
	if !IsNil(o.OpsPostSync) {
		toSerialize["ops_post_sync"] = o.OpsPostSync
	}
	toSerialize["engine_id"] = o.EngineId
	if !IsNil(o.ContainerType) {
		toSerialize["container_type"] = o.ContainerType
	}
	if !IsNil(o.EnvironmentUserId) {
		toSerialize["environment_user_id"] = o.EnvironmentUserId
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	toSerialize["database_name"] = o.DatabaseName
	if !IsNil(o.DatabaseUniqueName) {
		toSerialize["database_unique_name"] = o.DatabaseUniqueName
	}
	if !IsNil(o.Sid) {
		toSerialize["sid"] = o.Sid
	}
	if !IsNil(o.MountBase) {
		toSerialize["mount_base"] = o.MountBase
	}
	if !IsNil(o.CustomEnvVariablesPairs) {
		toSerialize["custom_env_variables_pairs"] = o.CustomEnvVariablesPairs
	}
	if !IsNil(o.CustomEnvVariablesPaths) {
		toSerialize["custom_env_variables_paths"] = o.CustomEnvVariablesPaths
	}
	if !IsNil(o.AutoStagingRestart) {
		toSerialize["auto_staging_restart"] = o.AutoStagingRestart
	}
	if !IsNil(o.PhysicalStandby) {
		toSerialize["physical_standby"] = o.PhysicalStandby
	}
	if !IsNil(o.ValidateSnapshotInReadonly) {
		toSerialize["validate_snapshot_in_readonly"] = o.ValidateSnapshotInReadonly
	}
	if !IsNil(o.StagingDatabaseTemplates) {
		toSerialize["staging_database_templates"] = o.StagingDatabaseTemplates
	}
	if o.StagingDatabaseConfigParams != nil {
		toSerialize["staging_database_config_params"] = o.StagingDatabaseConfigParams
	}
	if !IsNil(o.StagingContainerDatabaseReference) {
		toSerialize["staging_container_database_reference"] = o.StagingContainerDatabaseReference
	}
	if !IsNil(o.OpsPreLogSync) {
		toSerialize["ops_pre_log_sync"] = o.OpsPreLogSync
	}
	if !IsNil(o.TdeKeystoreConfigType) {
		toSerialize["tde_keystore_config_type"] = o.TdeKeystoreConfigType
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	return toSerialize, nil
}

func (o *OracleStagingPushDSourceLinkSourceParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"engine_id",
		"database_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOracleStagingPushDSourceLinkSourceParameters := _OracleStagingPushDSourceLinkSourceParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOracleStagingPushDSourceLinkSourceParameters)

	if err != nil {
		return err
	}

	*o = OracleStagingPushDSourceLinkSourceParameters(varOracleStagingPushDSourceLinkSourceParameters)

	return err
}

type NullableOracleStagingPushDSourceLinkSourceParameters struct {
	value *OracleStagingPushDSourceLinkSourceParameters
	isSet bool
}

func (v NullableOracleStagingPushDSourceLinkSourceParameters) Get() *OracleStagingPushDSourceLinkSourceParameters {
	return v.value
}

func (v *NullableOracleStagingPushDSourceLinkSourceParameters) Set(val *OracleStagingPushDSourceLinkSourceParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleStagingPushDSourceLinkSourceParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleStagingPushDSourceLinkSourceParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleStagingPushDSourceLinkSourceParameters(val *OracleStagingPushDSourceLinkSourceParameters) *NullableOracleStagingPushDSourceLinkSourceParameters {
	return &NullableOracleStagingPushDSourceLinkSourceParameters{value: val, isSet: true}
}

func (v NullableOracleStagingPushDSourceLinkSourceParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleStagingPushDSourceLinkSourceParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


