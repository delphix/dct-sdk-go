/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"time"
)

// checks if the MaskingJobWithConnectorRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaskingJobWithConnectorRole{}

// MaskingJobWithConnectorRole A simplified job object combined with a connector ID and the connector's role in that job
type MaskingJobWithConnectorRole struct {
	// The Job entity ID.
	Id *string `json:"id,omitempty"`
	// The name of this Masking Job.
	Name *string `json:"name,omitempty"`
	// The date this MaskingJob was created.
	CreationDate *time.Time `json:"creation_date,omitempty"`
	// Whether the job is an on-the-fly masking job
	IsOnTheFlyMasking *bool `json:"is_on_the_fly_masking,omitempty"`
	// The start time of the most recent execution of this job, if available
	LastExecutionTime *time.Time `json:"last_execution_time,omitempty"`
	LastExecutionStatus *ExecutionStatus `json:"last_execution_status,omitempty"`
	Tags []Tag `json:"tags,omitempty"`
	// The ID of the connector this job is related to
	ConnectorId NullableString `json:"connector_id,omitempty"`
	// The role of the connector in the job
	ConnectorRole *string `json:"connector_role,omitempty"`
}

// NewMaskingJobWithConnectorRole instantiates a new MaskingJobWithConnectorRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaskingJobWithConnectorRole() *MaskingJobWithConnectorRole {
	this := MaskingJobWithConnectorRole{}
	return &this
}

// NewMaskingJobWithConnectorRoleWithDefaults instantiates a new MaskingJobWithConnectorRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaskingJobWithConnectorRoleWithDefaults() *MaskingJobWithConnectorRole {
	this := MaskingJobWithConnectorRole{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MaskingJobWithConnectorRole) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJobWithConnectorRole) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MaskingJobWithConnectorRole) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MaskingJobWithConnectorRole) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJobWithConnectorRole) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MaskingJobWithConnectorRole) SetName(v string) {
	o.Name = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *MaskingJobWithConnectorRole) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJobWithConnectorRole) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *MaskingJobWithConnectorRole) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetIsOnTheFlyMasking returns the IsOnTheFlyMasking field value if set, zero value otherwise.
func (o *MaskingJobWithConnectorRole) GetIsOnTheFlyMasking() bool {
	if o == nil || IsNil(o.IsOnTheFlyMasking) {
		var ret bool
		return ret
	}
	return *o.IsOnTheFlyMasking
}

// GetIsOnTheFlyMaskingOk returns a tuple with the IsOnTheFlyMasking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJobWithConnectorRole) GetIsOnTheFlyMaskingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOnTheFlyMasking) {
		return nil, false
	}
	return o.IsOnTheFlyMasking, true
}

// HasIsOnTheFlyMasking returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasIsOnTheFlyMasking() bool {
	if o != nil && !IsNil(o.IsOnTheFlyMasking) {
		return true
	}

	return false
}

// SetIsOnTheFlyMasking gets a reference to the given bool and assigns it to the IsOnTheFlyMasking field.
func (o *MaskingJobWithConnectorRole) SetIsOnTheFlyMasking(v bool) {
	o.IsOnTheFlyMasking = &v
}

// GetLastExecutionTime returns the LastExecutionTime field value if set, zero value otherwise.
func (o *MaskingJobWithConnectorRole) GetLastExecutionTime() time.Time {
	if o == nil || IsNil(o.LastExecutionTime) {
		var ret time.Time
		return ret
	}
	return *o.LastExecutionTime
}

// GetLastExecutionTimeOk returns a tuple with the LastExecutionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJobWithConnectorRole) GetLastExecutionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastExecutionTime) {
		return nil, false
	}
	return o.LastExecutionTime, true
}

// HasLastExecutionTime returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasLastExecutionTime() bool {
	if o != nil && !IsNil(o.LastExecutionTime) {
		return true
	}

	return false
}

// SetLastExecutionTime gets a reference to the given time.Time and assigns it to the LastExecutionTime field.
func (o *MaskingJobWithConnectorRole) SetLastExecutionTime(v time.Time) {
	o.LastExecutionTime = &v
}

// GetLastExecutionStatus returns the LastExecutionStatus field value if set, zero value otherwise.
func (o *MaskingJobWithConnectorRole) GetLastExecutionStatus() ExecutionStatus {
	if o == nil || IsNil(o.LastExecutionStatus) {
		var ret ExecutionStatus
		return ret
	}
	return *o.LastExecutionStatus
}

// GetLastExecutionStatusOk returns a tuple with the LastExecutionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJobWithConnectorRole) GetLastExecutionStatusOk() (*ExecutionStatus, bool) {
	if o == nil || IsNil(o.LastExecutionStatus) {
		return nil, false
	}
	return o.LastExecutionStatus, true
}

// HasLastExecutionStatus returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasLastExecutionStatus() bool {
	if o != nil && !IsNil(o.LastExecutionStatus) {
		return true
	}

	return false
}

// SetLastExecutionStatus gets a reference to the given ExecutionStatus and assigns it to the LastExecutionStatus field.
func (o *MaskingJobWithConnectorRole) SetLastExecutionStatus(v ExecutionStatus) {
	o.LastExecutionStatus = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MaskingJobWithConnectorRole) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJobWithConnectorRole) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *MaskingJobWithConnectorRole) SetTags(v []Tag) {
	o.Tags = v
}

// GetConnectorId returns the ConnectorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MaskingJobWithConnectorRole) GetConnectorId() string {
	if o == nil || IsNil(o.ConnectorId.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectorId.Get()
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MaskingJobWithConnectorRole) GetConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectorId.Get(), o.ConnectorId.IsSet()
}

// HasConnectorId returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasConnectorId() bool {
	if o != nil && o.ConnectorId.IsSet() {
		return true
	}

	return false
}

// SetConnectorId gets a reference to the given NullableString and assigns it to the ConnectorId field.
func (o *MaskingJobWithConnectorRole) SetConnectorId(v string) {
	o.ConnectorId.Set(&v)
}
// SetConnectorIdNil sets the value for ConnectorId to be an explicit nil
func (o *MaskingJobWithConnectorRole) SetConnectorIdNil() {
	o.ConnectorId.Set(nil)
}

// UnsetConnectorId ensures that no value is present for ConnectorId, not even an explicit nil
func (o *MaskingJobWithConnectorRole) UnsetConnectorId() {
	o.ConnectorId.Unset()
}

// GetConnectorRole returns the ConnectorRole field value if set, zero value otherwise.
func (o *MaskingJobWithConnectorRole) GetConnectorRole() string {
	if o == nil || IsNil(o.ConnectorRole) {
		var ret string
		return ret
	}
	return *o.ConnectorRole
}

// GetConnectorRoleOk returns a tuple with the ConnectorRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJobWithConnectorRole) GetConnectorRoleOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorRole) {
		return nil, false
	}
	return o.ConnectorRole, true
}

// HasConnectorRole returns a boolean if a field has been set.
func (o *MaskingJobWithConnectorRole) HasConnectorRole() bool {
	if o != nil && !IsNil(o.ConnectorRole) {
		return true
	}

	return false
}

// SetConnectorRole gets a reference to the given string and assigns it to the ConnectorRole field.
func (o *MaskingJobWithConnectorRole) SetConnectorRole(v string) {
	o.ConnectorRole = &v
}

func (o MaskingJobWithConnectorRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaskingJobWithConnectorRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creation_date"] = o.CreationDate
	}
	if !IsNil(o.IsOnTheFlyMasking) {
		toSerialize["is_on_the_fly_masking"] = o.IsOnTheFlyMasking
	}
	if !IsNil(o.LastExecutionTime) {
		toSerialize["last_execution_time"] = o.LastExecutionTime
	}
	if !IsNil(o.LastExecutionStatus) {
		toSerialize["last_execution_status"] = o.LastExecutionStatus
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if o.ConnectorId.IsSet() {
		toSerialize["connector_id"] = o.ConnectorId.Get()
	}
	if !IsNil(o.ConnectorRole) {
		toSerialize["connector_role"] = o.ConnectorRole
	}
	return toSerialize, nil
}

type NullableMaskingJobWithConnectorRole struct {
	value *MaskingJobWithConnectorRole
	isSet bool
}

func (v NullableMaskingJobWithConnectorRole) Get() *MaskingJobWithConnectorRole {
	return v.value
}

func (v *NullableMaskingJobWithConnectorRole) Set(val *MaskingJobWithConnectorRole) {
	v.value = val
	v.isSet = true
}

func (v NullableMaskingJobWithConnectorRole) IsSet() bool {
	return v.isSet
}

func (v *NullableMaskingJobWithConnectorRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaskingJobWithConnectorRole(val *MaskingJobWithConnectorRole) *NullableMaskingJobWithConnectorRole {
	return &NullableMaskingJobWithConnectorRole{value: val, isSet: true}
}

func (v NullableMaskingJobWithConnectorRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaskingJobWithConnectorRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


