/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"time"
)

// checks if the ComplianceJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComplianceJob{}

// ComplianceJob A masking job.
type ComplianceJob struct {
	// The Masking Job entity ID.
	Id *string `json:"id,omitempty"`
	// The name of this Masking Job.
	Name *string `json:"name,omitempty"`
	// The ID of the Rule Set used by this Masking Job (Standard Job only). For hyperscale jobs, see dataset_id.
	RuleSetId *string `json:"rule_set_id,omitempty"`
	// The name of the Rule Set used by this Masking Job (Standard Job only). For hyperscale jobs, see dataset_id.
	RuleSetName *string `json:"rule_set_name,omitempty"`
	// The type of data being masked by this Job. If the Masking Job is masking a database this is the type of the database (Standard Job only).
	ConnectorType *string `json:"connector_type,omitempty"`
	// Whether this is an on-the-fly masking job (Standard Job only).
	IsOnTheFlyMasking *bool `json:"is_on_the_fly_masking,omitempty"`
	// The date this MaskingJob was created (Standard Job only).
	CreationDate *time.Time `json:"creation_date,omitempty"`
	// The date this ComplianceJob was last executed to completion.
	LastCompletedExecutionDate *time.Time `json:"last_completed_execution_date,omitempty"`
	LastExecutionStatus *ExecutionStatus `json:"last_execution_status,omitempty"`
	// The ID of this ComplianceJob's last execution.
	LastExecutionId *string `json:"last_execution_id,omitempty"`
	// The start time of the most recent execution of this compliance job.
	LastExecutionStartTime *time.Time `json:"last_execution_start_time,omitempty"`
	// The run time of the most recent execution of this compliance job in ms.
	LastExecutionRunTime *int64 `json:"last_execution_run_time,omitempty"`
	// The username of the Connector used by the ComplianceJob (Standard Job only). For hyperscale jobs, see the connector of the dataset.
	ConnectorUsername NullableString `json:"connector_username,omitempty"`
	// The password of the Connector used by the ComplianceJob (Standard Job only). For hyperscale jobs, see the connector of the dataset.
	ConnectorPassword NullableString `json:"connector_password,omitempty"`
	// The id of the OTF source connector for this job
	OnTheFlySourceConnectorId NullableString `json:"on_the_fly_source_connector_id,omitempty"`
	// The name of the OTF source connector for this job
	OnTheFlySourceConnectorName NullableString `json:"on_the_fly_source_connector_name,omitempty"`
	// The type of the OTF source connector for this job
	OnTheFlySourceConnectorType NullableString `json:"on_the_fly_source_connector_type,omitempty"`
	// The username of the source Connector used by the on-the-fly job (Standard Job only).
	OnTheFlySourceConnectorUsername NullableString `json:"on_the_fly_source_connector_username,omitempty"`
	// The password of the source Connector used by the on-the-fly job (Standard Job only).
	OnTheFlySourceConnectorPassword NullableString `json:"on_the_fly_source_connector_password,omitempty"`
	// The type of compliance job.
	Type *string `json:"type,omitempty"`
	// The execution type of this Job.
	ExecutionType *string `json:"execution_type,omitempty"`
	// The ID of the Hyperscale instance of this job (Hyperscale Job only).
	HyperscaleInstanceId *string `json:"hyperscale_instance_id,omitempty"`
	// Description of the job (Hyperscale Job only).
	Description *string `json:"description,omitempty"`
	// Dataset of the Hyperscale Job (Hyperscale Job only).
	DatasetId *string `json:"dataset_id,omitempty"`
	// Defines whether execution data will be stored after execution is complete (Hyperscale Job only).
	RetainExecutionData *string `json:"retain_execution_data,omitempty"`
	// Maximum memory to be allocated for each Masking job (Hyperscale Job only).
	MaxMemory *int32 `json:"max_memory,omitempty"`
	// Minimum memory to be allocated for each Masking job (Hyperscale Job only).
	MinMemory *int32 `json:"min_memory,omitempty"`
	// Feedback Size for each Masking job (Hyperscale Job only).
	FeedbackSize *int32 `json:"feedback_size,omitempty"`
	// Stream Row Limit for each Masking job (Hyperscale Job only).
	StreamRowLimit *int32 `json:"stream_row_limit,omitempty"`
	// Number of input streams to be configured for Masking Job (Hyperscale Job only).
	NumInputStreams *int32 `json:"num_input_streams,omitempty"`
	// Maximum number of parallel connection that the Hyperscale instance can have with the source datasource (Hyperscale Job only).
	MaxConcurrentSourceConnections *int32 `json:"max_concurrent_source_connections,omitempty"`
	// Maximum number of parallel connection that the Hyperscale instance can have with the target datasource (Hyperscale Job only).
	MaxConcurrentTargetConnections *int32 `json:"max_concurrent_target_connections,omitempty"`
	// The degree of parallelism (DOP) per Oracle job to recreate the index in the post-load process (Hyperscale Job only).
	ParallelismDegree *int32 `json:"parallelism_degree,omitempty"`
	// The ID of the MaskingJob that was used as the source to create this job (Hyperscale Job only).
	SourceMaskingJobId *string `json:"source_masking_job_id,omitempty"`
	// The engine on which this job resides (Standard Job only).
	EngineId *string `json:"engine_id,omitempty"`
	// The name of the engine on which this job resides (Standard Job only).
	EngineName *string `json:"engine_name,omitempty"`
	// List of engines that this job can run on (Hyperscale Job only).
	EngineIds []string `json:"engine_ids,omitempty"`
	// The id of the discovery policy in use - applicable for discovery jobs only.
	DiscoveryPolicyId NullableString `json:"discovery_policy_id,omitempty"`
	// The name of the discovery policy in use - applicable for discovery jobs only.
	DiscoveryPolicyName NullableString `json:"discovery_policy_name,omitempty"`
	// The name of the environment in which this job resides on the compliance engine.
	EnvironmentName *string `json:"environment_name,omitempty"`
	// The name of the application associated with the environment in which this job resides on the compliance engine.
	ApplicationName *string `json:"application_name,omitempty"`
	Tags []Tag `json:"tags,omitempty"`
}

// NewComplianceJob instantiates a new ComplianceJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComplianceJob() *ComplianceJob {
	this := ComplianceJob{}
	return &this
}

// NewComplianceJobWithDefaults instantiates a new ComplianceJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComplianceJobWithDefaults() *ComplianceJob {
	this := ComplianceJob{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ComplianceJob) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ComplianceJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ComplianceJob) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ComplianceJob) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ComplianceJob) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ComplianceJob) SetName(v string) {
	o.Name = &v
}

// GetRuleSetId returns the RuleSetId field value if set, zero value otherwise.
func (o *ComplianceJob) GetRuleSetId() string {
	if o == nil || IsNil(o.RuleSetId) {
		var ret string
		return ret
	}
	return *o.RuleSetId
}

// GetRuleSetIdOk returns a tuple with the RuleSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetRuleSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleSetId) {
		return nil, false
	}
	return o.RuleSetId, true
}

// HasRuleSetId returns a boolean if a field has been set.
func (o *ComplianceJob) HasRuleSetId() bool {
	if o != nil && !IsNil(o.RuleSetId) {
		return true
	}

	return false
}

// SetRuleSetId gets a reference to the given string and assigns it to the RuleSetId field.
func (o *ComplianceJob) SetRuleSetId(v string) {
	o.RuleSetId = &v
}

// GetRuleSetName returns the RuleSetName field value if set, zero value otherwise.
func (o *ComplianceJob) GetRuleSetName() string {
	if o == nil || IsNil(o.RuleSetName) {
		var ret string
		return ret
	}
	return *o.RuleSetName
}

// GetRuleSetNameOk returns a tuple with the RuleSetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetRuleSetNameOk() (*string, bool) {
	if o == nil || IsNil(o.RuleSetName) {
		return nil, false
	}
	return o.RuleSetName, true
}

// HasRuleSetName returns a boolean if a field has been set.
func (o *ComplianceJob) HasRuleSetName() bool {
	if o != nil && !IsNil(o.RuleSetName) {
		return true
	}

	return false
}

// SetRuleSetName gets a reference to the given string and assigns it to the RuleSetName field.
func (o *ComplianceJob) SetRuleSetName(v string) {
	o.RuleSetName = &v
}

// GetConnectorType returns the ConnectorType field value if set, zero value otherwise.
func (o *ComplianceJob) GetConnectorType() string {
	if o == nil || IsNil(o.ConnectorType) {
		var ret string
		return ret
	}
	return *o.ConnectorType
}

// GetConnectorTypeOk returns a tuple with the ConnectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetConnectorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorType) {
		return nil, false
	}
	return o.ConnectorType, true
}

// HasConnectorType returns a boolean if a field has been set.
func (o *ComplianceJob) HasConnectorType() bool {
	if o != nil && !IsNil(o.ConnectorType) {
		return true
	}

	return false
}

// SetConnectorType gets a reference to the given string and assigns it to the ConnectorType field.
func (o *ComplianceJob) SetConnectorType(v string) {
	o.ConnectorType = &v
}

// GetIsOnTheFlyMasking returns the IsOnTheFlyMasking field value if set, zero value otherwise.
func (o *ComplianceJob) GetIsOnTheFlyMasking() bool {
	if o == nil || IsNil(o.IsOnTheFlyMasking) {
		var ret bool
		return ret
	}
	return *o.IsOnTheFlyMasking
}

// GetIsOnTheFlyMaskingOk returns a tuple with the IsOnTheFlyMasking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetIsOnTheFlyMaskingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOnTheFlyMasking) {
		return nil, false
	}
	return o.IsOnTheFlyMasking, true
}

// HasIsOnTheFlyMasking returns a boolean if a field has been set.
func (o *ComplianceJob) HasIsOnTheFlyMasking() bool {
	if o != nil && !IsNil(o.IsOnTheFlyMasking) {
		return true
	}

	return false
}

// SetIsOnTheFlyMasking gets a reference to the given bool and assigns it to the IsOnTheFlyMasking field.
func (o *ComplianceJob) SetIsOnTheFlyMasking(v bool) {
	o.IsOnTheFlyMasking = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ComplianceJob) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ComplianceJob) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *ComplianceJob) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetLastCompletedExecutionDate returns the LastCompletedExecutionDate field value if set, zero value otherwise.
func (o *ComplianceJob) GetLastCompletedExecutionDate() time.Time {
	if o == nil || IsNil(o.LastCompletedExecutionDate) {
		var ret time.Time
		return ret
	}
	return *o.LastCompletedExecutionDate
}

// GetLastCompletedExecutionDateOk returns a tuple with the LastCompletedExecutionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetLastCompletedExecutionDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCompletedExecutionDate) {
		return nil, false
	}
	return o.LastCompletedExecutionDate, true
}

// HasLastCompletedExecutionDate returns a boolean if a field has been set.
func (o *ComplianceJob) HasLastCompletedExecutionDate() bool {
	if o != nil && !IsNil(o.LastCompletedExecutionDate) {
		return true
	}

	return false
}

// SetLastCompletedExecutionDate gets a reference to the given time.Time and assigns it to the LastCompletedExecutionDate field.
func (o *ComplianceJob) SetLastCompletedExecutionDate(v time.Time) {
	o.LastCompletedExecutionDate = &v
}

// GetLastExecutionStatus returns the LastExecutionStatus field value if set, zero value otherwise.
func (o *ComplianceJob) GetLastExecutionStatus() ExecutionStatus {
	if o == nil || IsNil(o.LastExecutionStatus) {
		var ret ExecutionStatus
		return ret
	}
	return *o.LastExecutionStatus
}

// GetLastExecutionStatusOk returns a tuple with the LastExecutionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetLastExecutionStatusOk() (*ExecutionStatus, bool) {
	if o == nil || IsNil(o.LastExecutionStatus) {
		return nil, false
	}
	return o.LastExecutionStatus, true
}

// HasLastExecutionStatus returns a boolean if a field has been set.
func (o *ComplianceJob) HasLastExecutionStatus() bool {
	if o != nil && !IsNil(o.LastExecutionStatus) {
		return true
	}

	return false
}

// SetLastExecutionStatus gets a reference to the given ExecutionStatus and assigns it to the LastExecutionStatus field.
func (o *ComplianceJob) SetLastExecutionStatus(v ExecutionStatus) {
	o.LastExecutionStatus = &v
}

// GetLastExecutionId returns the LastExecutionId field value if set, zero value otherwise.
func (o *ComplianceJob) GetLastExecutionId() string {
	if o == nil || IsNil(o.LastExecutionId) {
		var ret string
		return ret
	}
	return *o.LastExecutionId
}

// GetLastExecutionIdOk returns a tuple with the LastExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetLastExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastExecutionId) {
		return nil, false
	}
	return o.LastExecutionId, true
}

// HasLastExecutionId returns a boolean if a field has been set.
func (o *ComplianceJob) HasLastExecutionId() bool {
	if o != nil && !IsNil(o.LastExecutionId) {
		return true
	}

	return false
}

// SetLastExecutionId gets a reference to the given string and assigns it to the LastExecutionId field.
func (o *ComplianceJob) SetLastExecutionId(v string) {
	o.LastExecutionId = &v
}

// GetLastExecutionStartTime returns the LastExecutionStartTime field value if set, zero value otherwise.
func (o *ComplianceJob) GetLastExecutionStartTime() time.Time {
	if o == nil || IsNil(o.LastExecutionStartTime) {
		var ret time.Time
		return ret
	}
	return *o.LastExecutionStartTime
}

// GetLastExecutionStartTimeOk returns a tuple with the LastExecutionStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetLastExecutionStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastExecutionStartTime) {
		return nil, false
	}
	return o.LastExecutionStartTime, true
}

// HasLastExecutionStartTime returns a boolean if a field has been set.
func (o *ComplianceJob) HasLastExecutionStartTime() bool {
	if o != nil && !IsNil(o.LastExecutionStartTime) {
		return true
	}

	return false
}

// SetLastExecutionStartTime gets a reference to the given time.Time and assigns it to the LastExecutionStartTime field.
func (o *ComplianceJob) SetLastExecutionStartTime(v time.Time) {
	o.LastExecutionStartTime = &v
}

// GetLastExecutionRunTime returns the LastExecutionRunTime field value if set, zero value otherwise.
func (o *ComplianceJob) GetLastExecutionRunTime() int64 {
	if o == nil || IsNil(o.LastExecutionRunTime) {
		var ret int64
		return ret
	}
	return *o.LastExecutionRunTime
}

// GetLastExecutionRunTimeOk returns a tuple with the LastExecutionRunTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetLastExecutionRunTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastExecutionRunTime) {
		return nil, false
	}
	return o.LastExecutionRunTime, true
}

// HasLastExecutionRunTime returns a boolean if a field has been set.
func (o *ComplianceJob) HasLastExecutionRunTime() bool {
	if o != nil && !IsNil(o.LastExecutionRunTime) {
		return true
	}

	return false
}

// SetLastExecutionRunTime gets a reference to the given int64 and assigns it to the LastExecutionRunTime field.
func (o *ComplianceJob) SetLastExecutionRunTime(v int64) {
	o.LastExecutionRunTime = &v
}

// GetConnectorUsername returns the ConnectorUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetConnectorUsername() string {
	if o == nil || IsNil(o.ConnectorUsername.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectorUsername.Get()
}

// GetConnectorUsernameOk returns a tuple with the ConnectorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetConnectorUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectorUsername.Get(), o.ConnectorUsername.IsSet()
}

// HasConnectorUsername returns a boolean if a field has been set.
func (o *ComplianceJob) HasConnectorUsername() bool {
	if o != nil && o.ConnectorUsername.IsSet() {
		return true
	}

	return false
}

// SetConnectorUsername gets a reference to the given NullableString and assigns it to the ConnectorUsername field.
func (o *ComplianceJob) SetConnectorUsername(v string) {
	o.ConnectorUsername.Set(&v)
}
// SetConnectorUsernameNil sets the value for ConnectorUsername to be an explicit nil
func (o *ComplianceJob) SetConnectorUsernameNil() {
	o.ConnectorUsername.Set(nil)
}

// UnsetConnectorUsername ensures that no value is present for ConnectorUsername, not even an explicit nil
func (o *ComplianceJob) UnsetConnectorUsername() {
	o.ConnectorUsername.Unset()
}

// GetConnectorPassword returns the ConnectorPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetConnectorPassword() string {
	if o == nil || IsNil(o.ConnectorPassword.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectorPassword.Get()
}

// GetConnectorPasswordOk returns a tuple with the ConnectorPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetConnectorPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectorPassword.Get(), o.ConnectorPassword.IsSet()
}

// HasConnectorPassword returns a boolean if a field has been set.
func (o *ComplianceJob) HasConnectorPassword() bool {
	if o != nil && o.ConnectorPassword.IsSet() {
		return true
	}

	return false
}

// SetConnectorPassword gets a reference to the given NullableString and assigns it to the ConnectorPassword field.
func (o *ComplianceJob) SetConnectorPassword(v string) {
	o.ConnectorPassword.Set(&v)
}
// SetConnectorPasswordNil sets the value for ConnectorPassword to be an explicit nil
func (o *ComplianceJob) SetConnectorPasswordNil() {
	o.ConnectorPassword.Set(nil)
}

// UnsetConnectorPassword ensures that no value is present for ConnectorPassword, not even an explicit nil
func (o *ComplianceJob) UnsetConnectorPassword() {
	o.ConnectorPassword.Unset()
}

// GetOnTheFlySourceConnectorId returns the OnTheFlySourceConnectorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetOnTheFlySourceConnectorId() string {
	if o == nil || IsNil(o.OnTheFlySourceConnectorId.Get()) {
		var ret string
		return ret
	}
	return *o.OnTheFlySourceConnectorId.Get()
}

// GetOnTheFlySourceConnectorIdOk returns a tuple with the OnTheFlySourceConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetOnTheFlySourceConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnTheFlySourceConnectorId.Get(), o.OnTheFlySourceConnectorId.IsSet()
}

// HasOnTheFlySourceConnectorId returns a boolean if a field has been set.
func (o *ComplianceJob) HasOnTheFlySourceConnectorId() bool {
	if o != nil && o.OnTheFlySourceConnectorId.IsSet() {
		return true
	}

	return false
}

// SetOnTheFlySourceConnectorId gets a reference to the given NullableString and assigns it to the OnTheFlySourceConnectorId field.
func (o *ComplianceJob) SetOnTheFlySourceConnectorId(v string) {
	o.OnTheFlySourceConnectorId.Set(&v)
}
// SetOnTheFlySourceConnectorIdNil sets the value for OnTheFlySourceConnectorId to be an explicit nil
func (o *ComplianceJob) SetOnTheFlySourceConnectorIdNil() {
	o.OnTheFlySourceConnectorId.Set(nil)
}

// UnsetOnTheFlySourceConnectorId ensures that no value is present for OnTheFlySourceConnectorId, not even an explicit nil
func (o *ComplianceJob) UnsetOnTheFlySourceConnectorId() {
	o.OnTheFlySourceConnectorId.Unset()
}

// GetOnTheFlySourceConnectorName returns the OnTheFlySourceConnectorName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetOnTheFlySourceConnectorName() string {
	if o == nil || IsNil(o.OnTheFlySourceConnectorName.Get()) {
		var ret string
		return ret
	}
	return *o.OnTheFlySourceConnectorName.Get()
}

// GetOnTheFlySourceConnectorNameOk returns a tuple with the OnTheFlySourceConnectorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetOnTheFlySourceConnectorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnTheFlySourceConnectorName.Get(), o.OnTheFlySourceConnectorName.IsSet()
}

// HasOnTheFlySourceConnectorName returns a boolean if a field has been set.
func (o *ComplianceJob) HasOnTheFlySourceConnectorName() bool {
	if o != nil && o.OnTheFlySourceConnectorName.IsSet() {
		return true
	}

	return false
}

// SetOnTheFlySourceConnectorName gets a reference to the given NullableString and assigns it to the OnTheFlySourceConnectorName field.
func (o *ComplianceJob) SetOnTheFlySourceConnectorName(v string) {
	o.OnTheFlySourceConnectorName.Set(&v)
}
// SetOnTheFlySourceConnectorNameNil sets the value for OnTheFlySourceConnectorName to be an explicit nil
func (o *ComplianceJob) SetOnTheFlySourceConnectorNameNil() {
	o.OnTheFlySourceConnectorName.Set(nil)
}

// UnsetOnTheFlySourceConnectorName ensures that no value is present for OnTheFlySourceConnectorName, not even an explicit nil
func (o *ComplianceJob) UnsetOnTheFlySourceConnectorName() {
	o.OnTheFlySourceConnectorName.Unset()
}

// GetOnTheFlySourceConnectorType returns the OnTheFlySourceConnectorType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetOnTheFlySourceConnectorType() string {
	if o == nil || IsNil(o.OnTheFlySourceConnectorType.Get()) {
		var ret string
		return ret
	}
	return *o.OnTheFlySourceConnectorType.Get()
}

// GetOnTheFlySourceConnectorTypeOk returns a tuple with the OnTheFlySourceConnectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetOnTheFlySourceConnectorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnTheFlySourceConnectorType.Get(), o.OnTheFlySourceConnectorType.IsSet()
}

// HasOnTheFlySourceConnectorType returns a boolean if a field has been set.
func (o *ComplianceJob) HasOnTheFlySourceConnectorType() bool {
	if o != nil && o.OnTheFlySourceConnectorType.IsSet() {
		return true
	}

	return false
}

// SetOnTheFlySourceConnectorType gets a reference to the given NullableString and assigns it to the OnTheFlySourceConnectorType field.
func (o *ComplianceJob) SetOnTheFlySourceConnectorType(v string) {
	o.OnTheFlySourceConnectorType.Set(&v)
}
// SetOnTheFlySourceConnectorTypeNil sets the value for OnTheFlySourceConnectorType to be an explicit nil
func (o *ComplianceJob) SetOnTheFlySourceConnectorTypeNil() {
	o.OnTheFlySourceConnectorType.Set(nil)
}

// UnsetOnTheFlySourceConnectorType ensures that no value is present for OnTheFlySourceConnectorType, not even an explicit nil
func (o *ComplianceJob) UnsetOnTheFlySourceConnectorType() {
	o.OnTheFlySourceConnectorType.Unset()
}

// GetOnTheFlySourceConnectorUsername returns the OnTheFlySourceConnectorUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetOnTheFlySourceConnectorUsername() string {
	if o == nil || IsNil(o.OnTheFlySourceConnectorUsername.Get()) {
		var ret string
		return ret
	}
	return *o.OnTheFlySourceConnectorUsername.Get()
}

// GetOnTheFlySourceConnectorUsernameOk returns a tuple with the OnTheFlySourceConnectorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetOnTheFlySourceConnectorUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnTheFlySourceConnectorUsername.Get(), o.OnTheFlySourceConnectorUsername.IsSet()
}

// HasOnTheFlySourceConnectorUsername returns a boolean if a field has been set.
func (o *ComplianceJob) HasOnTheFlySourceConnectorUsername() bool {
	if o != nil && o.OnTheFlySourceConnectorUsername.IsSet() {
		return true
	}

	return false
}

// SetOnTheFlySourceConnectorUsername gets a reference to the given NullableString and assigns it to the OnTheFlySourceConnectorUsername field.
func (o *ComplianceJob) SetOnTheFlySourceConnectorUsername(v string) {
	o.OnTheFlySourceConnectorUsername.Set(&v)
}
// SetOnTheFlySourceConnectorUsernameNil sets the value for OnTheFlySourceConnectorUsername to be an explicit nil
func (o *ComplianceJob) SetOnTheFlySourceConnectorUsernameNil() {
	o.OnTheFlySourceConnectorUsername.Set(nil)
}

// UnsetOnTheFlySourceConnectorUsername ensures that no value is present for OnTheFlySourceConnectorUsername, not even an explicit nil
func (o *ComplianceJob) UnsetOnTheFlySourceConnectorUsername() {
	o.OnTheFlySourceConnectorUsername.Unset()
}

// GetOnTheFlySourceConnectorPassword returns the OnTheFlySourceConnectorPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetOnTheFlySourceConnectorPassword() string {
	if o == nil || IsNil(o.OnTheFlySourceConnectorPassword.Get()) {
		var ret string
		return ret
	}
	return *o.OnTheFlySourceConnectorPassword.Get()
}

// GetOnTheFlySourceConnectorPasswordOk returns a tuple with the OnTheFlySourceConnectorPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetOnTheFlySourceConnectorPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnTheFlySourceConnectorPassword.Get(), o.OnTheFlySourceConnectorPassword.IsSet()
}

// HasOnTheFlySourceConnectorPassword returns a boolean if a field has been set.
func (o *ComplianceJob) HasOnTheFlySourceConnectorPassword() bool {
	if o != nil && o.OnTheFlySourceConnectorPassword.IsSet() {
		return true
	}

	return false
}

// SetOnTheFlySourceConnectorPassword gets a reference to the given NullableString and assigns it to the OnTheFlySourceConnectorPassword field.
func (o *ComplianceJob) SetOnTheFlySourceConnectorPassword(v string) {
	o.OnTheFlySourceConnectorPassword.Set(&v)
}
// SetOnTheFlySourceConnectorPasswordNil sets the value for OnTheFlySourceConnectorPassword to be an explicit nil
func (o *ComplianceJob) SetOnTheFlySourceConnectorPasswordNil() {
	o.OnTheFlySourceConnectorPassword.Set(nil)
}

// UnsetOnTheFlySourceConnectorPassword ensures that no value is present for OnTheFlySourceConnectorPassword, not even an explicit nil
func (o *ComplianceJob) UnsetOnTheFlySourceConnectorPassword() {
	o.OnTheFlySourceConnectorPassword.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ComplianceJob) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ComplianceJob) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ComplianceJob) SetType(v string) {
	o.Type = &v
}

// GetExecutionType returns the ExecutionType field value if set, zero value otherwise.
func (o *ComplianceJob) GetExecutionType() string {
	if o == nil || IsNil(o.ExecutionType) {
		var ret string
		return ret
	}
	return *o.ExecutionType
}

// GetExecutionTypeOk returns a tuple with the ExecutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetExecutionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionType) {
		return nil, false
	}
	return o.ExecutionType, true
}

// HasExecutionType returns a boolean if a field has been set.
func (o *ComplianceJob) HasExecutionType() bool {
	if o != nil && !IsNil(o.ExecutionType) {
		return true
	}

	return false
}

// SetExecutionType gets a reference to the given string and assigns it to the ExecutionType field.
func (o *ComplianceJob) SetExecutionType(v string) {
	o.ExecutionType = &v
}

// GetHyperscaleInstanceId returns the HyperscaleInstanceId field value if set, zero value otherwise.
func (o *ComplianceJob) GetHyperscaleInstanceId() string {
	if o == nil || IsNil(o.HyperscaleInstanceId) {
		var ret string
		return ret
	}
	return *o.HyperscaleInstanceId
}

// GetHyperscaleInstanceIdOk returns a tuple with the HyperscaleInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetHyperscaleInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.HyperscaleInstanceId) {
		return nil, false
	}
	return o.HyperscaleInstanceId, true
}

// HasHyperscaleInstanceId returns a boolean if a field has been set.
func (o *ComplianceJob) HasHyperscaleInstanceId() bool {
	if o != nil && !IsNil(o.HyperscaleInstanceId) {
		return true
	}

	return false
}

// SetHyperscaleInstanceId gets a reference to the given string and assigns it to the HyperscaleInstanceId field.
func (o *ComplianceJob) SetHyperscaleInstanceId(v string) {
	o.HyperscaleInstanceId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ComplianceJob) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ComplianceJob) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ComplianceJob) SetDescription(v string) {
	o.Description = &v
}

// GetDatasetId returns the DatasetId field value if set, zero value otherwise.
func (o *ComplianceJob) GetDatasetId() string {
	if o == nil || IsNil(o.DatasetId) {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetDatasetIdOk() (*string, bool) {
	if o == nil || IsNil(o.DatasetId) {
		return nil, false
	}
	return o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *ComplianceJob) HasDatasetId() bool {
	if o != nil && !IsNil(o.DatasetId) {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *ComplianceJob) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetRetainExecutionData returns the RetainExecutionData field value if set, zero value otherwise.
func (o *ComplianceJob) GetRetainExecutionData() string {
	if o == nil || IsNil(o.RetainExecutionData) {
		var ret string
		return ret
	}
	return *o.RetainExecutionData
}

// GetRetainExecutionDataOk returns a tuple with the RetainExecutionData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetRetainExecutionDataOk() (*string, bool) {
	if o == nil || IsNil(o.RetainExecutionData) {
		return nil, false
	}
	return o.RetainExecutionData, true
}

// HasRetainExecutionData returns a boolean if a field has been set.
func (o *ComplianceJob) HasRetainExecutionData() bool {
	if o != nil && !IsNil(o.RetainExecutionData) {
		return true
	}

	return false
}

// SetRetainExecutionData gets a reference to the given string and assigns it to the RetainExecutionData field.
func (o *ComplianceJob) SetRetainExecutionData(v string) {
	o.RetainExecutionData = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *ComplianceJob) GetMaxMemory() int32 {
	if o == nil || IsNil(o.MaxMemory) {
		var ret int32
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetMaxMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxMemory) {
		return nil, false
	}
	return o.MaxMemory, true
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *ComplianceJob) HasMaxMemory() bool {
	if o != nil && !IsNil(o.MaxMemory) {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given int32 and assigns it to the MaxMemory field.
func (o *ComplianceJob) SetMaxMemory(v int32) {
	o.MaxMemory = &v
}

// GetMinMemory returns the MinMemory field value if set, zero value otherwise.
func (o *ComplianceJob) GetMinMemory() int32 {
	if o == nil || IsNil(o.MinMemory) {
		var ret int32
		return ret
	}
	return *o.MinMemory
}

// GetMinMemoryOk returns a tuple with the MinMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetMinMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.MinMemory) {
		return nil, false
	}
	return o.MinMemory, true
}

// HasMinMemory returns a boolean if a field has been set.
func (o *ComplianceJob) HasMinMemory() bool {
	if o != nil && !IsNil(o.MinMemory) {
		return true
	}

	return false
}

// SetMinMemory gets a reference to the given int32 and assigns it to the MinMemory field.
func (o *ComplianceJob) SetMinMemory(v int32) {
	o.MinMemory = &v
}

// GetFeedbackSize returns the FeedbackSize field value if set, zero value otherwise.
func (o *ComplianceJob) GetFeedbackSize() int32 {
	if o == nil || IsNil(o.FeedbackSize) {
		var ret int32
		return ret
	}
	return *o.FeedbackSize
}

// GetFeedbackSizeOk returns a tuple with the FeedbackSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetFeedbackSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FeedbackSize) {
		return nil, false
	}
	return o.FeedbackSize, true
}

// HasFeedbackSize returns a boolean if a field has been set.
func (o *ComplianceJob) HasFeedbackSize() bool {
	if o != nil && !IsNil(o.FeedbackSize) {
		return true
	}

	return false
}

// SetFeedbackSize gets a reference to the given int32 and assigns it to the FeedbackSize field.
func (o *ComplianceJob) SetFeedbackSize(v int32) {
	o.FeedbackSize = &v
}

// GetStreamRowLimit returns the StreamRowLimit field value if set, zero value otherwise.
func (o *ComplianceJob) GetStreamRowLimit() int32 {
	if o == nil || IsNil(o.StreamRowLimit) {
		var ret int32
		return ret
	}
	return *o.StreamRowLimit
}

// GetStreamRowLimitOk returns a tuple with the StreamRowLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetStreamRowLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.StreamRowLimit) {
		return nil, false
	}
	return o.StreamRowLimit, true
}

// HasStreamRowLimit returns a boolean if a field has been set.
func (o *ComplianceJob) HasStreamRowLimit() bool {
	if o != nil && !IsNil(o.StreamRowLimit) {
		return true
	}

	return false
}

// SetStreamRowLimit gets a reference to the given int32 and assigns it to the StreamRowLimit field.
func (o *ComplianceJob) SetStreamRowLimit(v int32) {
	o.StreamRowLimit = &v
}

// GetNumInputStreams returns the NumInputStreams field value if set, zero value otherwise.
func (o *ComplianceJob) GetNumInputStreams() int32 {
	if o == nil || IsNil(o.NumInputStreams) {
		var ret int32
		return ret
	}
	return *o.NumInputStreams
}

// GetNumInputStreamsOk returns a tuple with the NumInputStreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetNumInputStreamsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumInputStreams) {
		return nil, false
	}
	return o.NumInputStreams, true
}

// HasNumInputStreams returns a boolean if a field has been set.
func (o *ComplianceJob) HasNumInputStreams() bool {
	if o != nil && !IsNil(o.NumInputStreams) {
		return true
	}

	return false
}

// SetNumInputStreams gets a reference to the given int32 and assigns it to the NumInputStreams field.
func (o *ComplianceJob) SetNumInputStreams(v int32) {
	o.NumInputStreams = &v
}

// GetMaxConcurrentSourceConnections returns the MaxConcurrentSourceConnections field value if set, zero value otherwise.
func (o *ComplianceJob) GetMaxConcurrentSourceConnections() int32 {
	if o == nil || IsNil(o.MaxConcurrentSourceConnections) {
		var ret int32
		return ret
	}
	return *o.MaxConcurrentSourceConnections
}

// GetMaxConcurrentSourceConnectionsOk returns a tuple with the MaxConcurrentSourceConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetMaxConcurrentSourceConnectionsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxConcurrentSourceConnections) {
		return nil, false
	}
	return o.MaxConcurrentSourceConnections, true
}

// HasMaxConcurrentSourceConnections returns a boolean if a field has been set.
func (o *ComplianceJob) HasMaxConcurrentSourceConnections() bool {
	if o != nil && !IsNil(o.MaxConcurrentSourceConnections) {
		return true
	}

	return false
}

// SetMaxConcurrentSourceConnections gets a reference to the given int32 and assigns it to the MaxConcurrentSourceConnections field.
func (o *ComplianceJob) SetMaxConcurrentSourceConnections(v int32) {
	o.MaxConcurrentSourceConnections = &v
}

// GetMaxConcurrentTargetConnections returns the MaxConcurrentTargetConnections field value if set, zero value otherwise.
func (o *ComplianceJob) GetMaxConcurrentTargetConnections() int32 {
	if o == nil || IsNil(o.MaxConcurrentTargetConnections) {
		var ret int32
		return ret
	}
	return *o.MaxConcurrentTargetConnections
}

// GetMaxConcurrentTargetConnectionsOk returns a tuple with the MaxConcurrentTargetConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetMaxConcurrentTargetConnectionsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxConcurrentTargetConnections) {
		return nil, false
	}
	return o.MaxConcurrentTargetConnections, true
}

// HasMaxConcurrentTargetConnections returns a boolean if a field has been set.
func (o *ComplianceJob) HasMaxConcurrentTargetConnections() bool {
	if o != nil && !IsNil(o.MaxConcurrentTargetConnections) {
		return true
	}

	return false
}

// SetMaxConcurrentTargetConnections gets a reference to the given int32 and assigns it to the MaxConcurrentTargetConnections field.
func (o *ComplianceJob) SetMaxConcurrentTargetConnections(v int32) {
	o.MaxConcurrentTargetConnections = &v
}

// GetParallelismDegree returns the ParallelismDegree field value if set, zero value otherwise.
func (o *ComplianceJob) GetParallelismDegree() int32 {
	if o == nil || IsNil(o.ParallelismDegree) {
		var ret int32
		return ret
	}
	return *o.ParallelismDegree
}

// GetParallelismDegreeOk returns a tuple with the ParallelismDegree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetParallelismDegreeOk() (*int32, bool) {
	if o == nil || IsNil(o.ParallelismDegree) {
		return nil, false
	}
	return o.ParallelismDegree, true
}

// HasParallelismDegree returns a boolean if a field has been set.
func (o *ComplianceJob) HasParallelismDegree() bool {
	if o != nil && !IsNil(o.ParallelismDegree) {
		return true
	}

	return false
}

// SetParallelismDegree gets a reference to the given int32 and assigns it to the ParallelismDegree field.
func (o *ComplianceJob) SetParallelismDegree(v int32) {
	o.ParallelismDegree = &v
}

// GetSourceMaskingJobId returns the SourceMaskingJobId field value if set, zero value otherwise.
func (o *ComplianceJob) GetSourceMaskingJobId() string {
	if o == nil || IsNil(o.SourceMaskingJobId) {
		var ret string
		return ret
	}
	return *o.SourceMaskingJobId
}

// GetSourceMaskingJobIdOk returns a tuple with the SourceMaskingJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetSourceMaskingJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceMaskingJobId) {
		return nil, false
	}
	return o.SourceMaskingJobId, true
}

// HasSourceMaskingJobId returns a boolean if a field has been set.
func (o *ComplianceJob) HasSourceMaskingJobId() bool {
	if o != nil && !IsNil(o.SourceMaskingJobId) {
		return true
	}

	return false
}

// SetSourceMaskingJobId gets a reference to the given string and assigns it to the SourceMaskingJobId field.
func (o *ComplianceJob) SetSourceMaskingJobId(v string) {
	o.SourceMaskingJobId = &v
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *ComplianceJob) GetEngineId() string {
	if o == nil || IsNil(o.EngineId) {
		var ret string
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetEngineIdOk() (*string, bool) {
	if o == nil || IsNil(o.EngineId) {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *ComplianceJob) HasEngineId() bool {
	if o != nil && !IsNil(o.EngineId) {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given string and assigns it to the EngineId field.
func (o *ComplianceJob) SetEngineId(v string) {
	o.EngineId = &v
}

// GetEngineName returns the EngineName field value if set, zero value otherwise.
func (o *ComplianceJob) GetEngineName() string {
	if o == nil || IsNil(o.EngineName) {
		var ret string
		return ret
	}
	return *o.EngineName
}

// GetEngineNameOk returns a tuple with the EngineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetEngineNameOk() (*string, bool) {
	if o == nil || IsNil(o.EngineName) {
		return nil, false
	}
	return o.EngineName, true
}

// HasEngineName returns a boolean if a field has been set.
func (o *ComplianceJob) HasEngineName() bool {
	if o != nil && !IsNil(o.EngineName) {
		return true
	}

	return false
}

// SetEngineName gets a reference to the given string and assigns it to the EngineName field.
func (o *ComplianceJob) SetEngineName(v string) {
	o.EngineName = &v
}

// GetEngineIds returns the EngineIds field value if set, zero value otherwise.
func (o *ComplianceJob) GetEngineIds() []string {
	if o == nil || IsNil(o.EngineIds) {
		var ret []string
		return ret
	}
	return o.EngineIds
}

// GetEngineIdsOk returns a tuple with the EngineIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetEngineIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.EngineIds) {
		return nil, false
	}
	return o.EngineIds, true
}

// HasEngineIds returns a boolean if a field has been set.
func (o *ComplianceJob) HasEngineIds() bool {
	if o != nil && !IsNil(o.EngineIds) {
		return true
	}

	return false
}

// SetEngineIds gets a reference to the given []string and assigns it to the EngineIds field.
func (o *ComplianceJob) SetEngineIds(v []string) {
	o.EngineIds = v
}

// GetDiscoveryPolicyId returns the DiscoveryPolicyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetDiscoveryPolicyId() string {
	if o == nil || IsNil(o.DiscoveryPolicyId.Get()) {
		var ret string
		return ret
	}
	return *o.DiscoveryPolicyId.Get()
}

// GetDiscoveryPolicyIdOk returns a tuple with the DiscoveryPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetDiscoveryPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscoveryPolicyId.Get(), o.DiscoveryPolicyId.IsSet()
}

// HasDiscoveryPolicyId returns a boolean if a field has been set.
func (o *ComplianceJob) HasDiscoveryPolicyId() bool {
	if o != nil && o.DiscoveryPolicyId.IsSet() {
		return true
	}

	return false
}

// SetDiscoveryPolicyId gets a reference to the given NullableString and assigns it to the DiscoveryPolicyId field.
func (o *ComplianceJob) SetDiscoveryPolicyId(v string) {
	o.DiscoveryPolicyId.Set(&v)
}
// SetDiscoveryPolicyIdNil sets the value for DiscoveryPolicyId to be an explicit nil
func (o *ComplianceJob) SetDiscoveryPolicyIdNil() {
	o.DiscoveryPolicyId.Set(nil)
}

// UnsetDiscoveryPolicyId ensures that no value is present for DiscoveryPolicyId, not even an explicit nil
func (o *ComplianceJob) UnsetDiscoveryPolicyId() {
	o.DiscoveryPolicyId.Unset()
}

// GetDiscoveryPolicyName returns the DiscoveryPolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComplianceJob) GetDiscoveryPolicyName() string {
	if o == nil || IsNil(o.DiscoveryPolicyName.Get()) {
		var ret string
		return ret
	}
	return *o.DiscoveryPolicyName.Get()
}

// GetDiscoveryPolicyNameOk returns a tuple with the DiscoveryPolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComplianceJob) GetDiscoveryPolicyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscoveryPolicyName.Get(), o.DiscoveryPolicyName.IsSet()
}

// HasDiscoveryPolicyName returns a boolean if a field has been set.
func (o *ComplianceJob) HasDiscoveryPolicyName() bool {
	if o != nil && o.DiscoveryPolicyName.IsSet() {
		return true
	}

	return false
}

// SetDiscoveryPolicyName gets a reference to the given NullableString and assigns it to the DiscoveryPolicyName field.
func (o *ComplianceJob) SetDiscoveryPolicyName(v string) {
	o.DiscoveryPolicyName.Set(&v)
}
// SetDiscoveryPolicyNameNil sets the value for DiscoveryPolicyName to be an explicit nil
func (o *ComplianceJob) SetDiscoveryPolicyNameNil() {
	o.DiscoveryPolicyName.Set(nil)
}

// UnsetDiscoveryPolicyName ensures that no value is present for DiscoveryPolicyName, not even an explicit nil
func (o *ComplianceJob) UnsetDiscoveryPolicyName() {
	o.DiscoveryPolicyName.Unset()
}

// GetEnvironmentName returns the EnvironmentName field value if set, zero value otherwise.
func (o *ComplianceJob) GetEnvironmentName() string {
	if o == nil || IsNil(o.EnvironmentName) {
		var ret string
		return ret
	}
	return *o.EnvironmentName
}

// GetEnvironmentNameOk returns a tuple with the EnvironmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetEnvironmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentName) {
		return nil, false
	}
	return o.EnvironmentName, true
}

// HasEnvironmentName returns a boolean if a field has been set.
func (o *ComplianceJob) HasEnvironmentName() bool {
	if o != nil && !IsNil(o.EnvironmentName) {
		return true
	}

	return false
}

// SetEnvironmentName gets a reference to the given string and assigns it to the EnvironmentName field.
func (o *ComplianceJob) SetEnvironmentName(v string) {
	o.EnvironmentName = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *ComplianceJob) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *ComplianceJob) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *ComplianceJob) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ComplianceJob) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceJob) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ComplianceJob) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ComplianceJob) SetTags(v []Tag) {
	o.Tags = v
}

func (o ComplianceJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComplianceJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RuleSetId) {
		toSerialize["rule_set_id"] = o.RuleSetId
	}
	if !IsNil(o.RuleSetName) {
		toSerialize["rule_set_name"] = o.RuleSetName
	}
	if !IsNil(o.ConnectorType) {
		toSerialize["connector_type"] = o.ConnectorType
	}
	if !IsNil(o.IsOnTheFlyMasking) {
		toSerialize["is_on_the_fly_masking"] = o.IsOnTheFlyMasking
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creation_date"] = o.CreationDate
	}
	if !IsNil(o.LastCompletedExecutionDate) {
		toSerialize["last_completed_execution_date"] = o.LastCompletedExecutionDate
	}
	if !IsNil(o.LastExecutionStatus) {
		toSerialize["last_execution_status"] = o.LastExecutionStatus
	}
	if !IsNil(o.LastExecutionId) {
		toSerialize["last_execution_id"] = o.LastExecutionId
	}
	if !IsNil(o.LastExecutionStartTime) {
		toSerialize["last_execution_start_time"] = o.LastExecutionStartTime
	}
	if !IsNil(o.LastExecutionRunTime) {
		toSerialize["last_execution_run_time"] = o.LastExecutionRunTime
	}
	if o.ConnectorUsername.IsSet() {
		toSerialize["connector_username"] = o.ConnectorUsername.Get()
	}
	if o.ConnectorPassword.IsSet() {
		toSerialize["connector_password"] = o.ConnectorPassword.Get()
	}
	if o.OnTheFlySourceConnectorId.IsSet() {
		toSerialize["on_the_fly_source_connector_id"] = o.OnTheFlySourceConnectorId.Get()
	}
	if o.OnTheFlySourceConnectorName.IsSet() {
		toSerialize["on_the_fly_source_connector_name"] = o.OnTheFlySourceConnectorName.Get()
	}
	if o.OnTheFlySourceConnectorType.IsSet() {
		toSerialize["on_the_fly_source_connector_type"] = o.OnTheFlySourceConnectorType.Get()
	}
	if o.OnTheFlySourceConnectorUsername.IsSet() {
		toSerialize["on_the_fly_source_connector_username"] = o.OnTheFlySourceConnectorUsername.Get()
	}
	if o.OnTheFlySourceConnectorPassword.IsSet() {
		toSerialize["on_the_fly_source_connector_password"] = o.OnTheFlySourceConnectorPassword.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ExecutionType) {
		toSerialize["execution_type"] = o.ExecutionType
	}
	if !IsNil(o.HyperscaleInstanceId) {
		toSerialize["hyperscale_instance_id"] = o.HyperscaleInstanceId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DatasetId) {
		toSerialize["dataset_id"] = o.DatasetId
	}
	if !IsNil(o.RetainExecutionData) {
		toSerialize["retain_execution_data"] = o.RetainExecutionData
	}
	if !IsNil(o.MaxMemory) {
		toSerialize["max_memory"] = o.MaxMemory
	}
	if !IsNil(o.MinMemory) {
		toSerialize["min_memory"] = o.MinMemory
	}
	if !IsNil(o.FeedbackSize) {
		toSerialize["feedback_size"] = o.FeedbackSize
	}
	if !IsNil(o.StreamRowLimit) {
		toSerialize["stream_row_limit"] = o.StreamRowLimit
	}
	if !IsNil(o.NumInputStreams) {
		toSerialize["num_input_streams"] = o.NumInputStreams
	}
	if !IsNil(o.MaxConcurrentSourceConnections) {
		toSerialize["max_concurrent_source_connections"] = o.MaxConcurrentSourceConnections
	}
	if !IsNil(o.MaxConcurrentTargetConnections) {
		toSerialize["max_concurrent_target_connections"] = o.MaxConcurrentTargetConnections
	}
	if !IsNil(o.ParallelismDegree) {
		toSerialize["parallelism_degree"] = o.ParallelismDegree
	}
	if !IsNil(o.SourceMaskingJobId) {
		toSerialize["source_masking_job_id"] = o.SourceMaskingJobId
	}
	if !IsNil(o.EngineId) {
		toSerialize["engine_id"] = o.EngineId
	}
	if !IsNil(o.EngineName) {
		toSerialize["engine_name"] = o.EngineName
	}
	if !IsNil(o.EngineIds) {
		toSerialize["engine_ids"] = o.EngineIds
	}
	if o.DiscoveryPolicyId.IsSet() {
		toSerialize["discovery_policy_id"] = o.DiscoveryPolicyId.Get()
	}
	if o.DiscoveryPolicyName.IsSet() {
		toSerialize["discovery_policy_name"] = o.DiscoveryPolicyName.Get()
	}
	if !IsNil(o.EnvironmentName) {
		toSerialize["environment_name"] = o.EnvironmentName
	}
	if !IsNil(o.ApplicationName) {
		toSerialize["application_name"] = o.ApplicationName
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableComplianceJob struct {
	value *ComplianceJob
	isSet bool
}

func (v NullableComplianceJob) Get() *ComplianceJob {
	return v.value
}

func (v *NullableComplianceJob) Set(val *ComplianceJob) {
	v.value = val
	v.isSet = true
}

func (v NullableComplianceJob) IsSet() bool {
	return v.isSet
}

func (v *NullableComplianceJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComplianceJob(val *ComplianceJob) *NullableComplianceJob {
	return &NullableComplianceJob{value: val, isSet: true}
}

func (v NullableComplianceJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComplianceJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


