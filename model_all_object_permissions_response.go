/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the AllObjectPermissionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllObjectPermissionsResponse{}

// AllObjectPermissionsResponse struct for AllObjectPermissionsResponse
type AllObjectPermissionsResponse struct {
	ObjectPermissions []PermissionObject `json:"object_permissions,omitempty"`
}

// NewAllObjectPermissionsResponse instantiates a new AllObjectPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllObjectPermissionsResponse() *AllObjectPermissionsResponse {
	this := AllObjectPermissionsResponse{}
	return &this
}

// NewAllObjectPermissionsResponseWithDefaults instantiates a new AllObjectPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllObjectPermissionsResponseWithDefaults() *AllObjectPermissionsResponse {
	this := AllObjectPermissionsResponse{}
	return &this
}

// GetObjectPermissions returns the ObjectPermissions field value if set, zero value otherwise.
func (o *AllObjectPermissionsResponse) GetObjectPermissions() []PermissionObject {
	if o == nil || IsNil(o.ObjectPermissions) {
		var ret []PermissionObject
		return ret
	}
	return o.ObjectPermissions
}

// GetObjectPermissionsOk returns a tuple with the ObjectPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllObjectPermissionsResponse) GetObjectPermissionsOk() ([]PermissionObject, bool) {
	if o == nil || IsNil(o.ObjectPermissions) {
		return nil, false
	}
	return o.ObjectPermissions, true
}

// HasObjectPermissions returns a boolean if a field has been set.
func (o *AllObjectPermissionsResponse) HasObjectPermissions() bool {
	if o != nil && !IsNil(o.ObjectPermissions) {
		return true
	}

	return false
}

// SetObjectPermissions gets a reference to the given []PermissionObject and assigns it to the ObjectPermissions field.
func (o *AllObjectPermissionsResponse) SetObjectPermissions(v []PermissionObject) {
	o.ObjectPermissions = v
}

func (o AllObjectPermissionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllObjectPermissionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectPermissions) {
		toSerialize["object_permissions"] = o.ObjectPermissions
	}
	return toSerialize, nil
}

type NullableAllObjectPermissionsResponse struct {
	value *AllObjectPermissionsResponse
	isSet bool
}

func (v NullableAllObjectPermissionsResponse) Get() *AllObjectPermissionsResponse {
	return v.value
}

func (v *NullableAllObjectPermissionsResponse) Set(val *AllObjectPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAllObjectPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAllObjectPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllObjectPermissionsResponse(val *AllObjectPermissionsResponse) *NullableAllObjectPermissionsResponse {
	return &NullableAllObjectPermissionsResponse{value: val, isSet: true}
}

func (v NullableAllObjectPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllObjectPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


