/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the SearchDataRiskReportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchDataRiskReportResponse{}

// SearchDataRiskReportResponse struct for SearchDataRiskReportResponse
type SearchDataRiskReportResponse struct {
	Items []DataRiskData `json:"items,omitempty"`
	ResponseMetadata *PaginatedResponseMetadata `json:"response_metadata,omitempty"`
	Totals *DataRiskReportTotals `json:"totals,omitempty"`
}

// NewSearchDataRiskReportResponse instantiates a new SearchDataRiskReportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchDataRiskReportResponse() *SearchDataRiskReportResponse {
	this := SearchDataRiskReportResponse{}
	return &this
}

// NewSearchDataRiskReportResponseWithDefaults instantiates a new SearchDataRiskReportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchDataRiskReportResponseWithDefaults() *SearchDataRiskReportResponse {
	this := SearchDataRiskReportResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *SearchDataRiskReportResponse) GetItems() []DataRiskData {
	if o == nil || IsNil(o.Items) {
		var ret []DataRiskData
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataRiskReportResponse) GetItemsOk() ([]DataRiskData, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *SearchDataRiskReportResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []DataRiskData and assigns it to the Items field.
func (o *SearchDataRiskReportResponse) SetItems(v []DataRiskData) {
	o.Items = v
}

// GetResponseMetadata returns the ResponseMetadata field value if set, zero value otherwise.
func (o *SearchDataRiskReportResponse) GetResponseMetadata() PaginatedResponseMetadata {
	if o == nil || IsNil(o.ResponseMetadata) {
		var ret PaginatedResponseMetadata
		return ret
	}
	return *o.ResponseMetadata
}

// GetResponseMetadataOk returns a tuple with the ResponseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataRiskReportResponse) GetResponseMetadataOk() (*PaginatedResponseMetadata, bool) {
	if o == nil || IsNil(o.ResponseMetadata) {
		return nil, false
	}
	return o.ResponseMetadata, true
}

// HasResponseMetadata returns a boolean if a field has been set.
func (o *SearchDataRiskReportResponse) HasResponseMetadata() bool {
	if o != nil && !IsNil(o.ResponseMetadata) {
		return true
	}

	return false
}

// SetResponseMetadata gets a reference to the given PaginatedResponseMetadata and assigns it to the ResponseMetadata field.
func (o *SearchDataRiskReportResponse) SetResponseMetadata(v PaginatedResponseMetadata) {
	o.ResponseMetadata = &v
}

// GetTotals returns the Totals field value if set, zero value otherwise.
func (o *SearchDataRiskReportResponse) GetTotals() DataRiskReportTotals {
	if o == nil || IsNil(o.Totals) {
		var ret DataRiskReportTotals
		return ret
	}
	return *o.Totals
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataRiskReportResponse) GetTotalsOk() (*DataRiskReportTotals, bool) {
	if o == nil || IsNil(o.Totals) {
		return nil, false
	}
	return o.Totals, true
}

// HasTotals returns a boolean if a field has been set.
func (o *SearchDataRiskReportResponse) HasTotals() bool {
	if o != nil && !IsNil(o.Totals) {
		return true
	}

	return false
}

// SetTotals gets a reference to the given DataRiskReportTotals and assigns it to the Totals field.
func (o *SearchDataRiskReportResponse) SetTotals(v DataRiskReportTotals) {
	o.Totals = &v
}

func (o SearchDataRiskReportResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchDataRiskReportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.ResponseMetadata) {
		toSerialize["response_metadata"] = o.ResponseMetadata
	}
	if !IsNil(o.Totals) {
		toSerialize["totals"] = o.Totals
	}
	return toSerialize, nil
}

type NullableSearchDataRiskReportResponse struct {
	value *SearchDataRiskReportResponse
	isSet bool
}

func (v NullableSearchDataRiskReportResponse) Get() *SearchDataRiskReportResponse {
	return v.value
}

func (v *NullableSearchDataRiskReportResponse) Set(val *SearchDataRiskReportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchDataRiskReportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchDataRiskReportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchDataRiskReportResponse(val *SearchDataRiskReportResponse) *NullableSearchDataRiskReportResponse {
	return &NullableSearchDataRiskReportResponse{value: val, isSet: true}
}

func (v NullableSearchDataRiskReportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchDataRiskReportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


