/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the AccountCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountCreateResponse{}

// AccountCreateResponse struct for AccountCreateResponse
type AccountCreateResponse struct {
	// The opaque token to use to authenticate for other API calls. The token must be included in all HTTP API calls in a request header named \"Authorization\", and prefixed with \"apk \" to denote that it is a proprietary API key format. For instance, if the token is \"abc123\", request must contain the following HTTP request header: \"Authorization: apk abc123\". 
	Token *string `json:"token,omitempty"`
	// Numeric ID of the created Account.
	Id *int64 `json:"id,omitempty"`
	// First name of the created Account.
	FirstName *string `json:"first_name,omitempty"`
	// Last name of the created Account.
	LastName *string `json:"last_name,omitempty"`
	// Email of the created Account.
	Email *string `json:"email,omitempty"`
	// Username of the created Account.
	Username *string `json:"username,omitempty"`
	// The LDAP principal of the created Account.
	LdapPrincipal *string `json:"ldap_principal,omitempty"`
	// The tags to be created for this Account.
	Tags []Tag `json:"tags,omitempty"`
}

// NewAccountCreateResponse instantiates a new AccountCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountCreateResponse() *AccountCreateResponse {
	this := AccountCreateResponse{}
	return &this
}

// NewAccountCreateResponseWithDefaults instantiates a new AccountCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountCreateResponseWithDefaults() *AccountCreateResponse {
	this := AccountCreateResponse{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AccountCreateResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AccountCreateResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AccountCreateResponse) SetToken(v string) {
	o.Token = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountCreateResponse) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateResponse) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountCreateResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AccountCreateResponse) SetId(v int64) {
	o.Id = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *AccountCreateResponse) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateResponse) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *AccountCreateResponse) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *AccountCreateResponse) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *AccountCreateResponse) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateResponse) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *AccountCreateResponse) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *AccountCreateResponse) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AccountCreateResponse) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateResponse) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AccountCreateResponse) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AccountCreateResponse) SetEmail(v string) {
	o.Email = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AccountCreateResponse) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateResponse) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AccountCreateResponse) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AccountCreateResponse) SetUsername(v string) {
	o.Username = &v
}

// GetLdapPrincipal returns the LdapPrincipal field value if set, zero value otherwise.
func (o *AccountCreateResponse) GetLdapPrincipal() string {
	if o == nil || IsNil(o.LdapPrincipal) {
		var ret string
		return ret
	}
	return *o.LdapPrincipal
}

// GetLdapPrincipalOk returns a tuple with the LdapPrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateResponse) GetLdapPrincipalOk() (*string, bool) {
	if o == nil || IsNil(o.LdapPrincipal) {
		return nil, false
	}
	return o.LdapPrincipal, true
}

// HasLdapPrincipal returns a boolean if a field has been set.
func (o *AccountCreateResponse) HasLdapPrincipal() bool {
	if o != nil && !IsNil(o.LdapPrincipal) {
		return true
	}

	return false
}

// SetLdapPrincipal gets a reference to the given string and assigns it to the LdapPrincipal field.
func (o *AccountCreateResponse) SetLdapPrincipal(v string) {
	o.LdapPrincipal = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AccountCreateResponse) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreateResponse) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AccountCreateResponse) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *AccountCreateResponse) SetTags(v []Tag) {
	o.Tags = v
}

func (o AccountCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.LdapPrincipal) {
		toSerialize["ldap_principal"] = o.LdapPrincipal
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableAccountCreateResponse struct {
	value *AccountCreateResponse
	isSet bool
}

func (v NullableAccountCreateResponse) Get() *AccountCreateResponse {
	return v.value
}

func (v *NullableAccountCreateResponse) Set(val *AccountCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountCreateResponse(val *AccountCreateResponse) *NullableAccountCreateResponse {
	return &NullableAccountCreateResponse{value: val, isSet: true}
}

func (v NullableAccountCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


