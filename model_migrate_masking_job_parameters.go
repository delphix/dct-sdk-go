/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MigrateMaskingJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrateMaskingJobParameters{}

// MigrateMaskingJobParameters Parameters to migrate a masking job.
type MigrateMaskingJobParameters struct {
	// The ID of the engine to migrate the job to.
	TargetEngineId string `json:"target_engine_id"`
	// The ID or name of the source environment on the target engine. This only applies to On-The-Fly jobs.
	SourceEnvironmentId *string `json:"source_environment_id,omitempty"`
	// The ID or name of the target environment on the target engine to migrate the job into.
	TargetEnvironmentId *string `json:"target_environment_id,omitempty"`
	// Whether to overwrite objects that already exist on the target engine.
	ForceOverwrite *bool `json:"force_overwrite,omitempty"`
}

type _MigrateMaskingJobParameters MigrateMaskingJobParameters

// NewMigrateMaskingJobParameters instantiates a new MigrateMaskingJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrateMaskingJobParameters(targetEngineId string) *MigrateMaskingJobParameters {
	this := MigrateMaskingJobParameters{}
	this.TargetEngineId = targetEngineId
	var forceOverwrite bool = false
	this.ForceOverwrite = &forceOverwrite
	return &this
}

// NewMigrateMaskingJobParametersWithDefaults instantiates a new MigrateMaskingJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrateMaskingJobParametersWithDefaults() *MigrateMaskingJobParameters {
	this := MigrateMaskingJobParameters{}
	var forceOverwrite bool = false
	this.ForceOverwrite = &forceOverwrite
	return &this
}

// GetTargetEngineId returns the TargetEngineId field value
func (o *MigrateMaskingJobParameters) GetTargetEngineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetEngineId
}

// GetTargetEngineIdOk returns a tuple with the TargetEngineId field value
// and a boolean to check if the value has been set.
func (o *MigrateMaskingJobParameters) GetTargetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetEngineId, true
}

// SetTargetEngineId sets field value
func (o *MigrateMaskingJobParameters) SetTargetEngineId(v string) {
	o.TargetEngineId = v
}

// GetSourceEnvironmentId returns the SourceEnvironmentId field value if set, zero value otherwise.
func (o *MigrateMaskingJobParameters) GetSourceEnvironmentId() string {
	if o == nil || IsNil(o.SourceEnvironmentId) {
		var ret string
		return ret
	}
	return *o.SourceEnvironmentId
}

// GetSourceEnvironmentIdOk returns a tuple with the SourceEnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrateMaskingJobParameters) GetSourceEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceEnvironmentId) {
		return nil, false
	}
	return o.SourceEnvironmentId, true
}

// HasSourceEnvironmentId returns a boolean if a field has been set.
func (o *MigrateMaskingJobParameters) HasSourceEnvironmentId() bool {
	if o != nil && !IsNil(o.SourceEnvironmentId) {
		return true
	}

	return false
}

// SetSourceEnvironmentId gets a reference to the given string and assigns it to the SourceEnvironmentId field.
func (o *MigrateMaskingJobParameters) SetSourceEnvironmentId(v string) {
	o.SourceEnvironmentId = &v
}

// GetTargetEnvironmentId returns the TargetEnvironmentId field value if set, zero value otherwise.
func (o *MigrateMaskingJobParameters) GetTargetEnvironmentId() string {
	if o == nil || IsNil(o.TargetEnvironmentId) {
		var ret string
		return ret
	}
	return *o.TargetEnvironmentId
}

// GetTargetEnvironmentIdOk returns a tuple with the TargetEnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrateMaskingJobParameters) GetTargetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetEnvironmentId) {
		return nil, false
	}
	return o.TargetEnvironmentId, true
}

// HasTargetEnvironmentId returns a boolean if a field has been set.
func (o *MigrateMaskingJobParameters) HasTargetEnvironmentId() bool {
	if o != nil && !IsNil(o.TargetEnvironmentId) {
		return true
	}

	return false
}

// SetTargetEnvironmentId gets a reference to the given string and assigns it to the TargetEnvironmentId field.
func (o *MigrateMaskingJobParameters) SetTargetEnvironmentId(v string) {
	o.TargetEnvironmentId = &v
}

// GetForceOverwrite returns the ForceOverwrite field value if set, zero value otherwise.
func (o *MigrateMaskingJobParameters) GetForceOverwrite() bool {
	if o == nil || IsNil(o.ForceOverwrite) {
		var ret bool
		return ret
	}
	return *o.ForceOverwrite
}

// GetForceOverwriteOk returns a tuple with the ForceOverwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrateMaskingJobParameters) GetForceOverwriteOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceOverwrite) {
		return nil, false
	}
	return o.ForceOverwrite, true
}

// HasForceOverwrite returns a boolean if a field has been set.
func (o *MigrateMaskingJobParameters) HasForceOverwrite() bool {
	if o != nil && !IsNil(o.ForceOverwrite) {
		return true
	}

	return false
}

// SetForceOverwrite gets a reference to the given bool and assigns it to the ForceOverwrite field.
func (o *MigrateMaskingJobParameters) SetForceOverwrite(v bool) {
	o.ForceOverwrite = &v
}

func (o MigrateMaskingJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrateMaskingJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["target_engine_id"] = o.TargetEngineId
	if !IsNil(o.SourceEnvironmentId) {
		toSerialize["source_environment_id"] = o.SourceEnvironmentId
	}
	if !IsNil(o.TargetEnvironmentId) {
		toSerialize["target_environment_id"] = o.TargetEnvironmentId
	}
	if !IsNil(o.ForceOverwrite) {
		toSerialize["force_overwrite"] = o.ForceOverwrite
	}
	return toSerialize, nil
}

func (o *MigrateMaskingJobParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"target_engine_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMigrateMaskingJobParameters := _MigrateMaskingJobParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMigrateMaskingJobParameters)

	if err != nil {
		return err
	}

	*o = MigrateMaskingJobParameters(varMigrateMaskingJobParameters)

	return err
}

type NullableMigrateMaskingJobParameters struct {
	value *MigrateMaskingJobParameters
	isSet bool
}

func (v NullableMigrateMaskingJobParameters) Get() *MigrateMaskingJobParameters {
	return v.value
}

func (v *NullableMigrateMaskingJobParameters) Set(val *MigrateMaskingJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrateMaskingJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrateMaskingJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrateMaskingJobParameters(val *MigrateMaskingJobParameters) *NullableMigrateMaskingJobParameters {
	return &NullableMigrateMaskingJobParameters{value: val, isSet: true}
}

func (v NullableMigrateMaskingJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrateMaskingJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


