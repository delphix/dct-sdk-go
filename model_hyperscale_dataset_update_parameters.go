/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the HyperscaleDatasetUpdateParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HyperscaleDatasetUpdateParameters{}

// HyperscaleDatasetUpdateParameters The updatable properties of a Hyperscale Dataset.
type HyperscaleDatasetUpdateParameters struct {
	// The Id of the Hyperscale Mount Point used for this Dataset.
	MountPointId *string `json:"mount_point_id,omitempty"`
	// Id the Hyperscale Connector used to read sensitive data and write masked data.
	ConnectorId *string `json:"connector_id,omitempty"`
}

// NewHyperscaleDatasetUpdateParameters instantiates a new HyperscaleDatasetUpdateParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHyperscaleDatasetUpdateParameters() *HyperscaleDatasetUpdateParameters {
	this := HyperscaleDatasetUpdateParameters{}
	return &this
}

// NewHyperscaleDatasetUpdateParametersWithDefaults instantiates a new HyperscaleDatasetUpdateParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHyperscaleDatasetUpdateParametersWithDefaults() *HyperscaleDatasetUpdateParameters {
	this := HyperscaleDatasetUpdateParameters{}
	return &this
}

// GetMountPointId returns the MountPointId field value if set, zero value otherwise.
func (o *HyperscaleDatasetUpdateParameters) GetMountPointId() string {
	if o == nil || IsNil(o.MountPointId) {
		var ret string
		return ret
	}
	return *o.MountPointId
}

// GetMountPointIdOk returns a tuple with the MountPointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperscaleDatasetUpdateParameters) GetMountPointIdOk() (*string, bool) {
	if o == nil || IsNil(o.MountPointId) {
		return nil, false
	}
	return o.MountPointId, true
}

// HasMountPointId returns a boolean if a field has been set.
func (o *HyperscaleDatasetUpdateParameters) HasMountPointId() bool {
	if o != nil && !IsNil(o.MountPointId) {
		return true
	}

	return false
}

// SetMountPointId gets a reference to the given string and assigns it to the MountPointId field.
func (o *HyperscaleDatasetUpdateParameters) SetMountPointId(v string) {
	o.MountPointId = &v
}

// GetConnectorId returns the ConnectorId field value if set, zero value otherwise.
func (o *HyperscaleDatasetUpdateParameters) GetConnectorId() string {
	if o == nil || IsNil(o.ConnectorId) {
		var ret string
		return ret
	}
	return *o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HyperscaleDatasetUpdateParameters) GetConnectorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorId) {
		return nil, false
	}
	return o.ConnectorId, true
}

// HasConnectorId returns a boolean if a field has been set.
func (o *HyperscaleDatasetUpdateParameters) HasConnectorId() bool {
	if o != nil && !IsNil(o.ConnectorId) {
		return true
	}

	return false
}

// SetConnectorId gets a reference to the given string and assigns it to the ConnectorId field.
func (o *HyperscaleDatasetUpdateParameters) SetConnectorId(v string) {
	o.ConnectorId = &v
}

func (o HyperscaleDatasetUpdateParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HyperscaleDatasetUpdateParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MountPointId) {
		toSerialize["mount_point_id"] = o.MountPointId
	}
	if !IsNil(o.ConnectorId) {
		toSerialize["connector_id"] = o.ConnectorId
	}
	return toSerialize, nil
}

type NullableHyperscaleDatasetUpdateParameters struct {
	value *HyperscaleDatasetUpdateParameters
	isSet bool
}

func (v NullableHyperscaleDatasetUpdateParameters) Get() *HyperscaleDatasetUpdateParameters {
	return v.value
}

func (v *NullableHyperscaleDatasetUpdateParameters) Set(val *HyperscaleDatasetUpdateParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableHyperscaleDatasetUpdateParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableHyperscaleDatasetUpdateParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHyperscaleDatasetUpdateParameters(val *HyperscaleDatasetUpdateParameters) *NullableHyperscaleDatasetUpdateParameters {
	return &NullableHyperscaleDatasetUpdateParameters{value: val, isSet: true}
}

func (v NullableHyperscaleDatasetUpdateParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHyperscaleDatasetUpdateParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


