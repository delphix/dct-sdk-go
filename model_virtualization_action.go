/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"time"
)

// checks if the VirtualizationAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualizationAction{}

// VirtualizationAction A virtualization engine action.
type VirtualizationAction struct {
	// ID of the virtualization engine action.
	Id *string `json:"id,omitempty"`
	// ID of the RegisteredEngine.
	EngineId *string `json:"engine_id,omitempty"`
	// Type of the action.
	ActionType *string `json:"action_type,omitempty"`
	// The title of the action.
	Title *string `json:"title,omitempty"`
	// Plain text description of the action.
	Details *string `json:"details,omitempty"`
	// The time the action occurred. For long running processes, this represents the starting time.
	StartTime *time.Time `json:"start_time,omitempty"`
	// The time the action completed.
	EndTime *time.Time `json:"end_time,omitempty"`
	// The user who initiated the action.
	User *string `json:"user,omitempty"`
	// Name of client software used to initiate the action.
	UserAgent *string `json:"user_agent,omitempty"`
	// Network address used to initiate the action.
	OriginIp *string `json:"origin_ip,omitempty"`
	// The parent action of this action.
	ParentAction *string `json:"parent_action,omitempty"`
	// The state of the action.
	State *string `json:"state,omitempty"`
	// Origin of the work that caused the action.
	WorkSource *string `json:"work_source,omitempty"`
	// Name of user or policy that initiated the action.
	WorkSourceName *string `json:"work_source_name,omitempty"`
	// Principal of user that initiated the action.
	WorkSourcePrincipal *string `json:"work_source_principal,omitempty"`
	// Details of the action failure.
	FailureDescription *string `json:"failure_description,omitempty"`
	// Action to be taken to resolve the failure.
	FailureAction *string `json:"failure_action,omitempty"`
	// Message ID associated with the event.
	FailureMessageCode *string `json:"failure_message_code,omitempty"`
}

// NewVirtualizationAction instantiates a new VirtualizationAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualizationAction() *VirtualizationAction {
	this := VirtualizationAction{}
	return &this
}

// NewVirtualizationActionWithDefaults instantiates a new VirtualizationAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualizationActionWithDefaults() *VirtualizationAction {
	this := VirtualizationAction{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VirtualizationAction) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VirtualizationAction) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VirtualizationAction) SetId(v string) {
	o.Id = &v
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *VirtualizationAction) GetEngineId() string {
	if o == nil || IsNil(o.EngineId) {
		var ret string
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetEngineIdOk() (*string, bool) {
	if o == nil || IsNil(o.EngineId) {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *VirtualizationAction) HasEngineId() bool {
	if o != nil && !IsNil(o.EngineId) {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given string and assigns it to the EngineId field.
func (o *VirtualizationAction) SetEngineId(v string) {
	o.EngineId = &v
}

// GetActionType returns the ActionType field value if set, zero value otherwise.
func (o *VirtualizationAction) GetActionType() string {
	if o == nil || IsNil(o.ActionType) {
		var ret string
		return ret
	}
	return *o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetActionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ActionType) {
		return nil, false
	}
	return o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *VirtualizationAction) HasActionType() bool {
	if o != nil && !IsNil(o.ActionType) {
		return true
	}

	return false
}

// SetActionType gets a reference to the given string and assigns it to the ActionType field.
func (o *VirtualizationAction) SetActionType(v string) {
	o.ActionType = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *VirtualizationAction) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *VirtualizationAction) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *VirtualizationAction) SetTitle(v string) {
	o.Title = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *VirtualizationAction) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *VirtualizationAction) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *VirtualizationAction) SetDetails(v string) {
	o.Details = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *VirtualizationAction) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *VirtualizationAction) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *VirtualizationAction) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *VirtualizationAction) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *VirtualizationAction) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *VirtualizationAction) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *VirtualizationAction) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *VirtualizationAction) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *VirtualizationAction) SetUser(v string) {
	o.User = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *VirtualizationAction) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *VirtualizationAction) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *VirtualizationAction) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetOriginIp returns the OriginIp field value if set, zero value otherwise.
func (o *VirtualizationAction) GetOriginIp() string {
	if o == nil || IsNil(o.OriginIp) {
		var ret string
		return ret
	}
	return *o.OriginIp
}

// GetOriginIpOk returns a tuple with the OriginIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetOriginIpOk() (*string, bool) {
	if o == nil || IsNil(o.OriginIp) {
		return nil, false
	}
	return o.OriginIp, true
}

// HasOriginIp returns a boolean if a field has been set.
func (o *VirtualizationAction) HasOriginIp() bool {
	if o != nil && !IsNil(o.OriginIp) {
		return true
	}

	return false
}

// SetOriginIp gets a reference to the given string and assigns it to the OriginIp field.
func (o *VirtualizationAction) SetOriginIp(v string) {
	o.OriginIp = &v
}

// GetParentAction returns the ParentAction field value if set, zero value otherwise.
func (o *VirtualizationAction) GetParentAction() string {
	if o == nil || IsNil(o.ParentAction) {
		var ret string
		return ret
	}
	return *o.ParentAction
}

// GetParentActionOk returns a tuple with the ParentAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetParentActionOk() (*string, bool) {
	if o == nil || IsNil(o.ParentAction) {
		return nil, false
	}
	return o.ParentAction, true
}

// HasParentAction returns a boolean if a field has been set.
func (o *VirtualizationAction) HasParentAction() bool {
	if o != nil && !IsNil(o.ParentAction) {
		return true
	}

	return false
}

// SetParentAction gets a reference to the given string and assigns it to the ParentAction field.
func (o *VirtualizationAction) SetParentAction(v string) {
	o.ParentAction = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VirtualizationAction) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VirtualizationAction) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *VirtualizationAction) SetState(v string) {
	o.State = &v
}

// GetWorkSource returns the WorkSource field value if set, zero value otherwise.
func (o *VirtualizationAction) GetWorkSource() string {
	if o == nil || IsNil(o.WorkSource) {
		var ret string
		return ret
	}
	return *o.WorkSource
}

// GetWorkSourceOk returns a tuple with the WorkSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetWorkSourceOk() (*string, bool) {
	if o == nil || IsNil(o.WorkSource) {
		return nil, false
	}
	return o.WorkSource, true
}

// HasWorkSource returns a boolean if a field has been set.
func (o *VirtualizationAction) HasWorkSource() bool {
	if o != nil && !IsNil(o.WorkSource) {
		return true
	}

	return false
}

// SetWorkSource gets a reference to the given string and assigns it to the WorkSource field.
func (o *VirtualizationAction) SetWorkSource(v string) {
	o.WorkSource = &v
}

// GetWorkSourceName returns the WorkSourceName field value if set, zero value otherwise.
func (o *VirtualizationAction) GetWorkSourceName() string {
	if o == nil || IsNil(o.WorkSourceName) {
		var ret string
		return ret
	}
	return *o.WorkSourceName
}

// GetWorkSourceNameOk returns a tuple with the WorkSourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetWorkSourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.WorkSourceName) {
		return nil, false
	}
	return o.WorkSourceName, true
}

// HasWorkSourceName returns a boolean if a field has been set.
func (o *VirtualizationAction) HasWorkSourceName() bool {
	if o != nil && !IsNil(o.WorkSourceName) {
		return true
	}

	return false
}

// SetWorkSourceName gets a reference to the given string and assigns it to the WorkSourceName field.
func (o *VirtualizationAction) SetWorkSourceName(v string) {
	o.WorkSourceName = &v
}

// GetWorkSourcePrincipal returns the WorkSourcePrincipal field value if set, zero value otherwise.
func (o *VirtualizationAction) GetWorkSourcePrincipal() string {
	if o == nil || IsNil(o.WorkSourcePrincipal) {
		var ret string
		return ret
	}
	return *o.WorkSourcePrincipal
}

// GetWorkSourcePrincipalOk returns a tuple with the WorkSourcePrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetWorkSourcePrincipalOk() (*string, bool) {
	if o == nil || IsNil(o.WorkSourcePrincipal) {
		return nil, false
	}
	return o.WorkSourcePrincipal, true
}

// HasWorkSourcePrincipal returns a boolean if a field has been set.
func (o *VirtualizationAction) HasWorkSourcePrincipal() bool {
	if o != nil && !IsNil(o.WorkSourcePrincipal) {
		return true
	}

	return false
}

// SetWorkSourcePrincipal gets a reference to the given string and assigns it to the WorkSourcePrincipal field.
func (o *VirtualizationAction) SetWorkSourcePrincipal(v string) {
	o.WorkSourcePrincipal = &v
}

// GetFailureDescription returns the FailureDescription field value if set, zero value otherwise.
func (o *VirtualizationAction) GetFailureDescription() string {
	if o == nil || IsNil(o.FailureDescription) {
		var ret string
		return ret
	}
	return *o.FailureDescription
}

// GetFailureDescriptionOk returns a tuple with the FailureDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetFailureDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FailureDescription) {
		return nil, false
	}
	return o.FailureDescription, true
}

// HasFailureDescription returns a boolean if a field has been set.
func (o *VirtualizationAction) HasFailureDescription() bool {
	if o != nil && !IsNil(o.FailureDescription) {
		return true
	}

	return false
}

// SetFailureDescription gets a reference to the given string and assigns it to the FailureDescription field.
func (o *VirtualizationAction) SetFailureDescription(v string) {
	o.FailureDescription = &v
}

// GetFailureAction returns the FailureAction field value if set, zero value otherwise.
func (o *VirtualizationAction) GetFailureAction() string {
	if o == nil || IsNil(o.FailureAction) {
		var ret string
		return ret
	}
	return *o.FailureAction
}

// GetFailureActionOk returns a tuple with the FailureAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetFailureActionOk() (*string, bool) {
	if o == nil || IsNil(o.FailureAction) {
		return nil, false
	}
	return o.FailureAction, true
}

// HasFailureAction returns a boolean if a field has been set.
func (o *VirtualizationAction) HasFailureAction() bool {
	if o != nil && !IsNil(o.FailureAction) {
		return true
	}

	return false
}

// SetFailureAction gets a reference to the given string and assigns it to the FailureAction field.
func (o *VirtualizationAction) SetFailureAction(v string) {
	o.FailureAction = &v
}

// GetFailureMessageCode returns the FailureMessageCode field value if set, zero value otherwise.
func (o *VirtualizationAction) GetFailureMessageCode() string {
	if o == nil || IsNil(o.FailureMessageCode) {
		var ret string
		return ret
	}
	return *o.FailureMessageCode
}

// GetFailureMessageCodeOk returns a tuple with the FailureMessageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationAction) GetFailureMessageCodeOk() (*string, bool) {
	if o == nil || IsNil(o.FailureMessageCode) {
		return nil, false
	}
	return o.FailureMessageCode, true
}

// HasFailureMessageCode returns a boolean if a field has been set.
func (o *VirtualizationAction) HasFailureMessageCode() bool {
	if o != nil && !IsNil(o.FailureMessageCode) {
		return true
	}

	return false
}

// SetFailureMessageCode gets a reference to the given string and assigns it to the FailureMessageCode field.
func (o *VirtualizationAction) SetFailureMessageCode(v string) {
	o.FailureMessageCode = &v
}

func (o VirtualizationAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualizationAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.EngineId) {
		toSerialize["engine_id"] = o.EngineId
	}
	if !IsNil(o.ActionType) {
		toSerialize["action_type"] = o.ActionType
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAgent) {
		toSerialize["user_agent"] = o.UserAgent
	}
	if !IsNil(o.OriginIp) {
		toSerialize["origin_ip"] = o.OriginIp
	}
	if !IsNil(o.ParentAction) {
		toSerialize["parent_action"] = o.ParentAction
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.WorkSource) {
		toSerialize["work_source"] = o.WorkSource
	}
	if !IsNil(o.WorkSourceName) {
		toSerialize["work_source_name"] = o.WorkSourceName
	}
	if !IsNil(o.WorkSourcePrincipal) {
		toSerialize["work_source_principal"] = o.WorkSourcePrincipal
	}
	if !IsNil(o.FailureDescription) {
		toSerialize["failure_description"] = o.FailureDescription
	}
	if !IsNil(o.FailureAction) {
		toSerialize["failure_action"] = o.FailureAction
	}
	if !IsNil(o.FailureMessageCode) {
		toSerialize["failure_message_code"] = o.FailureMessageCode
	}
	return toSerialize, nil
}

type NullableVirtualizationAction struct {
	value *VirtualizationAction
	isSet bool
}

func (v NullableVirtualizationAction) Get() *VirtualizationAction {
	return v.value
}

func (v *NullableVirtualizationAction) Set(val *VirtualizationAction) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualizationAction) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualizationAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualizationAction(val *VirtualizationAction) *NullableVirtualizationAction {
	return &NullableVirtualizationAction{value: val, isSet: true}
}

func (v NullableVirtualizationAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualizationAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


