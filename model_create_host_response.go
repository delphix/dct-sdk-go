/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the CreateHostResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateHostResponse{}

// CreateHostResponse struct for CreateHostResponse
type CreateHostResponse struct {
	Job *Job `json:"job,omitempty"`
	// The id of the created cluster node.
	ClusterNodeId *string `json:"cluster_node_id,omitempty"`
}

// NewCreateHostResponse instantiates a new CreateHostResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateHostResponse() *CreateHostResponse {
	this := CreateHostResponse{}
	return &this
}

// NewCreateHostResponseWithDefaults instantiates a new CreateHostResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateHostResponseWithDefaults() *CreateHostResponse {
	this := CreateHostResponse{}
	return &this
}

// GetJob returns the Job field value if set, zero value otherwise.
func (o *CreateHostResponse) GetJob() Job {
	if o == nil || IsNil(o.Job) {
		var ret Job
		return ret
	}
	return *o.Job
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateHostResponse) GetJobOk() (*Job, bool) {
	if o == nil || IsNil(o.Job) {
		return nil, false
	}
	return o.Job, true
}

// HasJob returns a boolean if a field has been set.
func (o *CreateHostResponse) HasJob() bool {
	if o != nil && !IsNil(o.Job) {
		return true
	}

	return false
}

// SetJob gets a reference to the given Job and assigns it to the Job field.
func (o *CreateHostResponse) SetJob(v Job) {
	o.Job = &v
}

// GetClusterNodeId returns the ClusterNodeId field value if set, zero value otherwise.
func (o *CreateHostResponse) GetClusterNodeId() string {
	if o == nil || IsNil(o.ClusterNodeId) {
		var ret string
		return ret
	}
	return *o.ClusterNodeId
}

// GetClusterNodeIdOk returns a tuple with the ClusterNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateHostResponse) GetClusterNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterNodeId) {
		return nil, false
	}
	return o.ClusterNodeId, true
}

// HasClusterNodeId returns a boolean if a field has been set.
func (o *CreateHostResponse) HasClusterNodeId() bool {
	if o != nil && !IsNil(o.ClusterNodeId) {
		return true
	}

	return false
}

// SetClusterNodeId gets a reference to the given string and assigns it to the ClusterNodeId field.
func (o *CreateHostResponse) SetClusterNodeId(v string) {
	o.ClusterNodeId = &v
}

func (o CreateHostResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateHostResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Job) {
		toSerialize["job"] = o.Job
	}
	if !IsNil(o.ClusterNodeId) {
		toSerialize["cluster_node_id"] = o.ClusterNodeId
	}
	return toSerialize, nil
}

type NullableCreateHostResponse struct {
	value *CreateHostResponse
	isSet bool
}

func (v NullableCreateHostResponse) Get() *CreateHostResponse {
	return v.value
}

func (v *NullableCreateHostResponse) Set(val *CreateHostResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateHostResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateHostResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateHostResponse(val *CreateHostResponse) *NullableCreateHostResponse {
	return &NullableCreateHostResponse{value: val, isSet: true}
}

func (v NullableCreateHostResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateHostResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


