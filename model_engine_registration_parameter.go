/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EngineRegistrationParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EngineRegistrationParameter{}

// EngineRegistrationParameter Parameters to register and authenticate an engine.
type EngineRegistrationParameter struct {
	Name string `json:"name"`
	Hostname string `json:"hostname"`
	// The virtualization domain admin username.
	Username NullableString `json:"username,omitempty"`
	// The virtualization domain admin password.
	Password NullableString `json:"password,omitempty"`
	// The masking admin username.
	MaskingUsername NullableString `json:"masking_username,omitempty"`
	// The masking admin password.
	MaskingPassword NullableString `json:"masking_password,omitempty"`
	// Arguments to pass to the Vault CLI tool to retrieve the virtualzation username for the engine.
	HashicorpVaultUsernameCommandArgs []string `json:"hashicorp_vault_username_command_args,omitempty"`
	// Arguments to pass to the Vault CLI tool to retrieve the masking username for the engine.
	HashicorpVaultMaskingUsernameCommandArgs []string `json:"hashicorp_vault_masking_username_command_args,omitempty"`
	// Arguments to pass to the Vault CLI tool to retrieve the virtualization password for the engine.
	HashicorpVaultPasswordCommandArgs []string `json:"hashicorp_vault_password_command_args,omitempty"`
	// Arguments to pass to the Vault CLI tool to retrieve the masking password for the engine.
	HashicorpVaultMaskingPasswordCommandArgs []string `json:"hashicorp_vault_masking_password_command_args,omitempty"`
	// Reference to the Hashicorp vault to use to retrieve virtualization engine credentials.
	HashicorpVaultId NullableInt64 `json:"hashicorp_vault_id,omitempty"`
	// Reference to the Hashicorp vault to use to retrieve masking engine credentials.
	MaskingHashicorpVaultId NullableInt64 `json:"masking_hashicorp_vault_id,omitempty"`
	// Allow connections to the engine over HTTPs without validating the TLS certificate. Even though the connection to the engine might be performed over HTTPs, setting this property eliminates the protection against a man-in-the-middle attach for connections to this engine. Instead, consider creating a truststore with a Certificate Authority to validate the engine's certificate, and set the truststore_filename property. 
	InsecureSsl *bool `json:"insecure_ssl,omitempty"`
	// Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs. Setting this value must only be done if the TLS certificate of the engine does not match the hostname, and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection against a man-in-the-middle attack for connections to this engine. This is ignored if insecure_ssl is set. 
	UnsafeSslHostnameCheck *bool `json:"unsafe_ssl_hostname_check,omitempty"`
	// File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore must be available at /etc/config/certs/<truststore_filename> 
	TruststoreFilename NullableString `json:"truststore_filename,omitempty" validate:"regexp=^[a-zA-Z0-9_\\\\.\\\\-]+$"`
	// Password to read the truststore. 
	TruststorePassword NullableString `json:"truststore_password,omitempty"`
	AutoTaggingConfig *AutoTaggingConfig `json:"auto_tagging_config,omitempty"`
	// The tags to be created for this engine.
	Tags []Tag `json:"tags,omitempty"`
}

type _EngineRegistrationParameter EngineRegistrationParameter

// NewEngineRegistrationParameter instantiates a new EngineRegistrationParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEngineRegistrationParameter(name string, hostname string) *EngineRegistrationParameter {
	this := EngineRegistrationParameter{}
	this.Name = name
	this.Hostname = hostname
	var insecureSsl bool = false
	this.InsecureSsl = &insecureSsl
	var unsafeSslHostnameCheck bool = false
	this.UnsafeSslHostnameCheck = &unsafeSslHostnameCheck
	return &this
}

// NewEngineRegistrationParameterWithDefaults instantiates a new EngineRegistrationParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEngineRegistrationParameterWithDefaults() *EngineRegistrationParameter {
	this := EngineRegistrationParameter{}
	var insecureSsl bool = false
	this.InsecureSsl = &insecureSsl
	var unsafeSslHostnameCheck bool = false
	this.UnsafeSslHostnameCheck = &unsafeSslHostnameCheck
	return &this
}

// GetName returns the Name field value
func (o *EngineRegistrationParameter) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EngineRegistrationParameter) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EngineRegistrationParameter) SetName(v string) {
	o.Name = v
}

// GetHostname returns the Hostname field value
func (o *EngineRegistrationParameter) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *EngineRegistrationParameter) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *EngineRegistrationParameter) SetHostname(v string) {
	o.Hostname = v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *EngineRegistrationParameter) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *EngineRegistrationParameter) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *EngineRegistrationParameter) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *EngineRegistrationParameter) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *EngineRegistrationParameter) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *EngineRegistrationParameter) UnsetPassword() {
	o.Password.Unset()
}

// GetMaskingUsername returns the MaskingUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetMaskingUsername() string {
	if o == nil || IsNil(o.MaskingUsername.Get()) {
		var ret string
		return ret
	}
	return *o.MaskingUsername.Get()
}

// GetMaskingUsernameOk returns a tuple with the MaskingUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetMaskingUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaskingUsername.Get(), o.MaskingUsername.IsSet()
}

// HasMaskingUsername returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasMaskingUsername() bool {
	if o != nil && o.MaskingUsername.IsSet() {
		return true
	}

	return false
}

// SetMaskingUsername gets a reference to the given NullableString and assigns it to the MaskingUsername field.
func (o *EngineRegistrationParameter) SetMaskingUsername(v string) {
	o.MaskingUsername.Set(&v)
}
// SetMaskingUsernameNil sets the value for MaskingUsername to be an explicit nil
func (o *EngineRegistrationParameter) SetMaskingUsernameNil() {
	o.MaskingUsername.Set(nil)
}

// UnsetMaskingUsername ensures that no value is present for MaskingUsername, not even an explicit nil
func (o *EngineRegistrationParameter) UnsetMaskingUsername() {
	o.MaskingUsername.Unset()
}

// GetMaskingPassword returns the MaskingPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetMaskingPassword() string {
	if o == nil || IsNil(o.MaskingPassword.Get()) {
		var ret string
		return ret
	}
	return *o.MaskingPassword.Get()
}

// GetMaskingPasswordOk returns a tuple with the MaskingPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetMaskingPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaskingPassword.Get(), o.MaskingPassword.IsSet()
}

// HasMaskingPassword returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasMaskingPassword() bool {
	if o != nil && o.MaskingPassword.IsSet() {
		return true
	}

	return false
}

// SetMaskingPassword gets a reference to the given NullableString and assigns it to the MaskingPassword field.
func (o *EngineRegistrationParameter) SetMaskingPassword(v string) {
	o.MaskingPassword.Set(&v)
}
// SetMaskingPasswordNil sets the value for MaskingPassword to be an explicit nil
func (o *EngineRegistrationParameter) SetMaskingPasswordNil() {
	o.MaskingPassword.Set(nil)
}

// UnsetMaskingPassword ensures that no value is present for MaskingPassword, not even an explicit nil
func (o *EngineRegistrationParameter) UnsetMaskingPassword() {
	o.MaskingPassword.Unset()
}

// GetHashicorpVaultUsernameCommandArgs returns the HashicorpVaultUsernameCommandArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetHashicorpVaultUsernameCommandArgs() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HashicorpVaultUsernameCommandArgs
}

// GetHashicorpVaultUsernameCommandArgsOk returns a tuple with the HashicorpVaultUsernameCommandArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetHashicorpVaultUsernameCommandArgsOk() ([]string, bool) {
	if o == nil || IsNil(o.HashicorpVaultUsernameCommandArgs) {
		return nil, false
	}
	return o.HashicorpVaultUsernameCommandArgs, true
}

// HasHashicorpVaultUsernameCommandArgs returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasHashicorpVaultUsernameCommandArgs() bool {
	if o != nil && !IsNil(o.HashicorpVaultUsernameCommandArgs) {
		return true
	}

	return false
}

// SetHashicorpVaultUsernameCommandArgs gets a reference to the given []string and assigns it to the HashicorpVaultUsernameCommandArgs field.
func (o *EngineRegistrationParameter) SetHashicorpVaultUsernameCommandArgs(v []string) {
	o.HashicorpVaultUsernameCommandArgs = v
}

// GetHashicorpVaultMaskingUsernameCommandArgs returns the HashicorpVaultMaskingUsernameCommandArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetHashicorpVaultMaskingUsernameCommandArgs() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HashicorpVaultMaskingUsernameCommandArgs
}

// GetHashicorpVaultMaskingUsernameCommandArgsOk returns a tuple with the HashicorpVaultMaskingUsernameCommandArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetHashicorpVaultMaskingUsernameCommandArgsOk() ([]string, bool) {
	if o == nil || IsNil(o.HashicorpVaultMaskingUsernameCommandArgs) {
		return nil, false
	}
	return o.HashicorpVaultMaskingUsernameCommandArgs, true
}

// HasHashicorpVaultMaskingUsernameCommandArgs returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasHashicorpVaultMaskingUsernameCommandArgs() bool {
	if o != nil && !IsNil(o.HashicorpVaultMaskingUsernameCommandArgs) {
		return true
	}

	return false
}

// SetHashicorpVaultMaskingUsernameCommandArgs gets a reference to the given []string and assigns it to the HashicorpVaultMaskingUsernameCommandArgs field.
func (o *EngineRegistrationParameter) SetHashicorpVaultMaskingUsernameCommandArgs(v []string) {
	o.HashicorpVaultMaskingUsernameCommandArgs = v
}

// GetHashicorpVaultPasswordCommandArgs returns the HashicorpVaultPasswordCommandArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetHashicorpVaultPasswordCommandArgs() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HashicorpVaultPasswordCommandArgs
}

// GetHashicorpVaultPasswordCommandArgsOk returns a tuple with the HashicorpVaultPasswordCommandArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetHashicorpVaultPasswordCommandArgsOk() ([]string, bool) {
	if o == nil || IsNil(o.HashicorpVaultPasswordCommandArgs) {
		return nil, false
	}
	return o.HashicorpVaultPasswordCommandArgs, true
}

// HasHashicorpVaultPasswordCommandArgs returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasHashicorpVaultPasswordCommandArgs() bool {
	if o != nil && !IsNil(o.HashicorpVaultPasswordCommandArgs) {
		return true
	}

	return false
}

// SetHashicorpVaultPasswordCommandArgs gets a reference to the given []string and assigns it to the HashicorpVaultPasswordCommandArgs field.
func (o *EngineRegistrationParameter) SetHashicorpVaultPasswordCommandArgs(v []string) {
	o.HashicorpVaultPasswordCommandArgs = v
}

// GetHashicorpVaultMaskingPasswordCommandArgs returns the HashicorpVaultMaskingPasswordCommandArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetHashicorpVaultMaskingPasswordCommandArgs() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HashicorpVaultMaskingPasswordCommandArgs
}

// GetHashicorpVaultMaskingPasswordCommandArgsOk returns a tuple with the HashicorpVaultMaskingPasswordCommandArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetHashicorpVaultMaskingPasswordCommandArgsOk() ([]string, bool) {
	if o == nil || IsNil(o.HashicorpVaultMaskingPasswordCommandArgs) {
		return nil, false
	}
	return o.HashicorpVaultMaskingPasswordCommandArgs, true
}

// HasHashicorpVaultMaskingPasswordCommandArgs returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasHashicorpVaultMaskingPasswordCommandArgs() bool {
	if o != nil && !IsNil(o.HashicorpVaultMaskingPasswordCommandArgs) {
		return true
	}

	return false
}

// SetHashicorpVaultMaskingPasswordCommandArgs gets a reference to the given []string and assigns it to the HashicorpVaultMaskingPasswordCommandArgs field.
func (o *EngineRegistrationParameter) SetHashicorpVaultMaskingPasswordCommandArgs(v []string) {
	o.HashicorpVaultMaskingPasswordCommandArgs = v
}

// GetHashicorpVaultId returns the HashicorpVaultId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetHashicorpVaultId() int64 {
	if o == nil || IsNil(o.HashicorpVaultId.Get()) {
		var ret int64
		return ret
	}
	return *o.HashicorpVaultId.Get()
}

// GetHashicorpVaultIdOk returns a tuple with the HashicorpVaultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetHashicorpVaultIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HashicorpVaultId.Get(), o.HashicorpVaultId.IsSet()
}

// HasHashicorpVaultId returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasHashicorpVaultId() bool {
	if o != nil && o.HashicorpVaultId.IsSet() {
		return true
	}

	return false
}

// SetHashicorpVaultId gets a reference to the given NullableInt64 and assigns it to the HashicorpVaultId field.
func (o *EngineRegistrationParameter) SetHashicorpVaultId(v int64) {
	o.HashicorpVaultId.Set(&v)
}
// SetHashicorpVaultIdNil sets the value for HashicorpVaultId to be an explicit nil
func (o *EngineRegistrationParameter) SetHashicorpVaultIdNil() {
	o.HashicorpVaultId.Set(nil)
}

// UnsetHashicorpVaultId ensures that no value is present for HashicorpVaultId, not even an explicit nil
func (o *EngineRegistrationParameter) UnsetHashicorpVaultId() {
	o.HashicorpVaultId.Unset()
}

// GetMaskingHashicorpVaultId returns the MaskingHashicorpVaultId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetMaskingHashicorpVaultId() int64 {
	if o == nil || IsNil(o.MaskingHashicorpVaultId.Get()) {
		var ret int64
		return ret
	}
	return *o.MaskingHashicorpVaultId.Get()
}

// GetMaskingHashicorpVaultIdOk returns a tuple with the MaskingHashicorpVaultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetMaskingHashicorpVaultIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaskingHashicorpVaultId.Get(), o.MaskingHashicorpVaultId.IsSet()
}

// HasMaskingHashicorpVaultId returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasMaskingHashicorpVaultId() bool {
	if o != nil && o.MaskingHashicorpVaultId.IsSet() {
		return true
	}

	return false
}

// SetMaskingHashicorpVaultId gets a reference to the given NullableInt64 and assigns it to the MaskingHashicorpVaultId field.
func (o *EngineRegistrationParameter) SetMaskingHashicorpVaultId(v int64) {
	o.MaskingHashicorpVaultId.Set(&v)
}
// SetMaskingHashicorpVaultIdNil sets the value for MaskingHashicorpVaultId to be an explicit nil
func (o *EngineRegistrationParameter) SetMaskingHashicorpVaultIdNil() {
	o.MaskingHashicorpVaultId.Set(nil)
}

// UnsetMaskingHashicorpVaultId ensures that no value is present for MaskingHashicorpVaultId, not even an explicit nil
func (o *EngineRegistrationParameter) UnsetMaskingHashicorpVaultId() {
	o.MaskingHashicorpVaultId.Unset()
}

// GetInsecureSsl returns the InsecureSsl field value if set, zero value otherwise.
func (o *EngineRegistrationParameter) GetInsecureSsl() bool {
	if o == nil || IsNil(o.InsecureSsl) {
		var ret bool
		return ret
	}
	return *o.InsecureSsl
}

// GetInsecureSslOk returns a tuple with the InsecureSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EngineRegistrationParameter) GetInsecureSslOk() (*bool, bool) {
	if o == nil || IsNil(o.InsecureSsl) {
		return nil, false
	}
	return o.InsecureSsl, true
}

// HasInsecureSsl returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasInsecureSsl() bool {
	if o != nil && !IsNil(o.InsecureSsl) {
		return true
	}

	return false
}

// SetInsecureSsl gets a reference to the given bool and assigns it to the InsecureSsl field.
func (o *EngineRegistrationParameter) SetInsecureSsl(v bool) {
	o.InsecureSsl = &v
}

// GetUnsafeSslHostnameCheck returns the UnsafeSslHostnameCheck field value if set, zero value otherwise.
func (o *EngineRegistrationParameter) GetUnsafeSslHostnameCheck() bool {
	if o == nil || IsNil(o.UnsafeSslHostnameCheck) {
		var ret bool
		return ret
	}
	return *o.UnsafeSslHostnameCheck
}

// GetUnsafeSslHostnameCheckOk returns a tuple with the UnsafeSslHostnameCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EngineRegistrationParameter) GetUnsafeSslHostnameCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.UnsafeSslHostnameCheck) {
		return nil, false
	}
	return o.UnsafeSslHostnameCheck, true
}

// HasUnsafeSslHostnameCheck returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasUnsafeSslHostnameCheck() bool {
	if o != nil && !IsNil(o.UnsafeSslHostnameCheck) {
		return true
	}

	return false
}

// SetUnsafeSslHostnameCheck gets a reference to the given bool and assigns it to the UnsafeSslHostnameCheck field.
func (o *EngineRegistrationParameter) SetUnsafeSslHostnameCheck(v bool) {
	o.UnsafeSslHostnameCheck = &v
}

// GetTruststoreFilename returns the TruststoreFilename field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetTruststoreFilename() string {
	if o == nil || IsNil(o.TruststoreFilename.Get()) {
		var ret string
		return ret
	}
	return *o.TruststoreFilename.Get()
}

// GetTruststoreFilenameOk returns a tuple with the TruststoreFilename field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetTruststoreFilenameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TruststoreFilename.Get(), o.TruststoreFilename.IsSet()
}

// HasTruststoreFilename returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasTruststoreFilename() bool {
	if o != nil && o.TruststoreFilename.IsSet() {
		return true
	}

	return false
}

// SetTruststoreFilename gets a reference to the given NullableString and assigns it to the TruststoreFilename field.
func (o *EngineRegistrationParameter) SetTruststoreFilename(v string) {
	o.TruststoreFilename.Set(&v)
}
// SetTruststoreFilenameNil sets the value for TruststoreFilename to be an explicit nil
func (o *EngineRegistrationParameter) SetTruststoreFilenameNil() {
	o.TruststoreFilename.Set(nil)
}

// UnsetTruststoreFilename ensures that no value is present for TruststoreFilename, not even an explicit nil
func (o *EngineRegistrationParameter) UnsetTruststoreFilename() {
	o.TruststoreFilename.Unset()
}

// GetTruststorePassword returns the TruststorePassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EngineRegistrationParameter) GetTruststorePassword() string {
	if o == nil || IsNil(o.TruststorePassword.Get()) {
		var ret string
		return ret
	}
	return *o.TruststorePassword.Get()
}

// GetTruststorePasswordOk returns a tuple with the TruststorePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EngineRegistrationParameter) GetTruststorePasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TruststorePassword.Get(), o.TruststorePassword.IsSet()
}

// HasTruststorePassword returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasTruststorePassword() bool {
	if o != nil && o.TruststorePassword.IsSet() {
		return true
	}

	return false
}

// SetTruststorePassword gets a reference to the given NullableString and assigns it to the TruststorePassword field.
func (o *EngineRegistrationParameter) SetTruststorePassword(v string) {
	o.TruststorePassword.Set(&v)
}
// SetTruststorePasswordNil sets the value for TruststorePassword to be an explicit nil
func (o *EngineRegistrationParameter) SetTruststorePasswordNil() {
	o.TruststorePassword.Set(nil)
}

// UnsetTruststorePassword ensures that no value is present for TruststorePassword, not even an explicit nil
func (o *EngineRegistrationParameter) UnsetTruststorePassword() {
	o.TruststorePassword.Unset()
}

// GetAutoTaggingConfig returns the AutoTaggingConfig field value if set, zero value otherwise.
func (o *EngineRegistrationParameter) GetAutoTaggingConfig() AutoTaggingConfig {
	if o == nil || IsNil(o.AutoTaggingConfig) {
		var ret AutoTaggingConfig
		return ret
	}
	return *o.AutoTaggingConfig
}

// GetAutoTaggingConfigOk returns a tuple with the AutoTaggingConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EngineRegistrationParameter) GetAutoTaggingConfigOk() (*AutoTaggingConfig, bool) {
	if o == nil || IsNil(o.AutoTaggingConfig) {
		return nil, false
	}
	return o.AutoTaggingConfig, true
}

// HasAutoTaggingConfig returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasAutoTaggingConfig() bool {
	if o != nil && !IsNil(o.AutoTaggingConfig) {
		return true
	}

	return false
}

// SetAutoTaggingConfig gets a reference to the given AutoTaggingConfig and assigns it to the AutoTaggingConfig field.
func (o *EngineRegistrationParameter) SetAutoTaggingConfig(v AutoTaggingConfig) {
	o.AutoTaggingConfig = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *EngineRegistrationParameter) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EngineRegistrationParameter) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *EngineRegistrationParameter) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *EngineRegistrationParameter) SetTags(v []Tag) {
	o.Tags = v
}

func (o EngineRegistrationParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EngineRegistrationParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["hostname"] = o.Hostname
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.MaskingUsername.IsSet() {
		toSerialize["masking_username"] = o.MaskingUsername.Get()
	}
	if o.MaskingPassword.IsSet() {
		toSerialize["masking_password"] = o.MaskingPassword.Get()
	}
	if o.HashicorpVaultUsernameCommandArgs != nil {
		toSerialize["hashicorp_vault_username_command_args"] = o.HashicorpVaultUsernameCommandArgs
	}
	if o.HashicorpVaultMaskingUsernameCommandArgs != nil {
		toSerialize["hashicorp_vault_masking_username_command_args"] = o.HashicorpVaultMaskingUsernameCommandArgs
	}
	if o.HashicorpVaultPasswordCommandArgs != nil {
		toSerialize["hashicorp_vault_password_command_args"] = o.HashicorpVaultPasswordCommandArgs
	}
	if o.HashicorpVaultMaskingPasswordCommandArgs != nil {
		toSerialize["hashicorp_vault_masking_password_command_args"] = o.HashicorpVaultMaskingPasswordCommandArgs
	}
	if o.HashicorpVaultId.IsSet() {
		toSerialize["hashicorp_vault_id"] = o.HashicorpVaultId.Get()
	}
	if o.MaskingHashicorpVaultId.IsSet() {
		toSerialize["masking_hashicorp_vault_id"] = o.MaskingHashicorpVaultId.Get()
	}
	if !IsNil(o.InsecureSsl) {
		toSerialize["insecure_ssl"] = o.InsecureSsl
	}
	if !IsNil(o.UnsafeSslHostnameCheck) {
		toSerialize["unsafe_ssl_hostname_check"] = o.UnsafeSslHostnameCheck
	}
	if o.TruststoreFilename.IsSet() {
		toSerialize["truststore_filename"] = o.TruststoreFilename.Get()
	}
	if o.TruststorePassword.IsSet() {
		toSerialize["truststore_password"] = o.TruststorePassword.Get()
	}
	if !IsNil(o.AutoTaggingConfig) {
		toSerialize["auto_tagging_config"] = o.AutoTaggingConfig
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *EngineRegistrationParameter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"hostname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEngineRegistrationParameter := _EngineRegistrationParameter{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEngineRegistrationParameter)

	if err != nil {
		return err
	}

	*o = EngineRegistrationParameter(varEngineRegistrationParameter)

	return err
}

type NullableEngineRegistrationParameter struct {
	value *EngineRegistrationParameter
	isSet bool
}

func (v NullableEngineRegistrationParameter) Get() *EngineRegistrationParameter {
	return v.value
}

func (v *NullableEngineRegistrationParameter) Set(val *EngineRegistrationParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableEngineRegistrationParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableEngineRegistrationParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEngineRegistrationParameter(val *EngineRegistrationParameter) *NullableEngineRegistrationParameter {
	return &NullableEngineRegistrationParameter{value: val, isSet: true}
}

func (v NullableEngineRegistrationParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEngineRegistrationParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


