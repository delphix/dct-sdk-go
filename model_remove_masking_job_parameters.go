/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RemoveMaskingJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveMaskingJobParameters{}

// RemoveMaskingJobParameters Parameters to remove a masking job from a masking job set.
type RemoveMaskingJobParameters struct {
	// The ID of the engine to remove the masking job from.
	EngineId string `json:"engine_id"`
}

type _RemoveMaskingJobParameters RemoveMaskingJobParameters

// NewRemoveMaskingJobParameters instantiates a new RemoveMaskingJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveMaskingJobParameters(engineId string) *RemoveMaskingJobParameters {
	this := RemoveMaskingJobParameters{}
	this.EngineId = engineId
	return &this
}

// NewRemoveMaskingJobParametersWithDefaults instantiates a new RemoveMaskingJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveMaskingJobParametersWithDefaults() *RemoveMaskingJobParameters {
	this := RemoveMaskingJobParameters{}
	return &this
}

// GetEngineId returns the EngineId field value
func (o *RemoveMaskingJobParameters) GetEngineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value
// and a boolean to check if the value has been set.
func (o *RemoveMaskingJobParameters) GetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EngineId, true
}

// SetEngineId sets field value
func (o *RemoveMaskingJobParameters) SetEngineId(v string) {
	o.EngineId = v
}

func (o RemoveMaskingJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveMaskingJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["engine_id"] = o.EngineId
	return toSerialize, nil
}

func (o *RemoveMaskingJobParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"engine_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRemoveMaskingJobParameters := _RemoveMaskingJobParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRemoveMaskingJobParameters)

	if err != nil {
		return err
	}

	*o = RemoveMaskingJobParameters(varRemoveMaskingJobParameters)

	return err
}

type NullableRemoveMaskingJobParameters struct {
	value *RemoveMaskingJobParameters
	isSet bool
}

func (v NullableRemoveMaskingJobParameters) Get() *RemoveMaskingJobParameters {
	return v.value
}

func (v *NullableRemoveMaskingJobParameters) Set(val *RemoveMaskingJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveMaskingJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveMaskingJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveMaskingJobParameters(val *RemoveMaskingJobParameters) *NullableRemoveMaskingJobParameters {
	return &NullableRemoveMaskingJobParameters{value: val, isSet: true}
}

func (v NullableRemoveMaskingJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveMaskingJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


