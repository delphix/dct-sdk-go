/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the MaskingExecutionMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaskingExecutionMetrics{}

// MaskingExecutionMetrics Metrics for a masking job.
type MaskingExecutionMetrics struct {
	// The MaskingJob entity ID.
	Id *string `json:"id,omitempty"`
	// The name of the MaskingJob.
	MaskingJobName *string `json:"masking_job_name,omitempty"`
	// The type of the Masking job.
	MaskingJobType *string `json:"masking_job_type,omitempty"`
	// The type of data being masked by this Job. If the Masking Job is masking a database this is the type of the database, otherwise \"FILE\" or \"MAINFRAME_DATASET\".
	ConnectorType *string `json:"connector_type,omitempty"`
	// Name of the ruleset for the Masking job.
	RulesetName *string `json:"ruleset_name,omitempty"`
	// The number of rows masked. This is not applicable for JSON file type.
	RowsMasked *int64 `json:"rows_masked,omitempty"`
	// The total number of rows. This is not applicable for JSON file type.
	RowsTotal *int64 `json:"rows_total,omitempty"`
	// The number of bytes masked. This is only applicable for JSON file type.
	BytesMasked *int64 `json:"bytes_masked,omitempty"`
	// The total number of bytes. This is only applicable for JSON file type.
	BytesTotal *int64 `json:"bytes_total,omitempty"`
	// The time taken by the execution in ms.
	Duration *int64 `json:"duration,omitempty"`
	// The number of tables or files in the ruleset associated to the Masking job.
	TablesFilesCount *int64 `json:"tables_files_count,omitempty"`
	// The number of tables or files in the ruleset associated to the Masking job for which at least one column or field is masked.
	MaskedTablesFilesCount *int64 `json:"masked_tables_files_count,omitempty"`
	// The number of columns or fields across all tables or files in the ruleset associated to the Masking job.
	ColumnsFieldsCount *int64 `json:"columns_fields_count,omitempty"`
	// The number of columns or fields across all tables or files in the ruleset associated to the Masking job which are masked.
	MaskedColumnsFieldsCount *int64 `json:"masked_columns_fields_count,omitempty"`
}

// NewMaskingExecutionMetrics instantiates a new MaskingExecutionMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaskingExecutionMetrics() *MaskingExecutionMetrics {
	this := MaskingExecutionMetrics{}
	return &this
}

// NewMaskingExecutionMetricsWithDefaults instantiates a new MaskingExecutionMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaskingExecutionMetricsWithDefaults() *MaskingExecutionMetrics {
	this := MaskingExecutionMetrics{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MaskingExecutionMetrics) SetId(v string) {
	o.Id = &v
}

// GetMaskingJobName returns the MaskingJobName field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetMaskingJobName() string {
	if o == nil || IsNil(o.MaskingJobName) {
		var ret string
		return ret
	}
	return *o.MaskingJobName
}

// GetMaskingJobNameOk returns a tuple with the MaskingJobName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetMaskingJobNameOk() (*string, bool) {
	if o == nil || IsNil(o.MaskingJobName) {
		return nil, false
	}
	return o.MaskingJobName, true
}

// HasMaskingJobName returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasMaskingJobName() bool {
	if o != nil && !IsNil(o.MaskingJobName) {
		return true
	}

	return false
}

// SetMaskingJobName gets a reference to the given string and assigns it to the MaskingJobName field.
func (o *MaskingExecutionMetrics) SetMaskingJobName(v string) {
	o.MaskingJobName = &v
}

// GetMaskingJobType returns the MaskingJobType field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetMaskingJobType() string {
	if o == nil || IsNil(o.MaskingJobType) {
		var ret string
		return ret
	}
	return *o.MaskingJobType
}

// GetMaskingJobTypeOk returns a tuple with the MaskingJobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetMaskingJobTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MaskingJobType) {
		return nil, false
	}
	return o.MaskingJobType, true
}

// HasMaskingJobType returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasMaskingJobType() bool {
	if o != nil && !IsNil(o.MaskingJobType) {
		return true
	}

	return false
}

// SetMaskingJobType gets a reference to the given string and assigns it to the MaskingJobType field.
func (o *MaskingExecutionMetrics) SetMaskingJobType(v string) {
	o.MaskingJobType = &v
}

// GetConnectorType returns the ConnectorType field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetConnectorType() string {
	if o == nil || IsNil(o.ConnectorType) {
		var ret string
		return ret
	}
	return *o.ConnectorType
}

// GetConnectorTypeOk returns a tuple with the ConnectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetConnectorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorType) {
		return nil, false
	}
	return o.ConnectorType, true
}

// HasConnectorType returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasConnectorType() bool {
	if o != nil && !IsNil(o.ConnectorType) {
		return true
	}

	return false
}

// SetConnectorType gets a reference to the given string and assigns it to the ConnectorType field.
func (o *MaskingExecutionMetrics) SetConnectorType(v string) {
	o.ConnectorType = &v
}

// GetRulesetName returns the RulesetName field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetRulesetName() string {
	if o == nil || IsNil(o.RulesetName) {
		var ret string
		return ret
	}
	return *o.RulesetName
}

// GetRulesetNameOk returns a tuple with the RulesetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetRulesetNameOk() (*string, bool) {
	if o == nil || IsNil(o.RulesetName) {
		return nil, false
	}
	return o.RulesetName, true
}

// HasRulesetName returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasRulesetName() bool {
	if o != nil && !IsNil(o.RulesetName) {
		return true
	}

	return false
}

// SetRulesetName gets a reference to the given string and assigns it to the RulesetName field.
func (o *MaskingExecutionMetrics) SetRulesetName(v string) {
	o.RulesetName = &v
}

// GetRowsMasked returns the RowsMasked field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetRowsMasked() int64 {
	if o == nil || IsNil(o.RowsMasked) {
		var ret int64
		return ret
	}
	return *o.RowsMasked
}

// GetRowsMaskedOk returns a tuple with the RowsMasked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetRowsMaskedOk() (*int64, bool) {
	if o == nil || IsNil(o.RowsMasked) {
		return nil, false
	}
	return o.RowsMasked, true
}

// HasRowsMasked returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasRowsMasked() bool {
	if o != nil && !IsNil(o.RowsMasked) {
		return true
	}

	return false
}

// SetRowsMasked gets a reference to the given int64 and assigns it to the RowsMasked field.
func (o *MaskingExecutionMetrics) SetRowsMasked(v int64) {
	o.RowsMasked = &v
}

// GetRowsTotal returns the RowsTotal field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetRowsTotal() int64 {
	if o == nil || IsNil(o.RowsTotal) {
		var ret int64
		return ret
	}
	return *o.RowsTotal
}

// GetRowsTotalOk returns a tuple with the RowsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetRowsTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.RowsTotal) {
		return nil, false
	}
	return o.RowsTotal, true
}

// HasRowsTotal returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasRowsTotal() bool {
	if o != nil && !IsNil(o.RowsTotal) {
		return true
	}

	return false
}

// SetRowsTotal gets a reference to the given int64 and assigns it to the RowsTotal field.
func (o *MaskingExecutionMetrics) SetRowsTotal(v int64) {
	o.RowsTotal = &v
}

// GetBytesMasked returns the BytesMasked field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetBytesMasked() int64 {
	if o == nil || IsNil(o.BytesMasked) {
		var ret int64
		return ret
	}
	return *o.BytesMasked
}

// GetBytesMaskedOk returns a tuple with the BytesMasked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetBytesMaskedOk() (*int64, bool) {
	if o == nil || IsNil(o.BytesMasked) {
		return nil, false
	}
	return o.BytesMasked, true
}

// HasBytesMasked returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasBytesMasked() bool {
	if o != nil && !IsNil(o.BytesMasked) {
		return true
	}

	return false
}

// SetBytesMasked gets a reference to the given int64 and assigns it to the BytesMasked field.
func (o *MaskingExecutionMetrics) SetBytesMasked(v int64) {
	o.BytesMasked = &v
}

// GetBytesTotal returns the BytesTotal field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetBytesTotal() int64 {
	if o == nil || IsNil(o.BytesTotal) {
		var ret int64
		return ret
	}
	return *o.BytesTotal
}

// GetBytesTotalOk returns a tuple with the BytesTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetBytesTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.BytesTotal) {
		return nil, false
	}
	return o.BytesTotal, true
}

// HasBytesTotal returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasBytesTotal() bool {
	if o != nil && !IsNil(o.BytesTotal) {
		return true
	}

	return false
}

// SetBytesTotal gets a reference to the given int64 and assigns it to the BytesTotal field.
func (o *MaskingExecutionMetrics) SetBytesTotal(v int64) {
	o.BytesTotal = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *MaskingExecutionMetrics) SetDuration(v int64) {
	o.Duration = &v
}

// GetTablesFilesCount returns the TablesFilesCount field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetTablesFilesCount() int64 {
	if o == nil || IsNil(o.TablesFilesCount) {
		var ret int64
		return ret
	}
	return *o.TablesFilesCount
}

// GetTablesFilesCountOk returns a tuple with the TablesFilesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetTablesFilesCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TablesFilesCount) {
		return nil, false
	}
	return o.TablesFilesCount, true
}

// HasTablesFilesCount returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasTablesFilesCount() bool {
	if o != nil && !IsNil(o.TablesFilesCount) {
		return true
	}

	return false
}

// SetTablesFilesCount gets a reference to the given int64 and assigns it to the TablesFilesCount field.
func (o *MaskingExecutionMetrics) SetTablesFilesCount(v int64) {
	o.TablesFilesCount = &v
}

// GetMaskedTablesFilesCount returns the MaskedTablesFilesCount field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetMaskedTablesFilesCount() int64 {
	if o == nil || IsNil(o.MaskedTablesFilesCount) {
		var ret int64
		return ret
	}
	return *o.MaskedTablesFilesCount
}

// GetMaskedTablesFilesCountOk returns a tuple with the MaskedTablesFilesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetMaskedTablesFilesCountOk() (*int64, bool) {
	if o == nil || IsNil(o.MaskedTablesFilesCount) {
		return nil, false
	}
	return o.MaskedTablesFilesCount, true
}

// HasMaskedTablesFilesCount returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasMaskedTablesFilesCount() bool {
	if o != nil && !IsNil(o.MaskedTablesFilesCount) {
		return true
	}

	return false
}

// SetMaskedTablesFilesCount gets a reference to the given int64 and assigns it to the MaskedTablesFilesCount field.
func (o *MaskingExecutionMetrics) SetMaskedTablesFilesCount(v int64) {
	o.MaskedTablesFilesCount = &v
}

// GetColumnsFieldsCount returns the ColumnsFieldsCount field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetColumnsFieldsCount() int64 {
	if o == nil || IsNil(o.ColumnsFieldsCount) {
		var ret int64
		return ret
	}
	return *o.ColumnsFieldsCount
}

// GetColumnsFieldsCountOk returns a tuple with the ColumnsFieldsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetColumnsFieldsCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ColumnsFieldsCount) {
		return nil, false
	}
	return o.ColumnsFieldsCount, true
}

// HasColumnsFieldsCount returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasColumnsFieldsCount() bool {
	if o != nil && !IsNil(o.ColumnsFieldsCount) {
		return true
	}

	return false
}

// SetColumnsFieldsCount gets a reference to the given int64 and assigns it to the ColumnsFieldsCount field.
func (o *MaskingExecutionMetrics) SetColumnsFieldsCount(v int64) {
	o.ColumnsFieldsCount = &v
}

// GetMaskedColumnsFieldsCount returns the MaskedColumnsFieldsCount field value if set, zero value otherwise.
func (o *MaskingExecutionMetrics) GetMaskedColumnsFieldsCount() int64 {
	if o == nil || IsNil(o.MaskedColumnsFieldsCount) {
		var ret int64
		return ret
	}
	return *o.MaskedColumnsFieldsCount
}

// GetMaskedColumnsFieldsCountOk returns a tuple with the MaskedColumnsFieldsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingExecutionMetrics) GetMaskedColumnsFieldsCountOk() (*int64, bool) {
	if o == nil || IsNil(o.MaskedColumnsFieldsCount) {
		return nil, false
	}
	return o.MaskedColumnsFieldsCount, true
}

// HasMaskedColumnsFieldsCount returns a boolean if a field has been set.
func (o *MaskingExecutionMetrics) HasMaskedColumnsFieldsCount() bool {
	if o != nil && !IsNil(o.MaskedColumnsFieldsCount) {
		return true
	}

	return false
}

// SetMaskedColumnsFieldsCount gets a reference to the given int64 and assigns it to the MaskedColumnsFieldsCount field.
func (o *MaskingExecutionMetrics) SetMaskedColumnsFieldsCount(v int64) {
	o.MaskedColumnsFieldsCount = &v
}

func (o MaskingExecutionMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaskingExecutionMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MaskingJobName) {
		toSerialize["masking_job_name"] = o.MaskingJobName
	}
	if !IsNil(o.MaskingJobType) {
		toSerialize["masking_job_type"] = o.MaskingJobType
	}
	if !IsNil(o.ConnectorType) {
		toSerialize["connector_type"] = o.ConnectorType
	}
	if !IsNil(o.RulesetName) {
		toSerialize["ruleset_name"] = o.RulesetName
	}
	if !IsNil(o.RowsMasked) {
		toSerialize["rows_masked"] = o.RowsMasked
	}
	if !IsNil(o.RowsTotal) {
		toSerialize["rows_total"] = o.RowsTotal
	}
	if !IsNil(o.BytesMasked) {
		toSerialize["bytes_masked"] = o.BytesMasked
	}
	if !IsNil(o.BytesTotal) {
		toSerialize["bytes_total"] = o.BytesTotal
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.TablesFilesCount) {
		toSerialize["tables_files_count"] = o.TablesFilesCount
	}
	if !IsNil(o.MaskedTablesFilesCount) {
		toSerialize["masked_tables_files_count"] = o.MaskedTablesFilesCount
	}
	if !IsNil(o.ColumnsFieldsCount) {
		toSerialize["columns_fields_count"] = o.ColumnsFieldsCount
	}
	if !IsNil(o.MaskedColumnsFieldsCount) {
		toSerialize["masked_columns_fields_count"] = o.MaskedColumnsFieldsCount
	}
	return toSerialize, nil
}

type NullableMaskingExecutionMetrics struct {
	value *MaskingExecutionMetrics
	isSet bool
}

func (v NullableMaskingExecutionMetrics) Get() *MaskingExecutionMetrics {
	return v.value
}

func (v *NullableMaskingExecutionMetrics) Set(val *MaskingExecutionMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableMaskingExecutionMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableMaskingExecutionMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaskingExecutionMetrics(val *MaskingExecutionMetrics) *NullableMaskingExecutionMetrics {
	return &NullableMaskingExecutionMetrics{value: val, isSet: true}
}

func (v NullableMaskingExecutionMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaskingExecutionMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


