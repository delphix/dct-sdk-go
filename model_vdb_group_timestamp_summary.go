/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the VdbGroupTimestampSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VdbGroupTimestampSummary{}

// VdbGroupTimestampSummary struct for VdbGroupTimestampSummary
type VdbGroupTimestampSummary struct {
	Items []VdbGroupTimestampSummaryItem `json:"items,omitempty"`
}

// NewVdbGroupTimestampSummary instantiates a new VdbGroupTimestampSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdbGroupTimestampSummary() *VdbGroupTimestampSummary {
	this := VdbGroupTimestampSummary{}
	return &this
}

// NewVdbGroupTimestampSummaryWithDefaults instantiates a new VdbGroupTimestampSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdbGroupTimestampSummaryWithDefaults() *VdbGroupTimestampSummary {
	this := VdbGroupTimestampSummary{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *VdbGroupTimestampSummary) GetItems() []VdbGroupTimestampSummaryItem {
	if o == nil || IsNil(o.Items) {
		var ret []VdbGroupTimestampSummaryItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdbGroupTimestampSummary) GetItemsOk() ([]VdbGroupTimestampSummaryItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *VdbGroupTimestampSummary) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []VdbGroupTimestampSummaryItem and assigns it to the Items field.
func (o *VdbGroupTimestampSummary) SetItems(v []VdbGroupTimestampSummaryItem) {
	o.Items = v
}

func (o VdbGroupTimestampSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VdbGroupTimestampSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableVdbGroupTimestampSummary struct {
	value *VdbGroupTimestampSummary
	isSet bool
}

func (v NullableVdbGroupTimestampSummary) Get() *VdbGroupTimestampSummary {
	return v.value
}

func (v *NullableVdbGroupTimestampSummary) Set(val *VdbGroupTimestampSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVdbGroupTimestampSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVdbGroupTimestampSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdbGroupTimestampSummary(val *VdbGroupTimestampSummary) *NullableVdbGroupTimestampSummary {
	return &NullableVdbGroupTimestampSummary{value: val, isSet: true}
}

func (v NullableVdbGroupTimestampSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdbGroupTimestampSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


