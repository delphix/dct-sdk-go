/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RefreshVDBGroupParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshVDBGroupParameters{}

// RefreshVDBGroupParameters Parameters to refresh a VDB Group.
type RefreshVDBGroupParameters struct {
	// ID of a bookmark to refresh this VDB Group to.
	BookmarkId string `json:"bookmark_id"`
}

type _RefreshVDBGroupParameters RefreshVDBGroupParameters

// NewRefreshVDBGroupParameters instantiates a new RefreshVDBGroupParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshVDBGroupParameters(bookmarkId string) *RefreshVDBGroupParameters {
	this := RefreshVDBGroupParameters{}
	this.BookmarkId = bookmarkId
	return &this
}

// NewRefreshVDBGroupParametersWithDefaults instantiates a new RefreshVDBGroupParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshVDBGroupParametersWithDefaults() *RefreshVDBGroupParameters {
	this := RefreshVDBGroupParameters{}
	return &this
}

// GetBookmarkId returns the BookmarkId field value
func (o *RefreshVDBGroupParameters) GetBookmarkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BookmarkId
}

// GetBookmarkIdOk returns a tuple with the BookmarkId field value
// and a boolean to check if the value has been set.
func (o *RefreshVDBGroupParameters) GetBookmarkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BookmarkId, true
}

// SetBookmarkId sets field value
func (o *RefreshVDBGroupParameters) SetBookmarkId(v string) {
	o.BookmarkId = v
}

func (o RefreshVDBGroupParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshVDBGroupParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bookmark_id"] = o.BookmarkId
	return toSerialize, nil
}

func (o *RefreshVDBGroupParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bookmark_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRefreshVDBGroupParameters := _RefreshVDBGroupParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRefreshVDBGroupParameters)

	if err != nil {
		return err
	}

	*o = RefreshVDBGroupParameters(varRefreshVDBGroupParameters)

	return err
}

type NullableRefreshVDBGroupParameters struct {
	value *RefreshVDBGroupParameters
	isSet bool
}

func (v NullableRefreshVDBGroupParameters) Get() *RefreshVDBGroupParameters {
	return v.value
}

func (v *NullableRefreshVDBGroupParameters) Set(val *RefreshVDBGroupParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshVDBGroupParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshVDBGroupParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshVDBGroupParameters(val *RefreshVDBGroupParameters) *NullableRefreshVDBGroupParameters {
	return &NullableRefreshVDBGroupParameters{value: val, isSet: true}
}

func (v NullableRefreshVDBGroupParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshVDBGroupParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


