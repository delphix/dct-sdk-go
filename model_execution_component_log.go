/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the ExecutionComponentLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionComponentLog{}

// ExecutionComponentLog A log containing information about an execution component
type ExecutionComponentLog struct {
	// The ID of the execution component
	ExecutionComponentId *string `json:"execution_component_id,omitempty"`
	// The execution component log contents
	Log *string `json:"log,omitempty"`
}

// NewExecutionComponentLog instantiates a new ExecutionComponentLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionComponentLog() *ExecutionComponentLog {
	this := ExecutionComponentLog{}
	return &this
}

// NewExecutionComponentLogWithDefaults instantiates a new ExecutionComponentLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionComponentLogWithDefaults() *ExecutionComponentLog {
	this := ExecutionComponentLog{}
	return &this
}

// GetExecutionComponentId returns the ExecutionComponentId field value if set, zero value otherwise.
func (o *ExecutionComponentLog) GetExecutionComponentId() string {
	if o == nil || IsNil(o.ExecutionComponentId) {
		var ret string
		return ret
	}
	return *o.ExecutionComponentId
}

// GetExecutionComponentIdOk returns a tuple with the ExecutionComponentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionComponentLog) GetExecutionComponentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionComponentId) {
		return nil, false
	}
	return o.ExecutionComponentId, true
}

// HasExecutionComponentId returns a boolean if a field has been set.
func (o *ExecutionComponentLog) HasExecutionComponentId() bool {
	if o != nil && !IsNil(o.ExecutionComponentId) {
		return true
	}

	return false
}

// SetExecutionComponentId gets a reference to the given string and assigns it to the ExecutionComponentId field.
func (o *ExecutionComponentLog) SetExecutionComponentId(v string) {
	o.ExecutionComponentId = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *ExecutionComponentLog) GetLog() string {
	if o == nil || IsNil(o.Log) {
		var ret string
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionComponentLog) GetLogOk() (*string, bool) {
	if o == nil || IsNil(o.Log) {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *ExecutionComponentLog) HasLog() bool {
	if o != nil && !IsNil(o.Log) {
		return true
	}

	return false
}

// SetLog gets a reference to the given string and assigns it to the Log field.
func (o *ExecutionComponentLog) SetLog(v string) {
	o.Log = &v
}

func (o ExecutionComponentLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionComponentLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutionComponentId) {
		toSerialize["execution_component_id"] = o.ExecutionComponentId
	}
	if !IsNil(o.Log) {
		toSerialize["log"] = o.Log
	}
	return toSerialize, nil
}

type NullableExecutionComponentLog struct {
	value *ExecutionComponentLog
	isSet bool
}

func (v NullableExecutionComponentLog) Get() *ExecutionComponentLog {
	return v.value
}

func (v *NullableExecutionComponentLog) Set(val *ExecutionComponentLog) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionComponentLog) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionComponentLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionComponentLog(val *ExecutionComponentLog) *NullableExecutionComponentLog {
	return &NullableExecutionComponentLog{value: val, isSet: true}
}

func (v NullableExecutionComponentLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionComponentLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


