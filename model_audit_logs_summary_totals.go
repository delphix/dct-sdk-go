/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the AuditLogsSummaryTotals type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogsSummaryTotals{}

// AuditLogsSummaryTotals The global totals of different actions performed across all accounts.
type AuditLogsSummaryTotals struct {
	TotalVdbRefreshes *int32 `json:"total_vdb_refreshes,omitempty"`
	TotalMaskingJobs *int32 `json:"total_masking_jobs,omitempty"`
}

// NewAuditLogsSummaryTotals instantiates a new AuditLogsSummaryTotals object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogsSummaryTotals() *AuditLogsSummaryTotals {
	this := AuditLogsSummaryTotals{}
	return &this
}

// NewAuditLogsSummaryTotalsWithDefaults instantiates a new AuditLogsSummaryTotals object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogsSummaryTotalsWithDefaults() *AuditLogsSummaryTotals {
	this := AuditLogsSummaryTotals{}
	return &this
}

// GetTotalVdbRefreshes returns the TotalVdbRefreshes field value if set, zero value otherwise.
func (o *AuditLogsSummaryTotals) GetTotalVdbRefreshes() int32 {
	if o == nil || IsNil(o.TotalVdbRefreshes) {
		var ret int32
		return ret
	}
	return *o.TotalVdbRefreshes
}

// GetTotalVdbRefreshesOk returns a tuple with the TotalVdbRefreshes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSummaryTotals) GetTotalVdbRefreshesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalVdbRefreshes) {
		return nil, false
	}
	return o.TotalVdbRefreshes, true
}

// HasTotalVdbRefreshes returns a boolean if a field has been set.
func (o *AuditLogsSummaryTotals) HasTotalVdbRefreshes() bool {
	if o != nil && !IsNil(o.TotalVdbRefreshes) {
		return true
	}

	return false
}

// SetTotalVdbRefreshes gets a reference to the given int32 and assigns it to the TotalVdbRefreshes field.
func (o *AuditLogsSummaryTotals) SetTotalVdbRefreshes(v int32) {
	o.TotalVdbRefreshes = &v
}

// GetTotalMaskingJobs returns the TotalMaskingJobs field value if set, zero value otherwise.
func (o *AuditLogsSummaryTotals) GetTotalMaskingJobs() int32 {
	if o == nil || IsNil(o.TotalMaskingJobs) {
		var ret int32
		return ret
	}
	return *o.TotalMaskingJobs
}

// GetTotalMaskingJobsOk returns a tuple with the TotalMaskingJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSummaryTotals) GetTotalMaskingJobsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalMaskingJobs) {
		return nil, false
	}
	return o.TotalMaskingJobs, true
}

// HasTotalMaskingJobs returns a boolean if a field has been set.
func (o *AuditLogsSummaryTotals) HasTotalMaskingJobs() bool {
	if o != nil && !IsNil(o.TotalMaskingJobs) {
		return true
	}

	return false
}

// SetTotalMaskingJobs gets a reference to the given int32 and assigns it to the TotalMaskingJobs field.
func (o *AuditLogsSummaryTotals) SetTotalMaskingJobs(v int32) {
	o.TotalMaskingJobs = &v
}

func (o AuditLogsSummaryTotals) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogsSummaryTotals) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalVdbRefreshes) {
		toSerialize["total_vdb_refreshes"] = o.TotalVdbRefreshes
	}
	if !IsNil(o.TotalMaskingJobs) {
		toSerialize["total_masking_jobs"] = o.TotalMaskingJobs
	}
	return toSerialize, nil
}

type NullableAuditLogsSummaryTotals struct {
	value *AuditLogsSummaryTotals
	isSet bool
}

func (v NullableAuditLogsSummaryTotals) Get() *AuditLogsSummaryTotals {
	return v.value
}

func (v *NullableAuditLogsSummaryTotals) Set(val *AuditLogsSummaryTotals) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogsSummaryTotals) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogsSummaryTotals) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogsSummaryTotals(val *AuditLogsSummaryTotals) *NullableAuditLogsSummaryTotals {
	return &NullableAuditLogsSummaryTotals{value: val, isSet: true}
}

func (v NullableAuditLogsSummaryTotals) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogsSummaryTotals) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


