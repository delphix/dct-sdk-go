/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductRegistrationOfflinePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductRegistrationOfflinePayload{}

// ProductRegistrationOfflinePayload Product registration object for a manually generated payload.
type ProductRegistrationOfflinePayload struct {
	DataKey string `json:"data_key"`
	AuthenticationToken string `json:"authentication_token"`
}

type _ProductRegistrationOfflinePayload ProductRegistrationOfflinePayload

// NewProductRegistrationOfflinePayload instantiates a new ProductRegistrationOfflinePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductRegistrationOfflinePayload(dataKey string, authenticationToken string) *ProductRegistrationOfflinePayload {
	this := ProductRegistrationOfflinePayload{}
	this.DataKey = dataKey
	this.AuthenticationToken = authenticationToken
	return &this
}

// NewProductRegistrationOfflinePayloadWithDefaults instantiates a new ProductRegistrationOfflinePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductRegistrationOfflinePayloadWithDefaults() *ProductRegistrationOfflinePayload {
	this := ProductRegistrationOfflinePayload{}
	return &this
}

// GetDataKey returns the DataKey field value
func (o *ProductRegistrationOfflinePayload) GetDataKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataKey
}

// GetDataKeyOk returns a tuple with the DataKey field value
// and a boolean to check if the value has been set.
func (o *ProductRegistrationOfflinePayload) GetDataKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataKey, true
}

// SetDataKey sets field value
func (o *ProductRegistrationOfflinePayload) SetDataKey(v string) {
	o.DataKey = v
}

// GetAuthenticationToken returns the AuthenticationToken field value
func (o *ProductRegistrationOfflinePayload) GetAuthenticationToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationToken
}

// GetAuthenticationTokenOk returns a tuple with the AuthenticationToken field value
// and a boolean to check if the value has been set.
func (o *ProductRegistrationOfflinePayload) GetAuthenticationTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationToken, true
}

// SetAuthenticationToken sets field value
func (o *ProductRegistrationOfflinePayload) SetAuthenticationToken(v string) {
	o.AuthenticationToken = v
}

func (o ProductRegistrationOfflinePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductRegistrationOfflinePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data_key"] = o.DataKey
	toSerialize["authentication_token"] = o.AuthenticationToken
	return toSerialize, nil
}

func (o *ProductRegistrationOfflinePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data_key",
		"authentication_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductRegistrationOfflinePayload := _ProductRegistrationOfflinePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductRegistrationOfflinePayload)

	if err != nil {
		return err
	}

	*o = ProductRegistrationOfflinePayload(varProductRegistrationOfflinePayload)

	return err
}

type NullableProductRegistrationOfflinePayload struct {
	value *ProductRegistrationOfflinePayload
	isSet bool
}

func (v NullableProductRegistrationOfflinePayload) Get() *ProductRegistrationOfflinePayload {
	return v.value
}

func (v *NullableProductRegistrationOfflinePayload) Set(val *ProductRegistrationOfflinePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableProductRegistrationOfflinePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableProductRegistrationOfflinePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductRegistrationOfflinePayload(val *ProductRegistrationOfflinePayload) *NullableProductRegistrationOfflinePayload {
	return &NullableProductRegistrationOfflinePayload{value: val, isSet: true}
}

func (v NullableProductRegistrationOfflinePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductRegistrationOfflinePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


