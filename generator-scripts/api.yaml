openapi: 3.0.0
info:
  title: Delphix DCT API
  description: Delphix DCT API
  contact:
    name: Delphix Support
    url: https://support.delphix.com
    email: support@delphix.com
  version: 3.18.0
externalDocs:
  description: External docs
  url: https://dct.delphix.com
servers:
- url: /dct/v3
security:
- ApiKeyAuth: [
    ]
paths:
  /connectivity/check:
    post:
      tags:
      - Connectivity
      summary: Checks connectivity between an engine and a remote host machine on
        a given port.
      operationId: connectivity_check
      requestBody:
        description: The api to check connectivity of engine and a remote host on
          given port.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectivityCheckParameters'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityCheckResponse'
  /database/connectivity/check:
    post:
      tags:
      - Connectivity
      summary: Tests the validity of the supplied database credentials, returning
        an error if unable to connect to the database.
      operationId: database_connectivity_check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseConnectivityCheckParameters'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectivityCheckResponse'
  /netbackup/connectivity/check:
    post:
      tags:
      - Connectivity
      summary: Checks whether the specified NetBackup master server and client are
        able to communicate on the given environment.
      operationId: netbackup_connectivity_check
      requestBody:
        description: The api to check connectivity of NetBackup master server and
          client on an environment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetbackupConnectivityCheckParameters'
        required: true
      responses:
        '200':
          description: OK
  /commvault/connectivity/check:
    post:
      tags:
      - Connectivity
      summary: Tests whether the CommServe host is accessible from the given environment
        and Commvault agent.
      operationId: commvault_connectivity_check
      requestBody:
        description: The api to check connectivity to the CommServe host and staging
          client from an environment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommvaultConnectivityCheckParameters'
        required: true
      responses:
        '200':
          description: OK
  /data-layouts:
    get:
      tags:
      - DataLayouts
      summary: List all data-layout (Self-Service Container/Template).
      operationId: get_data_layouts
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dataLayoutSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListDataLayoutResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataLayout'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /data-layouts/search:
    post:
      tags:
      - DataLayouts
      summary: Search for data-layouts.
      operationId: search_data_layouts
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dataLayoutSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchDataLayoutResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataLayout'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          type:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
  /data-layouts/{dataLayoutId}:
    get:
      tags:
      - DataLayouts
      summary: Get a data-layout by ID.
      operationId: get_data_layout_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLayout'
    parameters:
    - $ref: '#/components/parameters/dataLayoutIdParam'
  /data-layouts/{dataLayoutId}/tags:
    get:
      tags:
      - DataLayouts
      summary: Get tags for a data-layout.
      operationId: get_data_layout_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - DataLayouts
      summary: Create tags for a data-layout.
      operationId: create_data_layout_tags
      requestBody:
        description: Tags information for data-layout.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/dataLayoutIdParam'
  /data-layouts/{dataLayoutId}/tags/delete:
    post:
      tags:
      - DataLayouts
      summary: Delete tags for a data-layout.
      operationId: delete_data_layout_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/dataLayoutIdParam'
  /data-layouts/{dataLayoutId}/convert-and-drop:
    post:
      tags:
      - DataLayouts
      summary: Convert and drop engine bookmarks and vdb groups for the data-layout.
      operationId: convert_and_drop_bookmarks
      requestBody:
        description: Import engine accounts request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertDataLayoutRequest'
        required: false
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertDataLayoutResponse'
    parameters:
    - $ref: '#/components/parameters/dataLayoutIdParam'
  /data-layouts/import-engine-accounts:
    post:
      tags:
      - DataLayouts
      summary: Import engine (self-service) accounts.
      operationId: import_engine_accounts
      requestBody:
        description: Import engine accounts request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportEngineAccountRequest'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                title: ImportEngineAccountsResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /bookmarks:
    get:
      tags:
      - Bookmarks
      summary: List all bookmarks.
      operationId: get_bookmarks
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/bookmarksSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListBookmarksResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Bookmarks
      summary: Create a bookmark at the current time.
      operationId: create_bookmark
      requestBody:
        $ref: '#/components/requestBodies/CreateBookmark'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                title: CreateBookmarkResponse
                type: object
                properties:
                  bookmark:
                    $ref: '#/components/schemas/Bookmark'
                  job:
                    $ref: '#/components/schemas/Job'
  /bookmarks/search:
    post:
      tags:
      - Bookmarks
      summary: Search for bookmarks.
      operationId: search_bookmarks
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/bookmarksSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchBookmarksResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          creation_date:
            type: date-time
          data_timestamp:
            type: date-time
          vdb_ids:
            type: array[string]
          dsource_ids:
            type: array[string]
          retention:
            type: integer
          expiration:
            type: date
          bookmark_source:
            type: string
          bookmark_status:
            type: string
          ss_data_layout_id:
            type: string
          ss_bookmark_reference:
            type: string
          ss_bookmark_errors:
            type: array[string]
          bookmark_type:
            type: string
          timeflow_id:
            type: date-time
          location:
            type: string
          vdb_group_id:
            type: string
          vdb_group_name:
            type: string
          vdbs:
            type: array[object]
            fields:
              vdb_id:
                type: string
              vdb_name:
                type: string
          dsources:
            type: array[object]
            fields:
              dsource_id:
                type: string
              dsource_name:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /bookmarks/{bookmarkId}:
    get:
      tags:
      - Bookmarks
      summary: Get a bookmark by ID.
      operationId: get_bookmark_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
    delete:
      tags:
      - Bookmarks
      summary: Delete a bookmark.
      operationId: delete_bookmark
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - Bookmarks
      summary: Update a bookmark
      operationId: update_bookmark
      requestBody:
        description: The new data to update a Bookmark.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookmarkParameters'
      responses:
        '200':
          description: Bookmark update initiated.
          content:
            application/json:
              schema:
                title: UpdateBookmarkResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/bookmarkIdParam'
  /bookmarks/{bookmarkId}/vdb-groups:
    get:
      tags:
      - Bookmarks
      summary: List VDB Groups compatible with this bookmark.
      operationId: get_vdb_groups_by_bookmark
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vdbGroupsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVDBGroupsByBookmarkResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/bookmarkIdParam'
  /bookmarks/{bookmarkId}/vdb-groups/search:
    post:
      tags:
      - Bookmarks
      summary: Search for VDB Groups compatible with this bookmark.
      operationId: search_vdb_groups_by_bookmark
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vdbGroupsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVDBGroupsByBookmarkResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          database_type:
            type: string
          status:
            type: string
          last_successful_refresh_to_bookmark_id:
            type: string
          last_successful_refresh_time:
            type: string
          vdb_ids:
            type: array[string]
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
    parameters:
    - $ref: '#/components/parameters/bookmarkIdParam'
  /bookmarks/{bookmarkId}/tags:
    get:
      tags:
      - Bookmarks
      summary: Get tags for a Bookmark.
      operationId: get_bookmark_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Bookmarks
      summary: Create tags for a Bookmark.
      operationId: create_bookmark_tags
      requestBody:
        description: Tags information for Bookmark.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/bookmarkIdParam'
  /bookmarks/{bookmarkId}/tags/delete:
    post:
      tags:
      - Bookmarks
      summary: Delete tags for a Bookmark.
      operationId: delete_bookmark_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/bookmarkIdParam'
  /bookmarks/import-engine-bookmarks/{engineId}:
    post:
      tags:
      - Bookmarks
      summary: Import engine bookmarks to DCT.
      operationId: import_engine_bookmarks
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportEngineBookmarkResponse'
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /sources:
    get:
      tags:
      - Sources
      summary: List all sources.
      operationId: get_sources
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/sourcesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListSourcesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /sources/oracle:
    post:
      tags:
      - Sources
      summary: Create an Oracle Source.
      operationId: create_oracle_source
      requestBody:
        $ref: '#/components/requestBodies/CreateOracleSourceBody'
      responses:
        '201':
          description: Oracle Source creation initiated
          content:
            application/json:
              schema:
                title: CreateOracleSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                  source_id:
                    type: string
                    description: The id of the created source.
                    example: 1-ORACLE_SINGLE_CONFIG-32
  /sources/postgres:
    post:
      tags:
      - Sources
      summary: Create a PostgreSQL source.
      operationId: create_postgres_source
      requestBody:
        $ref: '#/components/requestBodies/CreatePostgresSource'
      responses:
        '201':
          description: PostgreSQL Source creation initiated
          content:
            application/json:
              schema:
                title: CreatePostgresSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                  source_id:
                    type: string
                    description: The id of the created source.
                    example: source-1
  /sources/postgres/{sourceId}:
    patch:
      tags:
      - Sources
      summary: Update a PostgreSQL source by ID.
      operationId: update_postgres_source_by_id
      requestBody:
        $ref: '#/components/requestBodies/UpdatePostgresSource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdatePostgresSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/sourceIdParam'
  /sources/search:
    post:
      tags:
      - Sources
      summary: Search for Sources.
      operationId: search_sources
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/sourcesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchSourcesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          database_type:
            type: string
          name:
            type: string
          database_version:
            type: string
          environment_id:
            type: string
          data_uuid:
            type: string
          ip_address:
            type: string
          fqdn:
            type: string
          size:
            type: integer
          jdbc_connection_string:
            type: string
          plugin_version:
            type: string
          is_dsource:
            type: boolean
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          recovery_model:
            type: string
          mssql_source_type:
            type: string
          appdata_source_type:
            type: string
          is_pdb:
            type: boolean
          instance_name:
            type: string
          instance_number:
            type: integer
          user:
            type: string
          non_sys_user:
            type: string
          discovered:
            type: boolean
          linking_enabled:
            type: boolean
          repository:
            type: string
  /sources/{sourceId}:
    get:
      tags:
      - Sources
      summary: Get a source by ID.
      operationId: get_source_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
    delete:
      tags:
      - Sources
      summary: Delete a source by ID.
      operationId: delete_source
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/sourceIdParam'
  /sources/{sourceId}/update:
    patch:
      tags:
      - Sources
      summary: Update a Source.
      operationId: update_source_by_id
      requestBody:
        description: The parameters to update a Source.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSourceParameters'
      responses:
        '200':
          description: Source update initiated.
          content:
            application/json:
              schema:
                title: UpdateSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/sourceIdParam'
  /sources/{sourceId}/tags:
    get:
      tags:
      - Sources
      summary: Get tags for a Source.
      operationId: get_source_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Sources
      summary: Create tags for a Source.
      operationId: create_source_tags
      requestBody:
        description: Tags information for Source.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/sourceIdParam'
  /sources/{sourceId}/staging_compatible_repositories:
    get:
      tags:
      - Sources
      summary: Returns a list of repositories that match the specified source.
      operationId: get_source_compatible_repo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: StagingCompatibleEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
    parameters:
    - $ref: '#/components/parameters/sourceIdParam'
  /sources/{sourceId}/tags/delete:
    post:
      tags:
      - Sources
      summary: Delete tags for a Source.
      operationId: delete_source_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/sourceIdParam'
  /staging-sources:
    get:
      tags:
      - StagingSources
      summary: List all staging sources.
      operationId: get_staging_sources
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/stagingSourcesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListStagingSourcesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/StagingSource'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /staging-sources/search:
    post:
      tags:
      - StagingSources
      summary: Search for Staging Sources.
      operationId: search_staging_sources
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/stagingSourcesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchStagingSourcesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/StagingSource'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          database_type:
            type: string
          database_name:
            type: string
          database_version:
            type: string
          environment_id:
            type: string
          data_uuid:
            type: string
          ip_address:
            type: string
          fqdn:
            type: string
          repository:
            type: string
          oracle_config_type:
            type: string
          cdb_type:
            type: string
          dsource_id:
            type: string
  /staging-sources/{stagingSourceId}:
    get:
      tags:
      - StagingSources
      summary: Get a staging source by ID.
      operationId: get_staging_source_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StagingSource'
    parameters:
    - $ref: '#/components/parameters/stagingSourceIdParam'
  /staging-sources/{stagingSourceId}/update:
    patch:
      tags:
      - StagingSources
      summary: Update a Staging Source.
      operationId: update_staging_source_by_id
      requestBody:
        description: The parameters to update a Staging Source.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStagingSourceParameters'
      responses:
        '200':
          description: Staging Source update initiated.
          content:
            application/json:
              schema:
                title: UpdateStagingSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/stagingSourceIdParam'
  /staging-sources/{stagingSourceId}/tags:
    get:
      tags:
      - StagingSources
      summary: Get tags for a Staging Source.
      operationId: get_staging_source_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - StagingSources
      summary: Create tags for a Staging Source.
      operationId: create_staging_source_tags
      requestBody:
        description: Tags information for Staging Source.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/stagingSourceIdParam'
  /staging-sources/{stagingSourceId}/tags/delete:
    post:
      tags:
      - StagingSources
      summary: Delete tags for a Staging Source.
      operationId: delete_staging_source_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/stagingSourceIdParam'
  /dsources:
    get:
      tags:
      - DSources
      summary: List all dSources.
      operationId: get_dsources
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dsourcesSortParam'
      - $ref: '#/components/parameters/permission'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListDSourcesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSource'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /dsources/oracle:
    post:
      tags:
      - DSources
      summary: Link Oracle database as dSource.
      operationId: link_oracle_database
      requestBody:
        $ref: '#/components/requestBodies/OracleLinkDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/oracle/defaults:
    post:
      tags:
      - DSources
      summary: Get defaults for dSource linking.
      operationId: get_oracle_dsource_linking_defaults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkDSourceDefaultRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OracleDSourceLinkSourceParameters'
  /dsources/oracle/{dsourceId}/detachSource:
    post:
      tags:
      - DSources
      summary: Detaches an Oracle source from an Oracle database.
      operationId: detach_oracle_dsource
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DetachDSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/oracle/{dsourceId}/attachSource:
    post:
      tags:
      - DSources
      summary: Attach an Oracle dSource to an Oracle database.
      operationId: attach_oracle_dsource
      requestBody:
        $ref: '#/components/requestBodies/OracleAttachDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: attachDSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/oracle/staging-push:
    post:
      tags:
      - DSources
      summary: Link an Oracle staging push database as dSource.
      operationId: link_oracle_staging_push_database
      requestBody:
        $ref: '#/components/requestBodies/OracleLinkStagingPushDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/oracle/staging-push/defaults:
    post:
      tags:
      - DSources
      summary: Get defaults for a Oracle staging push dSource linking.
      operationId: get_oracle_staging_push_dsource_linking_defaults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OracleLinkStagingPushDSourceDefaultRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OracleStagingPushDSourceLinkSourceParameters'
  /dsources/oracle/{dsourceId}:
    patch:
      tags:
      - DSources
      summary: Update values of an Oracle dSource
      operationId: update_oracle_dsource_by_id
      requestBody:
        description: The new data to update an Oracle dSource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOracleDsourceParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateDsourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/oracle/{dsourceId}/upgrade:
    post:
      tags:
      - DSources
      summary: Upgrade the requested Oracle dSource installation and user.
      operationId: upgrade_oracle_dsource
      requestBody:
        description: The new data to upgrade an Oracle dSource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeOracleDatabaseParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpgradeDsourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/ase:
    post:
      tags:
      - DSources
      summary: Link an ASE database as dSource.
      operationId: link_ase_database
      requestBody:
        $ref: '#/components/requestBodies/ASELinkDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/ase/defaults:
    post:
      tags:
      - DSources
      summary: Get defaults for an ASE dSource linking.
      operationId: get_ase_dsource_linking_defaults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkDSourceDefaultRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ASEDSourceLinkSourceParameters'
  /dsources/appdata:
    post:
      tags:
      - DSources
      summary: Link an AppData database as dSource.
      operationId: link_appdata_database
      requestBody:
        $ref: '#/components/requestBodies/AppDataDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/appdata/defaults:
    post:
      tags:
      - DSources
      summary: Get defaults for an AppData dSource linking.
      operationId: get_appdata_dsource_linking_defaults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkDSourceDefaultRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppDataDSourceLinkSourceParameters'
  /dsources/mssql:
    post:
      tags:
      - DSources
      summary: Link a MSSql database as dSource.
      operationId: link_mssql_database
      requestBody:
        $ref: '#/components/requestBodies/MSSQLLinkDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/mssql/{dsourceId}/detachSource:
    post:
      tags:
      - DSources
      summary: Detaches a linked source from a MSSql database.
      operationId: detach_mssql_database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DetachDSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/mssql/{dsourceId}/attachSource:
    post:
      tags:
      - DSources
      summary: Attaches a MSSql source to a previously detached dsource.
      operationId: attach_mssql_database
      requestBody:
        $ref: '#/components/requestBodies/MSSQLAttachDsourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: attachDSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/mssql/staging-push/{dsourceId}/attachSource:
    post:
      tags:
      - DSources
      summary: Attaches a MSSql staging push database to a previously detached dsource.
      operationId: attach_mssql_staging_push_database
      requestBody:
        $ref: '#/components/requestBodies/MSSQLAttachStagingPushDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: attachStagingPushDSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/mssql/defaults:
    post:
      tags:
      - DSources
      summary: Get defaults for a MSSql dSource linking.
      operationId: get_mssql_dsource_linking_defaults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkDSourceDefaultRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSSQLDSourceLinkSourceParameters'
  /dsources/mssql/staging-push:
    post:
      tags:
      - DSources
      summary: Link a MSSql staging push database as dSource.
      operationId: link_mssql_staging_push_database
      requestBody:
        $ref: '#/components/requestBodies/MSSQLLinkStagingPushDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/mssql/staging-push/defaults:
    post:
      tags:
      - DSources
      summary: Get defaults for a MSSql staging push dSource linking.
      operationId: get_mssql_staging_push_dsource_linking_defaults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkStagingPushDSourceDefaultRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MSSQLDSourceStagingPushLinkSourceParameters'
  /dsources/delete:
    post:
      tags:
      - DSources
      summary: Delete the specified dSource.
      operationId: delete_dsource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDSourceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDSourceResponse'
  /dsources/search:
    post:
      tags:
      - DSources
      summary: Search for dSources.
      operationId: search_dsources
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dsourcesSortParam'
      - $ref: '#/components/parameters/permission'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchDSourcesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSource'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          data_uuid:
            type: string
          database_type:
            type: string
          name:
            type: string
          database_version:
            type: string
          content_type:
            type: string
          storage_size:
            type: integer
          plugin_version:
            type: string
          creation_date:
            type: string
          group_name:
            type: string
          enabled:
            type: boolean
          is_detached:
            type: boolean
          logsync_enabled:
            type: boolean
          exported_data_directory:
            type: string
          engine_id:
            type: string
          source_id:
            type: string
          status:
            type: string
          engine_name:
            type: string
          cdb_id:
            type: string
          current_timeflow_id:
            type: string
          previous_timeflow_id:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          primary_object_id:
            type: string
          primary_engine_id:
            type: string
          primary_engine_name:
            type: string
          replicas:
            type: array[object]
            fields:
              replica_id:
                type: string
              replica_engine_id:
                type: string
              replica_engine_name:
                type: string
          hooks:
            type: array[object]
            fields:
              ops_pre_sync:
                type: string
              ops_pre_log_sync:
                type: string
              ops_post_sync:
                type: string
              pre_validated_sync:
                type: string
              post_validated_sync:
                type: string
          sync_policy_id:
            type: string
          retention_policy_id:
            type: string
          replica_retention_policy_id:
            type: string
          quota_policy_id:
            type: string
          template_id:
            type: string
          allow_auto_staging_restart_on_host_reboot:
            type: boolean
          physical_standby:
            type: boolean
          validate_by_opening_db_in_read_only_mode:
            type: boolean
  /dsources/{dsourceId}:
    get:
      tags:
      - DSources
      summary: Get a dSource by ID.
      operationId: get_dsource_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSource'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/{dsourceId}/enable:
    post:
      tags:
      - DSources
      summary: Enable a dSource.
      operationId: enable_dsource
      requestBody:
        $ref: '#/components/requestBodies/EnableDsourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: EnableDsourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/{dsourceId}/disable:
    post:
      tags:
      - DSources
      summary: Disable a dSource.
      operationId: disable_dsource
      requestBody:
        $ref: '#/components/requestBodies/DisableDsourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DisableDsourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/mssql/{dsourceId}:
    patch:
      tags:
      - DSources
      summary: Update values of an MSSql dSource
      operationId: update_mssql_dsource_by_id
      requestBody:
        description: The new data to update an MSSql dSource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMSSQLDsourceParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateDsourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/{dsourceId}/snapshots:
    get:
      tags:
      - DSources
      summary: List Snapshots for a dSource.
      operationId: get_dsource_snapshots
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
    post:
      tags:
      - DSources
      summary: Snapshot a dSource.
      operationId: snapshot_dsource
      requestBody:
        description: Optional parameters to snapshot a DSource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DSourceSnapshotParameters'
            examples:
              default_values:
                summary: Using default Values
                description: |
                  This request example does not set any property and will thus use the default behavior.
                value: {
                  }
              oracle_custom:
                summary: Oracle customized
                description: |
                  This request examples customizes the snapshot process for an Oracle dSource.
                value:
                  skip_space_check: true
                  force_full_backup: dsource-name
                  double_sync: true
              mssql_specific_backup:
                summary: MSSql specific backup
                description: |
                  This request examples demonstrates how to specify a custom backup set UUID for an MSSql dSource.
                value:
                  mssql_backup_uuid: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
                  sync_strategy: specific_backup
              ase_specific_backup:
                summary: ASE specific backup
                description: |
                  This request examples demonstrates how to specify a custom backup for an ASE dSource.
                value:
                  ase_backup_files:
                  - backup_file_stripe_1
                  - backup_file_stripe_2
                  sync_strategy: specific_backup
        required: false
      responses:
        '200':
          description: dSource snapshot initiated.
          content:
            application/json:
              schema:
                title: SnapshotDSourceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/{dsourceId}/tags:
    get:
      tags:
      - DSources
      summary: Get tags for a dSource.
      operationId: get_tags_dsource
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - DSources
      summary: Create tags for a dSource.
      operationId: create_tags_dsource
      requestBody:
        description: Tags information for DSource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /dsources/{dsourceId}/tags/delete:
    post:
      tags:
      - DSources
      summary: Delete tags for a dSource.
      operationId: delete_tags_dsource
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
  /kerberos-configs/{kerberosConfigId}:
    get:
      tags:
      - KerberosConfig
      summary: Get a kerberos config by ID or Name.
      operationId: get_kerberos_config_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosConfig'
    parameters:
    - $ref: '#/components/parameters/kerberosConfigIdParam'
  /kerberos-configs:
    get:
      tags:
      - KerberosConfig
      summary: List all kerberos configs.
      operationId: list_kerberos_configs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/kerberosConfigSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListKerberosConfigsResponse`
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/KerberosConfig'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /kerberos-configs/search:
    post:
      tags:
      - KerberosConfig
      summary: Search for Kerberos Configs.
      operationId: search_kerberos_configs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/kerberosConfigSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchKerberosConfigsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/KerberosConfig'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          principal:
            type: string
          realm:
            type: string
          enabled:
            type: boolean
          kdc_servers:
            type: array[object]
            fields:
              hostname:
                type: string
              port:
                type: integer
  /password_vaults:
    get:
      tags:
      - PasswordVaults
      summary: List all password vaults.
      operationId: get_password_vaults
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/passwordVaultSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListPasswordVaultsResponse`
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PasswordVault'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /password_vaults/search:
    post:
      tags:
      - PasswordVaults
      summary: Search for Password Vaults.
      operationId: search_password_vaults
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/passwordVaultSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchPasswordVaultResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PasswordVault'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          namespace:
            type: string
          type:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
  /password_vaults/{passwordVaultId}:
    get:
      tags:
      - PasswordVaults
      summary: Get a password vault by ID or Name.
      operationId: get_password_vault_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordVault'
    parameters:
    - $ref: '#/components/parameters/passwordVaultIdParam'
  /groups:
    get:
      tags:
      - Groups
      summary: List all dataset groups.
      operationId: get_dataset_groups
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/groupSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListGroupsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatasetGroup'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /groups/search:
    post:
      tags:
      - Groups
      summary: Search for dataset groups.
      operationId: search_dataset_groups
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/groupSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchDatasetGroupResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatasetGroup'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          namespace:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
  /groups/{groupId}:
    get:
      tags:
      - Groups
      summary: Get a dataset group by ID or Name.
      operationId: get_dataset_group_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetGroup'
    parameters:
    - $ref: '#/components/parameters/groupIdParam'
  /toolkits:
    get:
      tags:
      - Toolkits
      summary: List all toolkits.
      operationId: get_toolkits
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/toolkitSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListToolkitResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Toolkit'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /toolkits/search:
    post:
      tags:
      - Toolkits
      summary: Search for toolkits.
      operationId: search_toolkits
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/toolkitSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchToolkitResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Toolkit'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          type:
            type: string
          pretty_name:
            type: string
          name:
            type: string
          reference:
            type: string
          version:
            type: string
          display_name:
            type: string
          plugin_id:
            type: string
          external_version:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
  /toolkits/{toolkitId}:
    get:
      tags:
      - Toolkits
      summary: Get Toolkit by ID.
      operationId: get_toolkit_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Toolkit'
    parameters:
    - $ref: '#/components/parameters/toolkitIdParam'
  /toolkits/{toolkitId}/tags:
    get:
      tags:
      - Toolkits
      summary: Get tags for a Toolkit.
      operationId: get_toolkit_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Toolkits
      summary: Create tags for a toolkit.
      operationId: create_toolkit_tags
      requestBody:
        description: Tags information for Toolkit.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/toolkitIdParam'
  /toolkits/{toolkitId}/tags/delete:
    post:
      tags:
      - Toolkits
      summary: Delete tags for a Toolkit.
      operationId: delete_toolkit_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/toolkitIdParam'
  /vdbs:
    get:
      tags:
      - VDBs
      summary: List all vdbs.
      operationId: get_vdbs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vdbsSortParam'
      - $ref: '#/components/parameters/permission'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVDBsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDB'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /vdbs/search:
    post:
      tags:
      - VDBs
      summary: Search for VDBs.
      operationId: search_vdbs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vdbsSortParam'
      - $ref: '#/components/parameters/permission'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVDBsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDB'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          database_type:
            type: string
          name:
            type: string
          database_name:
            type: string
          database_version:
            type: string
          jdbc_connection_string:
            type: string
          size:
            type: integer
          storage_size:
            type: integer
          engine_id:
            type: string
          status:
            type: string
          environment_id:
            type: string
          ip_address:
            type: string
          fqdn:
            type: string
          parent_id:
            type: string
          parent_dsource_id:
            type: string
          group_name:
            type: string
          creation_date:
            type: string
          last_refreshed_date:
            type: string
          current_timeflow_id:
            type: string
          previous_timeflow_id:
            type: string
          masked:
            type: boolean
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          is_locked:
            type: boolean
          exported_data_directory:
            type: string
          vcdb_exported_data_directory:
            type: string
          locked_by:
            type: integer
            format: int64
          locked_by_name:
            type: string
          content_type:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          engine_name:
            type: string
          cdb_id:
            type: string
          appdata_source_params:
            type: string
          config_params:
            type: string
          primary_object_id:
            type: string
          primary_engine_id:
            type: string
          primary_engine_name:
            type: string
          replicas:
            type: array[object]
            fields:
              replica_id:
                type: string
              replica_engine_id:
                type: string
              replica_engine_name:
                type: string
          invoke_datapatch:
            type: boolean
          node_listeners:
            type: array[string]
          instance_name:
            type: string
          instance_number:
            type: integer
          repository_id:
            type: string
  /vdbs/{vdbId}:
    get:
      tags:
      - VDBs
      summary: Get a VDB by ID.
      operationId: get_vdb_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDB'
    patch:
      tags:
      - VDBs
      summary: Update values of a VDB
      operationId: update_vdb_by_id
      requestBody:
        description: The new data to update a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVDBParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/snapshots:
    get:
      tags:
      - VDBs
      summary: List Snapshots for a VDB.
      operationId: get_vdb_snapshots
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
    post:
      tags:
      - VDBs
      summary: Snapshot a VDB.
      operationId: snapshot_vdb
      responses:
        '200':
          description: VDB snapshot initiated.
          content:
            application/json:
              schema:
                title: SnapshotVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/bookmarks:
    get:
      tags:
      - VDBs
      summary: List Bookmarks compatible with this VDB.
      operationId: get_bookmarks_by_vdb
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/bookmarksSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListBookmarksByVDBResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/bookmarks/search:
    post:
      tags:
      - VDBs
      summary: Search Bookmarks compatible with this VDB.
      operationId: search_bookmarks_by_vdb
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/bookmarksSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchBookmarksByVDBResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          creation_date:
            type: date-time
          vdb_ids:
            type: array[string]
          retention:
            type: integer
          expiration:
            type: date
          ss_data_layout_id:
            type: string
          ss_bookmark_reference:
            type: string
          ss_bookmark_errors:
            type: array[string]
          vdbs:
            type: array[object]
            fields:
              vdb_id:
                type: string
              vdb_name:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/tags:
    get:
      tags:
      - VDBs
      summary: Get tags for a VDB.
      operationId: get_tags_vdb
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - VDBs
      summary: Create tags for a VDB.
      operationId: create_vdb_tags
      requestBody:
        description: Tags information for VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/tags/delete:
    post:
      tags:
      - VDBs
      summary: Delete tags for a VDB.
      operationId: delete_vdb_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/start:
    post:
      tags:
      - VDBs
      summary: Start a VDB.
      operationId: start_vdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartVDBParameters'
        required: false
      responses:
        '200':
          description: VDB start initiated.
          content:
            application/json:
              schema:
                title: StartVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/stop:
    post:
      tags:
      - VDBs
      summary: Stop a VDB.
      operationId: stop_vdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopVDBParameters'
        required: false
      responses:
        '200':
          description: VDB stop initiated.
          content:
            application/json:
              schema:
                title: StopVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/enable:
    post:
      tags:
      - VDBs
      summary: Enable a VDB.
      operationId: enable_vdb
      requestBody:
        description: The parameters to enable a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableVDBParameters'
      responses:
        '200':
          description: VDB enable initiated.
          content:
            application/json:
              schema:
                title: EnableVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/disable:
    post:
      tags:
      - VDBs
      summary: Disable a VDB.
      operationId: disable_vdb
      requestBody:
        description: The parameters to disable a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableVDBParameters'
      responses:
        '200':
          description: VDB disable initiated.
          content:
            application/json:
              schema:
                title: DisableVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/lock:
    post:
      tags:
      - VDBs
      summary: Lock a VDB.
      operationId: lock_vdb
      requestBody:
        description: The parameters to lock a VDB.
        content:
          application/json:
            schema:
              title: LockVDBParameters
              type: object
              properties:
                account_id:
                  type: integer
                  description: Id of the account on whose behalf this request is being
                    made. Only accounts having LOCK_FOR_OTHER_ACCOUNT permission can
                    lock VDBs on behalf of other accounts. If this property is not
                    specified then the account id of the authenticated user making
                    the request is used.
                  format: int64
        required: true
      responses:
        '200':
          description: VDB is locked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDB'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/unlock:
    post:
      tags:
      - VDBs
      summary: Unlock a VDB.
      operationId: unlock_vdb
      responses:
        '200':
          description: VDB is unlocked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDB'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/delete:
    post:
      tags:
      - VDBs
      summary: Delete a VDB.
      operationId: delete_vdb
      requestBody:
        description: The parameters to delete a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVDBParameters'
      responses:
        '200':
          description: VDB delete initiated.
          content:
            application/json:
              schema:
                title: DeleteVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/rollback_by_timestamp:
    post:
      tags:
      - VDBs
      summary: Rollback a VDB by timestamp.
      operationId: rollback_vdb_by_timestamp
      requestBody:
        description: The parameters to rollback a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackVDBByTimestampParameters'
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                title: RollbackVDBByTimestampResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/rollback_by_snapshot:
    post:
      tags:
      - VDBs
      summary: Rollback a VDB by snapshot.
      operationId: rollback_vdb_by_snapshot
      requestBody:
        description: The parameters to rollback a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackVDBBySnapshotParameters'
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                title: RollbackVDBBySnapshotResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/rollback_from_bookmark:
    post:
      tags:
      - VDBs
      summary: Rollback a VDB from a bookmark with only the same VDB.
      operationId: rollback_vdb_from_bookmark
      requestBody:
        description: The parameters to rollback a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackVDBFromBookmarkParameters'
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                title: RollbackVDBFromBookmarkResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/refresh_by_timestamp:
    post:
      tags:
      - VDBs
      summary: Refresh a VDB by timestamp.
      operationId: refresh_vdb_by_timestamp
      requestBody:
        description: The parameters to refresh a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshVDBByTimestampParameters'
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                title: RefreshVDBByTimestampResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/refresh_by_snapshot:
    post:
      tags:
      - VDBs
      summary: Refresh a VDB by snapshot.
      operationId: refresh_vdb_by_snapshot
      requestBody:
        description: The parameters to refresh a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshVDBBySnapshotParameters'
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                title: RefreshVDBBySnapshotResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/refresh_from_bookmark:
    post:
      tags:
      - VDBs
      summary: Refresh a VDB from bookmark with a single VDB.
      operationId: refresh_vdb_from_bookmark
      requestBody:
        description: The parameters to refresh a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshVDBFromBookmarkParameters'
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                title: RefreshVDBFromBookmarkResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/refresh_by_location:
    post:
      tags:
      - VDBs
      summary: Refresh a VDB by location.
      operationId: refresh_vdb_by_location
      requestBody:
        description: The parameters to refresh a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshVDBByLocationParameters'
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                title: RefreshVDBByLocationResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/undo_refresh:
    post:
      tags:
      - VDBs
      summary: Undo the last refresh operation.
      operationId: undo_refresh
      responses:
        '200':
          description: VDB undo refresh initiated.
          content:
            application/json:
              schema:
                title: UndoRefreshVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/{vdbId}/switch_timeflow:
    post:
      tags:
      - VDBs
      summary: Switches the current timeflow of a VDB.
      operationId: switch_timeflow
      requestBody:
        description: The parameters to switch the timeflow of a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchTimeflowParameters'
      responses:
        '200':
          description: Switch timeflow initiated.
          content:
            application/json:
              schema:
                title: SwitchTimeflowResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/oracle/{vdbId}/upgrade:
    post:
      tags:
      - VDBs
      summary: Upgrade Oracle VDB
      operationId: upgrade_vdb
      requestBody:
        description: The new API to upgrade Oracle VDB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeOracleDatabaseParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpgradeVDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
  /vdbs/provision_by_timestamp:
    post:
      tags:
      - VDBs
      summary: Provision a new VDB by timestamp.
      operationId: provision_vdb_by_timestamp
      requestBody:
        description: The parameters to provision a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionVDBByTimestampParameters'
        required: true
      responses:
        '200':
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_by_timestamp/defaults:
    post:
      tags:
      - VDBs
      summary: Get default provision parameters for provisioning a new VDB by timestamp.
      operationId: provision_vdb_by_timestamp_defaults
      requestBody:
        description: The request to get default VDB provision parameters for provisioning
          a new VDB by timestamp.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionVDBByTimestampDefaultsRequest'
        required: true
      responses:
        '200':
          description: Default VDB provisioning parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBByTimestampParameters'
  /vdbs/provision_by_location:
    post:
      tags:
      - VDBs
      summary: Provision a new VDB by location.
      operationId: provision_vdb_by_location
      requestBody:
        description: The parameters to provision a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionVDBByLocationParameters'
        required: true
      responses:
        '200':
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_by_location/defaults:
    post:
      tags:
      - VDBs
      summary: Get default provision parameters for provisioning a new VDB by location.
      operationId: provision_vdb_by_location_defaults
      requestBody:
        description: The request to get default VDB provision parameters for provisioning
          a new VDB by location.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionVDBByLocationDefaultsRequest'
        required: true
      responses:
        '200':
          description: Default VDB provisioning parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBByLocationParameters'
  /vdbs/provision_by_snapshot:
    post:
      tags:
      - VDBs
      summary: Provision a new VDB by snapshot.
      operationId: provision_vdb_by_snapshot
      requestBody:
        $ref: '#/components/requestBodies/ProvisionBySnapshot'
      responses:
        '200':
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_by_snapshot/defaults:
    post:
      tags:
      - VDBs
      summary: Get default provision parameters for provisioning a new VDB by snapshot.
      operationId: provision_vdb_by_snapshot_defaults
      requestBody:
        description: The request to get default VDB provision parameters for provisioning
          a new VDB by snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionVDBBySnapshotDefaultsRequest'
        required: true
      responses:
        '200':
          description: Default VDB provisioning parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBBySnapshotParameters'
  /vdbs/provision_from_bookmark:
    post:
      tags:
      - VDBs
      summary: Provision a new VDB from a bookmark with a single VDB.
      operationId: provision_vdb_from_bookmark
      requestBody:
        description: The parameters to provision a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionVDBFromBookmarkParameters'
        required: true
      responses:
        '200':
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_from_bookmark/defaults:
    post:
      tags:
      - VDBs
      summary: Get default provision parameters for provisioning a new VDB from a
        bookmark.
      operationId: provision_vdb_from_bookmark_defaults
      requestBody:
        description: The request to get default VDB provision parameters for provisioning
          a new VDB from a bookmark.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisionVDBFromBookmarkDefaultsRequest'
        required: true
      responses:
        '200':
          description: Default VDB provisioning parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBFromBookmarkParameters'
  /vdb-groups:
    get:
      tags:
      - VDBGroups
      summary: List all VDBGroups.
      operationId: get_vdb_groups
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vdbGroupsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVDBGroupsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - VDBGroups
      summary: Create a new VDB Group.
      operationId: create_vdb_group
      requestBody:
        description: The parameters to create a VDB Group.
        content:
          application/json:
            schema:
              title: CreateVDBGroupRequest
              required:
              - name
              type: object
              properties:
                name:
                  maxLength: 256
                  minLength: 1
                  type: string
                vdb_ids:
                  minItems: 1
                  type: array
                  items:
                    maxLength: 256
                    minLength: 1
                    type: string
                vdbs:
                  maxItems: 256
                  minItems: 1
                  type: array
                  description: Dictates order of operations on VDBs. Operations can
                    be performed in parallel <br> for all VDBs or sequentially. Below
                    are possible valid and invalid orderings given an example <br>
                    VDB group with 3 vdbs (A, B, and C).<br> Valid:<br> {"vdb_id":"vdb-1",
                    "order":"1"} {"vdb_id":"vdb-2", order:"1"} {vdb_id:"vdb-3", order:"1"}
                    (parallel)<br> {vdb_id:"vdb-1", order:"1"} {vdb_id:"vdb-2", order:"2"}
                    {vdb_id:"vdb-3", order:"3"} (sequential)<br> Invalid:<br> {vdb_id:"vdb-1",
                    order:"A"} {vdb_id:"vdb-2", order:"B"} {vdb_id:"vdb-3", order:"C"}
                    (sequential)<br><br> In the sequential case the vdbs with priority
                    1 is the first to be started and the last to<br> be stopped. This
                    value is set on creation of VDB groups.
                  items:
                    $ref: '#/components/schemas/CreateVDBGroupOrder'
                tags:
                  maxItems: 1000
                  minItems: 1
                  type: array
                  description: The tags to be created for VDB Group.
                  items:
                    $ref: '#/components/schemas/Tag'
                make_current_account_owner:
                  type: boolean
                  description: Whether the account creating this VDB group must be
                    configured as owner of the VDB group.
                  default: true
                refresh_immediately:
                  type: boolean
                  description: If true, VDB Group will be refreshed immediately after
                    creation.
                  default: false
        required: true
      responses:
        '201':
          description: VDB Group Created.
          content:
            application/json:
              schema:
                title: CreateVDBGroupResponse
                type: object
                properties:
                  vdb_group:
                    $ref: '#/components/schemas/VDBGroup'
                  job:
                    $ref: '#/components/schemas/Job'
  /vdb-groups/provision_from_bookmark:
    post:
      tags:
      - VDBGroups
      summary: Provision a new VDB Group from a Bookmark.
      operationId: provision_vdb_group_from_bookmark
      requestBody:
        $ref: '#/components/requestBodies/ProvisionVDBGroupFromBookmark'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ProvisionVDBGroupFromBookmarkResponse
                type: object
                properties:
                  vdb_group:
                    $ref: '#/components/schemas/VDBGroup'
                  job:
                    $ref: '#/components/schemas/Job'
  /vdb-groups/search:
    post:
      tags:
      - VDBGroups
      summary: Search for VDB Groups.
      operationId: search_vdb_groups
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vdbGroupsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVDBGroupResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          is_locked:
            type: boolean
          locked_by:
            type: integer
            format: int64
          locked_by_name:
            type: string
          vdb_group_source:
            type: string
          ss_data_layout_id:
            type: string
          vdb_ids:
            type: array[string]
  /vdb-groups/{vdbGroupId}:
    get:
      tags:
      - VDBGroups
      summary: Get a VDB Group by name.
      operationId: get_vdb_group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'
    delete:
      tags:
      - VDBGroups
      summary: Delete a VDBGoup.
      operationId: delete_vdb_group
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - VDBGroups
      summary: Update values of a VDB group.
      operationId: update_vdb_group_by_id
      requestBody:
        description: The new data to update a VDB group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVDBGroupParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateVDBGroupResponse
                type: object
                allOf:
                - $ref: '#/components/schemas/VDBGroup'
                - type: object
                  properties:
                    job:
                      $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/latest-snapshots:
    get:
      tags:
      - VDBGroups
      summary: Get latest snapshot of all the vdbs in VDB Group.
      operationId: get_vdb_group_vdbs_latest_snapshots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: LatestSnapshotsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snapshot'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/timestamp-summary:
    post:
      tags:
      - VDBGroups
      summary: Get timestamp summary of all the vdbs in VDB Group.
      operationId: get_vdb_group_timestamp_summary
      requestBody:
        content:
          application/json:
            schema:
              title: VDBGroupTimestampSummaryRequest
              type: object
              properties:
                timestamp:
                  type: string
                  description: The timestamp to get the summary for.
                  format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: VdbGroupTimestampSummaryResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/tags:
    get:
      tags:
      - VDBGroups
      summary: Get tags for a VDB Group.
      operationId: get_vdb_group_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - VDBGroups
      summary: Create tags for a VDB Group.
      operationId: create_vdb_groups_tags
      requestBody:
        description: Tags information for VDB Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/tags/delete:
    post:
      tags:
      - VDBGroups
      summary: Delete tags for a VDB Group.
      operationId: delete_vdb_group_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/refresh:
    post:
      tags:
      - VDBGroups
      summary: Refresh a VDB Group from bookmark.
      description: This API is marked as deprecated in favour of renamed API '/vdb-groups/{vdbGroupId}/refresh_from_bookmark'
      operationId: refresh_vdb_group
      requestBody:
        description: The parameters to refresh a VDB Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshVDBGroupParameters'
      responses:
        '200':
          description: VDB Group refresh initiated.
          content:
            application/json:
              schema:
                title: RefreshVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/refresh_from_bookmark:
    post:
      tags:
      - VDBGroups
      summary: Refresh a VDB Group from bookmark.
      operationId: refresh_vdb_group_from_bookmark
      requestBody:
        description: The parameters to refresh a VDB Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshVDBGroupParameters'
      responses:
        '200':
          description: VDB Group refresh initiated.
          content:
            application/json:
              schema:
                title: RefreshVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/refresh_by_snapshot:
    post:
      tags:
      - VDBGroups
      summary: Refresh a VDB Group by snapshot.
      operationId: refresh_vdb_group_by_snapshot
      requestBody:
        description: The parameters to refresh a VDB Group by snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshVDBGroupBySnapshotParameters'
      responses:
        '200':
          description: VDB Group refresh initiated.
          content:
            application/json:
              schema:
                title: RefreshVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/refresh_by_timestamp:
    post:
      tags:
      - VDBGroups
      summary: Refresh a VDB Group by timestamp.
      operationId: refresh_vdb_group_by_timestamp
      requestBody:
        description: The parameters to refresh a VDB Group by timestamp.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshVDBGroupByTimestampParameters'
      responses:
        '200':
          description: VDB Group refresh initiated.
          content:
            application/json:
              schema:
                title: RefreshVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/rollback:
    post:
      tags:
      - VDBGroups
      summary: Rollback a VDB Group from a bookmark.
      description: This API is marked as deprecated in favour of API '/vdb-groups/{vdbGroupId}/refresh_from_bookmark'
      operationId: rollback_vdb_group
      requestBody:
        description: The parameters to rollback a VDB Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackVDBGroupParameters'
      responses:
        '200':
          description: VDB Group rollback initiated.
          content:
            application/json:
              schema:
                title: RollbackVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/bookmarks:
    get:
      tags:
      - VDBGroups
      summary: List bookmarks compatible with this VDB Group.
      operationId: get_bookmarks_by_vdb_group
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/bookmarksSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListBookmarksByVDBGroupsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/bookmarks/search:
    post:
      tags:
      - VDBGroups
      summary: Search for bookmarks compatible with this VDB Group.
      operationId: search_bookmarks_by_vdb_group
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/bookmarksSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchBookmarksByVDBGroupsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          vdb_group_name:
            type: string
          creation_date:
            type: string
          vdb_ids:
            type: array[string]
          retention:
            type: integer
          expiration:
            type: string
          ss_data_layout_id:
            type: string
          ss_bookmark_reference:
            type: string
          ss_bookmark_errors:
            type: array[string]
          vdbs:
            type: array[object]
            fields:
              vdb_id:
                type: string
              vdb_name:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/lock:
    post:
      tags:
      - VDBGroups
      summary: Lock a VDB Group.
      operationId: lock_vdb_group
      requestBody:
        description: The parameters to lock a VDB Group.
        content:
          application/json:
            schema:
              title: LockVDBGroupParameters
              type: object
              properties:
                account_id:
                  type: integer
                  description: Id of the account on whose behalf this request is being
                    made. Only accounts having LOCK_FOR_OTHER_ACCOUNT permission can
                    lock VDB Groups on behalf of other accounts. If this property
                    is not specified then the account id of the authenticated user
                    making the request is used.
                  format: int64
        required: true
      responses:
        '200':
          description: VDB Group is locked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/unlock:
    post:
      tags:
      - VDBGroups
      summary: Unlock a VDB Group.
      operationId: unlock_vdb_group
      responses:
        '200':
          description: VDB Group is unlocked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/start:
    post:
      tags:
      - VDBGroups
      summary: Start a VDB Group.
      operationId: start_vdb_group
      requestBody:
        description: The parameters to start a VDB Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartVDBGroupParameters'
      responses:
        '200':
          description: VDB Group start is initiated.
          content:
            application/json:
              schema:
                title: StartVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/stop:
    post:
      tags:
      - VDBGroups
      summary: Stop a VDB Group.
      operationId: stop_vdb_group
      requestBody:
        description: The parameters to stop a VDB Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopVDBGroupParameters'
      responses:
        '200':
          description: VDB Group stop is initiated.
          content:
            application/json:
              schema:
                title: StopVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/enable:
    post:
      tags:
      - VDBGroups
      summary: Enable a VDB Group.
      operationId: enable_vdb_group
      requestBody:
        description: The parameters to enable a VDB Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableVDBGroupParameters'
      responses:
        '200':
          description: VDB Group enable is initiated.
          content:
            application/json:
              schema:
                title: EnableVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /vdb-groups/{vdbGroupId}/disable:
    post:
      tags:
      - VDBGroups
      summary: Disable a VDB Group.
      operationId: disable_vdb_group
      requestBody:
        description: The parameters to disable a VDB Group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableVDBGroupParameters'
      responses:
        '200':
          description: VDB Group disable is initiated.
          content:
            application/json:
              schema:
                title: DisableVDBGroupResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
  /snapshots:
    get:
      tags:
      - Snapshots
      summary: Retrieve the list of snapshots.
      operationId: get_snapshots
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/snapshotsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
  /snapshots/{snapshotId}:
    get:
      tags:
      - Snapshots
      summary: Get a Snapshot by ID.
      operationId: get_snapshot_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
    delete:
      tags:
      - Snapshots
      summary: Delete a Snapshot.
      operationId: delete_snapshot
      responses:
        '200':
          description: Snapshot delete initiated.
          content:
            application/json:
              schema:
                title: DeleteSnapshotResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Snapshots
      summary: Update values of a Snapshot.
      operationId: update_snapshot
      requestBody:
        description: The new data to update a Snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSnapshotParameters'
      responses:
        '200':
          description: Snapshot update initiated.
          content:
            application/json:
              schema:
                title: UpdateSnapshotResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/snapshotIdParam'
  /snapshots/{snapshotId}/unset_expiration:
    post:
      tags:
      - Snapshots
      summary: Unset a Snapshot's expiration, removing expiration and retain_forever
        values for the snapshot.
      operationId: unset_snapshot_retention
      responses:
        '200':
          description: Snapshot unset retention initiated.
          content:
            application/json:
              schema:
                title: UnsetSnapshotRetentionResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/snapshotIdParam'
  /snapshots/{snapshotId}/tags:
    get:
      tags:
      - Snapshots
      summary: Get tags for a Snapshot.
      operationId: get_snapshot_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Snapshots
      summary: Create tags for a Snapshot.
      operationId: create_snapshot_tags
      requestBody:
        description: Tags information for Snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/snapshotIdParam'
  /snapshots/{snapshotId}/tags/delete:
    post:
      tags:
      - Snapshots
      summary: Delete tags for a Snapshot.
      operationId: delete_snapshot_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/snapshotIdParam'
  /snapshots/search:
    post:
      tags:
      - Snapshots
      summary: Search snapshots.
      operationId: search_snapshots
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/snapshotsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchSnapshotsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snapshot'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          namespace:
            type: string
          name:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          consistency:
            type: string
          missing_non_logged_data:
            type: boolean
          dataset_id:
            type: string
          creation_time:
            type: string
          start_timestamp:
            type: string
          start_location:
            type: string
          timestamp:
            type: string
          location:
            type: string
          expiration:
            type: date
          retain_forever:
            type: boolean
          effective_expiration:
            type: date
          effective_retain_forever:
            type: boolean
          timeflow_id:
            type: string
          timezone:
            type: string
          version:
            type: string
          temporary:
            type: boolean
          appdata_toolkit:
            type: string
          appdata_metadata:
            type: string
          ase_db_encryption_key:
            type: string
          mssql_internal_version:
            type: integer
          mssql_backup_set_uuid:
            type: string
          mssql_backup_software_type:
            type: string
          mssql_backup_location_type:
            type: string
          mssql_empty_snapshot:
            type: boolean
          oracle_from_physical_standby_vdb:
            type: boolean
          oracle_redo_log_size_in_bytes:
            type: integer
  /snapshots/find_by_location:
    get:
      tags:
      - Snapshots
      summary: Get the snapshots at this location for a dataset.
      operationId: find_by_location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: FindByLocationResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snapshot'
    parameters:
    - $ref: '#/components/parameters/datasetIdQueryParam'
    - name: location
      in: query
      description: The location
      required: true
      style: form
      explode: true
      schema:
        maxLength: 256
        minLength: 1
        type: string
      example: 2332584
  /snapshots/find_by_timestamp:
    get:
      tags:
      - Snapshots
      summary: Get the snapshots at this timestamp for a dataset.
      operationId: find_by_timestamp
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: FindByTimestampResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snapshot'
    parameters:
    - $ref: '#/components/parameters/datasetIdQueryParam'
    - name: timestamp
      in: query
      description: The desired point in time.
      required: true
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2021-05-01T08:51:34.148Z
  /snapshots/{snapshotId}/timeflow_range:
    get:
      tags:
      - Snapshots
      summary: Return the provisionable timeflow range based on a specific snapshot.
      operationId: get_snapshot_timeflow_range
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeflowRange'
    parameters:
    - $ref: '#/components/parameters/snapshotIdParam'
  /timeflows:
    get:
      tags:
      - Timeflows
      summary: Retrieve the list of timeflows.
      operationId: get_timeflows
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/timeflowsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListTimeflowsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Timeflow'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /timeflows/{timeflowId}:
    get:
      tags:
      - Timeflows
      summary: Get a Timeflow by ID.
      operationId: get_timeflow_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeflow'
    delete:
      tags:
      - Timeflows
      summary: Delete a timeflow.
      operationId: delete_timeflow
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteTimeflowResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Timeflows
      summary: Update values of a timeflow.
      operationId: update_timeflow
      requestBody:
        description: The new data to update a timeflow.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeflowParameters'
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateTimeflowResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/timeflowIdParam'
  /timeflows/{timeflowId}/timeflowSnapshotDayRange:
    get:
      tags:
      - Timeflows
      summary: Returns the count of TimeFlow snapshots of the Timeflow aggregated
        by day.
      operationId: get_timeflow_snapshot_day_range
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsDayRangesResponse'
    parameters:
    - $ref: '#/components/parameters/timeflowIdParam'
    - name: timezone
      in: query
      description: The timezone in which the snapshot timestamps are to be interpreted.
        This property gets precedence over timezone_offset. If the timezone in this
        property is unknown to the application, the timezone_offset is used as fallback
        to interpret the snapshot timestamps.
      required: false
      style: form
      explode: true
      schema:
        type: string
    - name: timezone_offset
      in: query
      description: The offset in seconds of timezone in which the snapshot timestamps
        are to be interpreted. This property is used as fallback to interpret the
        snapshot timestamps if timezone is not valid.
      required: false
      style: form
      explode: true
      schema:
        maximum: 64800
        minimum: -64800
        type: integer
  /timeflows/{timeflowId}/tags:
    get:
      tags:
      - Timeflows
      summary: Get tags for a Timeflow.
      operationId: get_timeflow_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Timeflows
      summary: Create tags for a Timeflow.
      operationId: create_timeflow_tags
      requestBody:
        description: Tags information for Timeflow.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/timeflowIdParam'
  /timeflows/{timeflowId}/tags/delete:
    post:
      tags:
      - Timeflows
      summary: Delete tags for a Timeflow.
      operationId: delete_timeflow_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/timeflowIdParam'
  /timeflows/search:
    post:
      tags:
      - Timeflows
      summary: Search timeflows.
      operationId: search_timeflows
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/timeflowsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchTimeflowsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Timeflow'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          namespace:
            type: string
          name:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          dataset_id:
            type: string
          creation_type:
            type: string
          parent_snapshot_id:
            type: string
          parent_point_location:
            type: string
          parent_point_timestamp:
            type: string
          parent_point_timeflow_id:
            type: string
          source_data_timestamp:
            type: string
          oracle_incarnation_id:
            type: string
          oracle_cdb_timeflow_id:
            type: string
          oracle_tde_uuid:
            type: integer
          mssql_database_guid:
            type: string
          is_active:
            type: boolean
          creation_timestamp:
            type: string
          activation_timestamp:
            type: string
          parent_vdb_id:
            type: string
          parent_dsource_id:
            type: string
          source_vdb_id:
            type: string
          source_dsource_id:
            type: string
  /environments:
    get:
      tags:
      - Environments
      summary: List all environments.
      operationId: get_environments
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/envSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Environments
      summary: Create an environment.
      operationId: create_environment
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironment'
      responses:
        '201':
          description: Environment creation initiated
          content:
            application/json:
              schema:
                title: CreateEnvironmentResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                  environment_id:
                    type: string
                    description: The id of environment created.
                    example: host-environment-1
  /environments/compatible_repositories_by_snapshot:
    post:
      tags:
      - Environments
      summary: Get compatible repositories corresponding to the snapshot.
      operationId: compatible_repositories_by_snapshot
      requestBody:
        description: The request to get compatible repositories for provisioning a
          new VDB by snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotCompatibleRepositoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SnapshotCompatibleEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /environments/compatible_repositories_by_timestamp:
    post:
      tags:
      - Environments
      summary: Get compatible repositories corresponding to the timestamp.
      operationId: compatible_repositories_by_timestamp
      requestBody:
        description: The request to get compatible repositories for provisioning a
          new VDB by timestamp.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimestampCompatibleRepositoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: TimestampCompatibleEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /environments/compatible_repositories_from_bookmark:
    post:
      tags:
      - Environments
      summary: Get compatible repositories corresponding to the bookmark.
      operationId: compatible_repositories_from_bookmark
      requestBody:
        description: The request to get compatible repositories for provisioning a
          new VDB by bookmark.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarkCompatibleRepositoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: BookmarkCompatibleEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /environments/compatible_repositories_by_location:
    post:
      tags:
      - Environments
      summary: Get compatible repositories corresponding to the location.
      operationId: compatible_repositories_by_location
      requestBody:
        description: The request to get compatible repositories for provisioning a
          new VDB by location.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCompatibleRepositoryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: LocationCompatibleEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /environments/{environmentId}/repository/{repositoryId}:
    delete:
      tags:
      - Environments
      summary: Delete a repository.
      operationId: delete_repository
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: RepositoryDeleteJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Environments
      summary: Update a Repository.
      operationId: update_repository
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRepositoryParameters'
        required: true
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateRepositoryResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    - $ref: '#/components/parameters/repositoryIdParam'
  /environments/{environmentId}/repository:
    post:
      tags:
      - Environments
      summary: Create a repository.
      operationId: create_repository
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepositoryParams'
            examples:
              oracle_repository:
                summary: Oracle - Repository
                description: The request example is intended for creating a oracle
                  repository.
                value:
                  database_type: ORACLE
                  bits: 32
                  installation_home: /u01/app/oracle/product/18.0.0.0/dbhome_1
                  version: 18.3.0.0.0
              mssql_repository:
                summary: MSSql - Repository
                description: The request example is intended for creating a mssql
                  repository.
                value:
                  database_type: MSSQL
                  installation_home: C:/Program Files/Microsoft SQL Server/130
                  version: 13.2.5233.0
                  full_text_installed: true
                  instance_owner: qa-ad\delphix
                  instance_name: SQL2016
                  port: 49854
        required: true
      responses:
        '201':
          description: Repository creation initiated
          content:
            application/json:
              schema:
                title: CreateRepositoryResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                  repository_id:
                    type: string
                    description: The id of the created repository.
                    example: 1-ORACLE_INSTALL-15
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}/hosts:
    post:
      tags:
      - Environments
      summary: Create a new Host.
      operationId: create_host
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostCreateParameters'
        required: true
      responses:
        '201':
          description: Host Creation initiated
          content:
            application/json:
              schema:
                title: CreateHostResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                  cluster_node_id:
                    type: string
                    description: The id of the created cluster node.
                    example: ORACLE_CLUSTER_NODE-7
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}/hosts/{hostId}:
    delete:
      tags:
      - Environments
      summary: Delete a Host.
      operationId: delete_host
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteHostResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Environments
      summary: Update a Host.
      operationId: update_host
      requestBody:
        $ref: '#/components/requestBodies/UpdateHost'
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateHostResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    - $ref: '#/components/parameters/hostIdParam'
  /environments/{environmentId}/tags:
    get:
      tags:
      - Environments
      summary: Get tags for an Environment.
      operationId: get_tags_environment
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Environments
      summary: Create tags for an Environment.
      operationId: create_environment_tags
      requestBody:
        description: Tags information for Environment.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}/tags/delete:
    post:
      tags:
      - Environments
      summary: Delete tags for an Environment.
      operationId: delete_environment_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}:
    get:
      tags:
      - Environments
      summary: Returns an environment by ID.
      operationId: get_environment_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
    delete:
      tags:
      - Environments
      summary: Delete an environment by ID.
      operationId: delete_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteEnvironmentResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Environments
      summary: Update an environment by ID.
      operationId: update_environment
      requestBody:
        $ref: '#/components/requestBodies/UpdateEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateEnvironmentResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/search:
    post:
      tags:
      - Environments
      summary: Search for environments.
      operationId: search_environments
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/envSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          name:
            type: string
          namespace:
            type: string
          is_cluster:
            type: boolean
          cluster_home:
            type: string
          is_windows_target:
            type: boolean
          staging_environment:
            type: string
          enabled:
            type: boolean
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          hosts:
            type: array[object]
            fields:
              hostname:
                type: string
              os_name:
                type: string
              os_version:
                type: string
              memory_size:
                type: integer
              available:
                type: boolean
              available_timestamp:
                type: string
              not_available_reason:
                type: string
              nfs_addresses:
                type: array[string]
              dsp_keystore_alias:
                type: string
              dsp_keystore_path:
                type: string
              dsp_truststore_path:
                type: string
              java_home:
                type: string
              ssh_port:
                type: integer
              toolkit_path:
                type: string
              connector_port:
                type: integer
              connector_version:
                type: string
              connector_dot_net_framework_version:
                type: string
              oracle_tde_keystores_root_path:
                type: string
              processor_type:
                type: string
              timezone:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          repositories:
            type: array[object]
            fields:
              id:
                type: string
              name:
                type: string
              database_type:
                type: string
              allow_provisioning:
                type: boolean
              is_staging:
                type: boolean
              oracle_base:
                type: string
              version:
                type: string
              bits:
                type: integer
              install_group:
                type: string
              install_user:
                type: string
              rac:
                type: boolean
              ports:
                type: array[integer]
              port:
                type: integer
              dump_history_file:
                type: string
              page_size:
                type: integer
              owner:
                type: string
              installation_path:
                type: string
              fulltext_installed:
                type: boolean
              internal_version:
                type: integer
              mssql_cluster_instance_name:
                type: array[string]
              mssql_cluster_instance_version:
                type: array[string]
              installation_home:
                type: string
          listeners:
            type: array[object]
            fields:
              id:
                type: string
              namespace:
                type: string
              name:
                type: string
              client_endpoints:
                type: array[string]
              is_discovered:
                type: boolean
              host_id:
                type: string
              protocol_addresses:
                type: array[string]
  /environments/{environmentId}/enable:
    post:
      tags:
      - Environments
      summary: Enable a disabled environment.
      operationId: enable_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: EnableEnvironmentResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}/disable:
    post:
      tags:
      - Environments
      summary: Disable environment.
      operationId: disable_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DisableEnvironmentResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}/refresh:
    post:
      tags:
      - Environments
      summary: Refresh environment.
      operationId: refresh_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: RefreshEnvironmentResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}/users:
    get:
      tags:
      - Environments
      summary: List environment users.
      operationId: list_environment_users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentUsers'
    post:
      tags:
      - Environments
      summary: Create environment user.
      operationId: create_environment_user
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironmentUserBody'
      responses:
        '201':
          description: Environment user created
          content:
            application/json:
              schema:
                title: CreateEnvironmentUserResponse
                type: object
                properties:
                  user_ref:
                    type: string
                    description: The reference of the created environment user
                    example: user-reference-1
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}/users/{userRef}:
    put:
      tags:
      - Environments
      summary: Update environment user.
      operationId: update_environment_user
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironmentUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateEnvironmentUserResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    delete:
      tags:
      - Environments
      summary: Delete environment user.
      operationId: delete_environment_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteEnvironmentUserResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    - $ref: '#/components/parameters/userRefParam'
  /environments/{environmentId}/users/{userRef}/primary:
    post:
      tags:
      - Environments
      summary: Set primary environment user.
      operationId: primary_environment_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: PrimaryEnvironmentUserResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    - $ref: '#/components/parameters/userRefParam'
  /environments/{environmentId}/listeners:
    post:
      tags:
      - Environments
      summary: Create Oracle listener.
      operationId: create_oracle_listener
      requestBody:
        $ref: '#/components/requestBodies/CreateOracleListenerBody'
      responses:
        '201':
          description: Oracle listener created
          content:
            application/json:
              schema:
                title: CreateOracleListenerResponse
                type: object
                properties:
                  listener_ref:
                    type: string
                    description: The reference of the created Oracle listener
                    example: ORACLE_NODE_LISTENER-9
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
  /environments/{environmentId}/listeners/{listenerId}:
    delete:
      tags:
      - Environments
      summary: Delete an Oracle listener.
      operationId: delete_oracle_listener
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteOracleListenerResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Environments
      summary: Update an Oracle listener.
      operationId: update_oracle_listener
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOracleListenerParams'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateOracleListenerResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    - $ref: '#/components/parameters/listenerIdParam'
  /management/engines/{engineId}/validate/java-path:
    post:
      tags:
      - Management
      summary: Validate java path for the remote host machine.
      operationId: validate_java_path
      requestBody:
        description: The api to check connectivity of engine and a remote host on
          given port.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateJavaParameters'
        required: true
      responses:
        '200':
          description: OK
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /historical-storage-summary-aggregate:
    get:
      tags:
      - StorageUsage
      summary: Returns the aggregated historical storage usage of all registered engines
        over time, optionally with a projection of future storage usage.
      operationId: get_historical_storage_summary_aggregate
      parameters:
      - $ref: '#/components/parameters/startDate'
      - $ref: '#/components/parameters/endDate'
      - name: include_projection
        in: query
        description: Whether to compute a projection of future storage usage.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: engine_ids
        in: query
        description: The list of engine ids to aggregate data for. By default aggregating
          data for all engines.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns the aggregated historical storage usage of all registered
            engines over time.
          content:
            application/json:
              schema:
                title: HistoricalStorageSummaryAggregate
                type: object
                properties:
                  historical_data_points:
                    type: array
                    items:
                      $ref: '#/components/schemas/StorageSummaryHistoricalDataPoint'
                  projected_data_points:
                    type: array
                    items:
                      $ref: '#/components/schemas/StorageSummaryProjectedDataPoint'
  /historical-storage-summary-by-engine:
    get:
      tags:
      - StorageUsage
      summary: Returns the historical storage usage by engine over time, optionally
        with a projection of future storage usage.
      operationId: get_historical_storage_summary_by_engine
      parameters:
      - $ref: '#/components/parameters/startDate'
      - $ref: '#/components/parameters/endDate'
      - name: include_projection
        in: query
        description: Whether to compute a projection of future storage usage.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: engine_ids
        in: query
        description: The list of engine ids to include in the response. By default
          returning data for all engines.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns the historical storage usage by engine over time.
          content:
            application/json:
              schema:
                title: HistoricalStorageSummary
                type: object
                properties:
                  engines:
                    type: array
                    items:
                      $ref: '#/components/schemas/EngineHistoricalStorageSummary'
  /reporting/storage-savings-report/search:
    post:
      tags:
      - Reporting
      summary: Search the saving storage summary report for virtualization engines.
      operationId: search_storage_savings_summary_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/storageSavingsReportSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of saving storage summary data of virtualization
            engines.
          content:
            application/json:
              schema:
                title: StorageSavingsSummaryReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/StorageSavingsSummaryData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
                  totals:
                    $ref: '#/components/schemas/StorageSavingsReportSummarizedData'
            text/csv:
              schema:
                type: string
                example: |
                  dsource_id,dependant_vdbs,engine_name,unvirtualized_space,virtualized_space,name,estimated_savings,estimated_savings_perc
                  2-MSSQL_DB_CONTAINER-1.1,my-engine,23404216320,20896169984,testdb,524496896,99.70111311277408
      x-filterable:
        fields:
          dsource_id:
            type: string
          dependant_vdbs:
            type: integer
          engine_name:
            type: string
          unvirtualized_space:
            type: integer
          current_timeflows_unvirtualized_space:
            type: integer
          virtualized_space:
            type: integer
          name:
            type: string
          estimated_savings:
            type: integer
          estimated_savings_perc:
            type: number
          estimated_current_timeflows_savings:
            type: integer
          estimated_current_timeflows_savings_perc:
            type: number
  /reporting/vdb-inventory-report:
    get:
      tags:
      - Reporting
      summary: Gets the inventory report for virtualization engine VDBs.
      operationId: get_vdb_inventory_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vdbInventoryReportSortParam'
      responses:
        '200':
          description: Returns a list of inventory data of VDBs.
          content:
            application/json:
              schema:
                title: VDBInventoryReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBInventoryData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,type,version,parent_name,parent_id,creation_date,parent_timeflow_location,parent_timeflow_timestamp,parent_timeflow_timezone,enabled,status,storage_size
                  engine1,VDB-1,Oracle,10.2.0.5,dSource 1,1-Container-1,2022-01-07T12:06:59.157Z,54321,2022-02-07T12:03:15.821Z,"America/New_York",EDT-0400,true,Running,123456
  /reporting/vdb-inventory-report/search:
    post:
      tags:
      - Reporting
      summary: Search the inventory report for virtualization engine VDBs.
      operationId: search_vdb_inventory_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vdbInventoryReportSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of inventory data of VDBs.
          content:
            application/json:
              schema:
                title: VDBInventoryReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBInventoryData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,type,version,parent_name,parent_id,creation_date,parent_timeflow_location,parent_timeflow_timestamp,parent_timeflow_timezone,enabled,status
                  engine1,VDB-1,Oracle,10.2.0.5,dSource 1,1-Container-1,2022-01-07T12:06:59.157Z,54321,2022-02-07T12:03:15.821Z,"America/New_York",EDT-0400,true,Running
      x-filterable:
        fields:
          name:
            type: string
          type:
            type: string
          version:
            type: string
          parent_name:
            type: string
          parent_id:
            type: string
          creation_date:
            type: string
          last_refreshed_date:
            type: string
          parent_timeflow_location:
            type: string
          parent_timeflow_timestamp:
            type: string
          parent_timeflow_timezone:
            type: string
          enabled:
            type: boolean
          status:
            type: string
          engine_name:
            type: string
          storage_size:
            type: string
  /reporting/dsource-usage-report:
    get:
      tags:
      - Reporting
      summary: Gets the usage report for virtualization engine dSources.
      operationId: get_dsource_usage_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dSourceUsageReportSortParam'
      responses:
        '200':
          description: Returns a list of dSource usage data.
          content:
            application/json:
              schema:
                title: DSourceUsageReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSourceUsageData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,unvirtualized_space,actual_space,dependant_vdbs
                  engine1,prod01,1849457664,607240704,0
                  engine2,test03,1696232960,1290392576,2
  /reporting/dsource-usage-report/search:
    post:
      tags:
      - Reporting
      summary: Search the usage report for virtualization engine dSources.
      operationId: search_dsource_usage_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dSourceUsageReportSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of dSource usage data.
          content:
            application/json:
              schema:
                title: DSourceUsageReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSourceUsageData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,unvirtualized_space,actual_space,dependant_vdbs
                  engine1,prod01,1849457664,607240704,0
                  engine2,test03,1696232960,1290392576,2
      x-filterable:
        fields:
          name:
            type: string
          unvirtualized_space:
            type: integer
          actual_space:
            type: integer
          dependant_vdbs:
            type: integer
          engine_name:
            type: string
  /reporting/dsource-consumption-report:
    get:
      tags:
      - Reporting
      summary: Gets the consumption report for virtualization engine dSources.
      operationId: get_dsource_consumption_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dSourceConsumptionReportSortParam'
      responses:
        '200':
          description: Returns a list of dSource consumption data.
          content:
            application/json:
              schema:
                title: DSourceConsumptionReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSourceConsumptionData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  name,status,database_type,engine_id,engine_name,last_consumption_date,ingested_size
                  dsource1,Running,Oracle,1,engine1,2022-05-29T15:00:00-04:00,12345
                  dsource2,Stopped,SQL Server,1,engine2,2022-05-29T15:00:00-04:00,12345
  /reporting/dsource-consumption-report/search:
    post:
      tags:
      - Reporting
      summary: Search the consumption report for virtualization engine DSources.
      operationId: search_dsource_consumption_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dSourceConsumptionReportSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of dSource consumption data.
          content:
            application/json:
              schema:
                title: DSourceConsumptionReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSourceConsumptionData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  name,status,database_type,engine_id,engine_name,last_consumption_date,ingested_size
                  dsource1,Running,Oracle,1,engine1,2022-05-29T15:00:00-04:00,12345
                  dsource2,Stopped,SQL Server,1,engine2,2022-05-29T15:00:00-04:00,12345
      x-filterable:
        fields:
          name:
            type: string
          status:
            type: string
          database_type:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          last_consumption_date:
            type: string
            format: date-time
          ingested_size:
            type: integer
  /database-templates:
    get:
      tags:
      - DatabaseTemplates
      summary: Retrieve the list of database templates.
      operationId: get_database_templates
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/databaseTemplatesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListDatabaseTemplatesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatabaseTemplate'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - DatabaseTemplates
      summary: Create a database template.
      operationId: create_database_template
      requestBody:
        $ref: '#/components/requestBodies/CreateDatabaseTemplate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CreateDatabaseTemplateResponse
                type: object
                properties:
                  database_template:
                    $ref: '#/components/schemas/DatabaseTemplate'
                  job:
                    $ref: '#/components/schemas/Job'
  /database-templates/{databaseTemplateId}:
    get:
      tags:
      - DatabaseTemplates
      summary: Retrieve a DatabaseTemplate by ID.
      operationId: get_database_template_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTemplate'
    delete:
      tags:
      - DatabaseTemplates
      summary: Delete a DatabaseTemplate by ID.
      operationId: delete_database_template
      responses:
        '200':
          description: DatabaseTemplate delete initiated.
          content:
            application/json:
              schema:
                title: DeleteDatabaseTemplateResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - DatabaseTemplates
      summary: Updates a DatabaseTemplate by ID
      operationId: update_database_template
      requestBody:
        description: The new data to update a VDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatabaseTemplateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateDatabaseTemplateResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/databaseTemplateIdParam'
  /database-templates/{databaseTemplateId}/tags:
    get:
      tags:
      - DatabaseTemplates
      summary: Get tags for a DatabaseTemplate.
      operationId: get_database_template_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - DatabaseTemplates
      summary: Create tags for a DatabaseTemplate.
      operationId: create_database_template_tags
      requestBody:
        description: Tags information for a DatabaseTemplate.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/databaseTemplateIdParam'
  /database-templates/{databaseTemplateId}/tags/delete:
    post:
      tags:
      - DatabaseTemplates
      summary: Delete tags for a DatabaseTemplate.
      operationId: delete_database_template_tag
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/databaseTemplateIdParam'
  /database-templates/search:
    post:
      tags:
      - DatabaseTemplates
      summary: Search DatabaseTemplates.
      operationId: search_database_templates
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/databaseTemplatesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchDatabaseTemplatesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatabaseTemplate'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          source_type:
            type: string
          parameters:
            type: object
            fields:
              name:
                type: string
              value:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /database-templates/import:
    post:
      tags:
      - DatabaseTemplates
      summary: Imports the database templates from an an engine.
      operationId: import_database_templates
      requestBody:
        description: Body containing the ID of the registered engine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineIdBody'
        required: true
      responses:
        '200':
          description: OK
  /database-templates/undo-import:
    post:
      tags:
      - DatabaseTemplates
      summary: Undo an import of DatabaseTemplates on an Engine.
      operationId: undo_import_database_templates
      requestBody:
        description: Body containing the ID of the registered engine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineIdBody'
        required: true
      responses:
        '200':
          description: OK
  /cdbs:
    get:
      tags:
      - CDBs
      summary: List all CDBs (Oracle only).
      operationId: get_cdbs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/cdbsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListCDBsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/CDB'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /cdbs/search:
    post:
      tags:
      - CDBs
      summary: Search for CDBs (Oracle only).
      operationId: search_cdbs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/cdbsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchCDBsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/CDB'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          database_version:
            type: string
          environment_id:
            type: string
          size:
            type: integer
          jdbc_connection_string:
            type: string
          engine_id:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          is_linked:
            type: boolean
          group_name:
            type: string
          status:
            type: string
          enabled:
            type: boolean
          instance_name:
            type: string
          instance_number:
            type: integer
          repository_id:
            type: string
  /cdbs/{cdbId}:
    get:
      tags:
      - CDBs
      summary: Get a CDB by ID (Oracle only).
      operationId: get_cdb_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CDB'
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/tags:
    get:
      tags:
      - CDBs
      summary: Get tags for a CDB.
      operationId: get_tags_cdb
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - CDBs
      summary: Create tags for a CDB.
      operationId: create_cdb_tags
      requestBody:
        description: Tags information for CDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/tags/delete:
    post:
      tags:
      - CDBs
      summary: Delete tags for a CDB.
      operationId: delete_cdb_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/enable:
    post:
      tags:
      - CDBs
      summary: Enable a CDB.
      operationId: enable_cdb
      requestBody:
        description: The parameters to enable a CDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableCDBParameters'
      responses:
        '200':
          description: CDB enable initiated.
          content:
            application/json:
              schema:
                title: EnableCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/disable:
    post:
      tags:
      - CDBs
      summary: Disable a CDB.
      operationId: disable_cdb
      requestBody:
        description: The parameters to disable a CDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableCDBParameters'
      responses:
        '200':
          description: CDB disable initiated.
          content:
            application/json:
              schema:
                title: DisableCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/delete:
    post:
      tags:
      - CDBs
      summary: Delete a CDB.
      operationId: delete_cdb
      requestBody:
        description: The parameters to delete a CDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCDBParameters'
      responses:
        '200':
          description: CDB delete initiated.
          content:
            application/json:
              schema:
                title: DeleteCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/update:
    patch:
      tags:
      - CDBs
      summary: Update a CDB.
      operationId: update_cdb_by_id
      requestBody:
        description: The parameters to update a CDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCDBParameters'
      responses:
        '200':
          description: CDB update initiated.
          content:
            application/json:
              schema:
                title: UpdateCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/upgrade:
    post:
      tags:
      - CDBs
      summary: Upgrade Oracle CDB
      operationId: upgrade_cdb
      requestBody:
        description: The new data to upgrade an Oracle CDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeOracleContainerDatabaseParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpgradeCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/detachSource:
    post:
      tags:
      - CDBs
      summary: Detaches an Oracle CDB from an Oracle database.
      operationId: detach_cdb
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DetachCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                  dsource_id:
                    type: string
                    description: The dsource id of the detached dSource.
                    example: 1-ORACLE_DB_CONTAINER-32
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /cdbs/{cdbId}/attachSource:
    post:
      tags:
      - CDBs
      summary: Attach an Oracle CDB to an Oracle database.
      operationId: attach_cdb
      requestBody:
        $ref: '#/components/requestBodies/OracleAttachCdbBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: attachCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/cdbIdParam'
  /vcdbs:
    get:
      tags:
      - VCDBs
      summary: List all vCDBs (Oracle only).
      operationId: get_vcdbs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vcdbsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVCDBsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VCDB'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /vcdbs/search:
    post:
      tags:
      - VCDBs
      summary: Search for vCDBs (Oracle only).
      operationId: search_vcdbs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/vcdbsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVCDBsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VCDB'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          database_name:
            type: string
          database_version:
            type: string
          environment_id:
            type: string
          size:
            type: integer
          engine_id:
            type: string
          status:
            type: string
          parent_id:
            type: string
          creation_date:
            type: string
          group_name:
            type: string
          enabled:
            type: boolean
          content_type:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          vcdb_restart:
            type: boolean
          invoke_datapatch:
            type: boolean
          node_listeners:
            type: array[string]
          instance_name:
            type: string
          instance_number:
            type: integer
          repository_id:
            type: string
  /vcdbs/{vcdbId}:
    get:
      tags:
      - VCDBs
      summary: Get a CDB by ID (Oracle only).
      operationId: get_vcdb_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCDB'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/tags:
    get:
      tags:
      - VCDBs
      summary: Get tags for a vCDB.
      operationId: get_tags_vcdb
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - VCDBs
      summary: Create tags for a vCDB.
      operationId: create_vcdb_tags
      requestBody:
        description: Tags information for vCDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/tags/delete:
    post:
      tags:
      - VCDBs
      summary: Delete tags for a vCDB.
      operationId: delete_vcdb_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/enable:
    post:
      tags:
      - VCDBs
      summary: Enable a vCDB.
      operationId: enable_vcdb
      requestBody:
        description: The parameters to enable a vCDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableVCDBParameters'
      responses:
        '200':
          description: vCDB enable initiated.
          content:
            application/json:
              schema:
                title: EnableVCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/disable:
    post:
      tags:
      - VCDBs
      summary: Disable a vCDB.
      operationId: disable_vcdb
      requestBody:
        description: The parameters to disable a vCDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableVCDBParameters'
      responses:
        '200':
          description: vCDB disable initiated.
          content:
            application/json:
              schema:
                title: DisableVCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/delete:
    post:
      tags:
      - VCDBs
      summary: Delete a vCDB.
      operationId: delete_vcdb
      requestBody:
        description: The parameters to delete a vCDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVCDBParameters'
      responses:
        '200':
          description: vCDB delete initiated.
          content:
            application/json:
              schema:
                title: DeleteVCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/update:
    patch:
      tags:
      - VCDBs
      summary: Update a VCDB.
      operationId: update_vcdb_by_id
      requestBody:
        description: The parameters to update a VCDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVCDBParameters'
      responses:
        '200':
          description: VCDB update initiated.
          content:
            application/json:
              schema:
                title: UpdateVCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/start:
    post:
      tags:
      - VCDBs
      summary: Start a vCDB.
      operationId: start_vcdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartVCDBParameters'
        required: false
      responses:
        '200':
          description: vCDB start initiated.
          content:
            application/json:
              schema:
                title: StartVCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/stop:
    post:
      tags:
      - VCDBs
      summary: Stop a vCDB.
      operationId: stop_vcdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopVCDBParameters'
        required: false
      responses:
        '200':
          description: vCDB stop initiated.
          content:
            application/json:
              schema:
                title: StopVCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /vcdbs/{vcdbId}/upgrade:
    post:
      tags:
      - VCDBs
      summary: Upgrade Oracle vCDB
      operationId: upgrade_vcdb
      requestBody:
        description: The new data to upgrade an Oracle vCDB.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeOracleContainerDatabaseParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpgradeVCDBResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/vcdbIdParam'
  /virtualization-policies:
    get:
      tags:
      - VirtualizationPolicies
      summary: Fetch a list of all virtualization policies
      operationId: list_virtualization_policies
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationPoliciesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVirtualizationPoliciesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationPolicy'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /virtualization-policies/search:
    post:
      tags:
      - VirtualizationPolicies
      summary: Search Virtualization Policies.
      operationId: search_virtualization_policies
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationPoliciesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVirtualizationPoliciesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationPolicy'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          dct_managed:
            type: boolean
          namespace:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          policy_type:
            type: string
          timezone_id:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          default_policy:
            type: boolean
          effective_type:
            type: string
          data_duration:
            type: integer
          data_unit:
            type: string
          log_duration:
            type: integer
          log_unit:
            type: string
          num_of_daily:
            type: integer
          num_of_weekly:
            type: integer
          day_of_week:
            type: string
          num_of_monthly:
            type: integer
          day_of_month:
            type: integer
          num_of_yearly:
            type: integer
          day_of_year:
            type: string
          size:
            type: integer
          schedules:
            type: array[object]
            fields:
              cron_string:
                type: string
              cutoff_time:
                type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /virtualization-policies/{policyId}:
    get:
      tags:
      - VirtualizationPolicies
      summary: Fetch a virtualization policy by Id.
      operationId: get_virtualization_policy_by_id
      responses:
        '200':
          description: Returns a single virtualization policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualizationPolicy'
        '404':
          description: Virtualization policy not found
    parameters:
    - $ref: '#/components/parameters/virtualizationPolicyIdParam'
  /virtualization-policies/{policyId}/tags:
    get:
      tags:
      - VirtualizationPolicies
      summary: Get tags for a VirtualizationPolicy.
      operationId: get_virtualization_policy_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - VirtualizationPolicies
      summary: Create tags for a VirtualizationPolicy.
      operationId: create_virtualization_policy_tags
      requestBody:
        description: Tags information for VirtualizationPolicies.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/virtualizationPolicyIdParam'
  /virtualization-policies/{policyId}/tags/delete:
    post:
      tags:
      - VirtualizationPolicies
      summary: Delete tags for a VirtualizationPolicy.
      operationId: delete_virtualization_policy_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/virtualizationPolicyIdParam'
  /replication-profiles:
    get:
      tags:
      - Replication
      summary: List all ReplicationProfiles.
      operationId: get_replication_profiles
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/replicationProfilesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListReplicationProfilesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReplicationProfile'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Replication
      summary: Create a ReplicationProfile.
      operationId: create_replication_profile
      requestBody:
        $ref: '#/components/requestBodies/CreateReplicationProfile'
      responses:
        '201':
          description: ReplicationProfile created
          content:
            application/json:
              schema:
                title: CreateReplicationProfileResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                  replication_profile_id:
                    type: string
                    description: The id of the created ReplicationProfile.
                    example: 1-REPLICATION_PROFILE-1
  /replication-profiles/search:
    post:
      tags:
      - Replication
      summary: Search for ReplicationProfiles.
      operationId: search_replication_profiles
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/replicationProfilesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchReplicationProfilesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReplicationProfile'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          replication_mode:
            type: string
          target_engine_id:
            type: string
          target_port:
            type: integer
          engine_id:
            type: string
          replication_tag:
            type: string
          last_execution_status:
            type: string
          last_execution_status_timestamp:
            type: date-time
          description:
            type: string
          schedule:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          enable_tag_replication:
            type: boolean
          encrypted:
            type: boolean
          use_system_socks_setting:
            type: boolean
          automatic_replication:
            type: boolean
          number_of_connections:
            type: integer
          bandwidth_limit:
            type: integer
          vdb_ids:
            type: array
            items:
              type: string
          dsource_ids:
            type: array
            items:
              type: string
          cdb_ids:
            type: array
            items:
              type: string
          vcdb_ids:
            type: array
            items:
              type: string
          group_ids:
            type: array
            items:
              type: string
          data_layout_ids:
            type: array
            items:
              type: string
  /virtualization-jobs/history:
    get:
      tags:
      - VirtualizationJobs
      summary: Fetch a list of all virtualization jobs
      operationId: get_virtualization_job_history
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationJobsSortParam'
      - $ref: '#/components/parameters/ObjectIdParam'
      - $ref: '#/components/parameters/ObjectTypeParam'
      - $ref: '#/components/parameters/JobTypeParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVirtualizationJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationJob'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /virtualization-jobs/history/search:
    post:
      tags:
      - VirtualizationJobs
      summary: Search virtualization jobs
      operationId: search_virtualization_job_history
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationJobsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVirtualizationJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationJob'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          engine_job_id:
            type: string
          engine_id:
            type: string
          legacy_job_type:
            type: string
          job_type:
            type: string
          target_object_id:
            type: string
          legacy_target_object_type:
            type: string
          target_object_type:
            type: string
          job_state:
            type: string
          start_time:
            type: date-time
          update_time:
            type: date-time
          suspendable:
            type: boolean
          cancelable:
            type: boolean
          queued:
            type: boolean
          title:
            type: string
          cancel_reason:
            type: string
          percent_complete:
            type: integer
          run_duration:
            type: integer
          events:
            type: array[object]
            fields:
              event_type:
                type: string
              event_timestamp:
                type: date-time
              event_state:
                type: string
              percent_complete:
                type: integer
              message_code:
                type: string
              message_details:
                type: string
              message_action:
                type: string
              message_command_output:
                type: string
  /virtualization-actions/history:
    get:
      tags:
      - VirtualizationActions
      summary: Fetch a list of all virtualization actions
      operationId: get_virtualization_action_history
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationActionsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVirtualizationActionsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationAction'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  id,engine_id,action_type,title,details,start_time,end_time,user,user_agent,origin_ip,parent_action,state,work_source,work_source_name,work_source_principal,failure_description,failure_action,failure_message_code
                  1-ACTION-1,1,ACTION_TYPE,ACTION_TITLE,details,2024-07-15T21:20:28.864Z,2024-07-15T21:20:28.864Z,user,user_agent,127.0.0.1,parent action,FAILED,SYSTEM,admin,principal,description,action,message.code
  /virtualization-actions/history/search:
    post:
      tags:
      - VirtualizationActions
      summary: Search virtualization actions
      operationId: search_virtualization_action_history
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationActionsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVirtualizationActionsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationAction'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  id,engine_id,action_type,title,details,start_time,end_time,user,user_agent,origin_ip,parent_action,state,work_source,work_source_name,work_source_principal,failure_description,failure_action,failure_message_code
                  1-ACTION-1,1,ACTION_TYPE,ACTION_TITLE,details,2024-07-15T21:20:28.864Z,2024-07-15T21:20:28.864Z,user,user_agent,127.0.0.1,parent action,FAILED,SYSTEM,admin,principal,description,action,message.code
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          action_type:
            type: string
          title:
            type: string
          details:
            type: string
          start_time:
            type: date-time
          end_time:
            type: date-time
          user:
            type: string
          user_agent:
            type: string
          origin_ip:
            type: string
          parent_action:
            type: string
          state:
            type: string
          work_source:
            type: string
          work_source_name:
            type: string
          work_source_principal:
            type: string
          failure_description:
            type: string
          failure_action:
            type: string
          failure_message_code:
            type: string
  /replication-profiles/{replicationProfileId}/execute:
    post:
      tags:
      - Replication
      summary: Execute a ReplicationProfile.
      operationId: execute_replication_profile
      responses:
        '200':
          description: ReplicationProfile executed.
          content:
            application/json:
              schema:
                title: ExecuteReplicationProfileResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/replicationProfileIdParam'
  /replication-profiles/{replicationProfileId}:
    get:
      tags:
      - Replication
      summary: Get a ReplicationProfile by ID.
      operationId: get_replication_profile_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationProfile'
    delete:
      tags:
      - Replication
      summary: Delete a ReplicationProfile.
      operationId: delete_replication_profile
      parameters:
      - $ref: '#/components/parameters/replicationProfileIdParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ReplicationProfileDeleteJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Replication
      summary: Update a ReplicationProfile.
      operationId: update_replication_profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReplicationProfileParameters'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ReplicationProfileUpdateJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/replicationProfileIdParam'
  /replication-profiles/{replicationProfileId}/tags:
    get:
      tags:
      - Replication
      summary: Get tags for a ReplicationProfile.
      operationId: get_replication_profile_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Replication
      summary: Create tags for a ReplicationProfile.
      operationId: create_replication_profile_tags
      requestBody:
        description: Tags information for ReplicationProfiles.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/replicationProfileIdParam'
  /replication-profiles/{replicationProfileId}/tags/delete:
    post:
      tags:
      - Replication
      summary: Delete tags for a ReplicationProfile.
      operationId: delete_replication_profile_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/replicationProfileIdParam'
  /replication-profiles/{replicationProfileId}/enable-tag-replication:
    post:
      tags:
      - Replication
      summary: Enable tag replication for given ReplicationProfile.
      operationId: enable_tag_replication
      responses:
        '202':
          description: Accepted
    parameters:
    - $ref: '#/components/parameters/replicationProfileIdParam'
  /replication-profiles/{replicationProfileId}/disable-tag-replication:
    post:
      tags:
      - Replication
      summary: Disable tag replication for given ReplicationProfile.
      operationId: disable_tag_replication
      responses:
        '200':
          description: OK
    parameters:
    - $ref: '#/components/parameters/replicationProfileIdParam'
  /namespaces:
    get:
      tags:
      - Namespace
      summary: List all namespaces.
      operationId: list_namespaces
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/namespacesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListNamespacesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Namespace'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /namespaces/search:
    post:
      tags:
      - Namespace
      summary: Search Namespaces.
      operationId: search_namespaces
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/namespacesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchNamespacesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Namespace'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          tag:
            type: string
          engine_id:
            type: string
          description:
            type: string
          secure_namespace:
            type: boolean
          failed_over:
            type: boolean
          failover_report:
            type: string
          locked:
            type: boolean
          failback_possible:
            type: boolean
          failback_capability:
            type: string
          failback_incapability_reason:
            type: string
          replication_mode:
            type: string
          last_execution_status:
            type: string
          last_execution_status_timestamp:
            type: date-time
          source_engine_name:
            type: string
          source_engine_id:
            type: string
  /namespace/{namespaceId}:
    get:
      tags:
      - Namespace
      summary: Get a namespace.
      operationId: get_namespace_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
    delete:
      tags:
      - Namespace
      summary: Delete a Namespace.
      operationId: delete_namespace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: NamespaceDeleteJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Namespace
      summary: Update a Namespace.
      operationId: update_namespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNamespaceParameters'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: NamespaceUpdateJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/namespaceIdParam'
  /namespace/{namespaceId}/failover:
    post:
      tags:
      - Namespace
      summary: Initiates failover for the given namespace.
      operationId: failover_namespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverNamespaceParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: NamespaceFailoverJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/namespaceIdParam'
  /namespace/{namespaceId}/commitFailover:
    post:
      tags:
      - Namespace
      summary: Commits the failover of a given namespace and discards the failback
        state.
      operationId: commit_failover_namespace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: NamespaceCommitFailoverJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/namespaceIdParam'
  /namespace/{namespaceId}/failback:
    post:
      tags:
      - Namespace
      summary: Initiates failback for the given namespace.
      operationId: failback_namespace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: NamespaceFailbackJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/namespaceIdParam'
  /namespace/{namespaceId}/discard:
    post:
      tags:
      - Namespace
      summary: Discards any partial receive state for the given namespace.
      operationId: discard_namespace
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: NamespaceDiscardJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/namespaceIdParam'
  /virtualization-alerts/history:
    get:
      tags:
      - VirtualizationAlerts
      summary: Fetch a list of all virtualization alerts
      operationId: get_virtualization_alerts_history
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationAlertsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVirtualizationAlertsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationAlert'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  id,engine_id,alert_timestamp,event,event_severity,event_title,event_response,event_action,event_command_output,event_description,target_object_type,target_object_id,target_name
                  1-ALERT-1,1,2024-07-15T21:21:46.007Z,alert.event,INFORMATIONAL,event title,event response,event action,event command output,event description,VDB,1-VDB-1,vdb_name
  /virtualization-alerts/history/search:
    post:
      tags:
      - VirtualizationAlerts
      summary: Search virtualization alerts
      operationId: search_virtualization_alerts_history
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationAlertsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVirtualizationAlertsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationAlert'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  id,engine_id,alert_timestamp,event,event_severity,event_title,event_response,event_action,event_command_output,event_description,target_object_type,target_object_id,target_name
                  1-ALERT-1,1,2024-07-15T21:21:46.007Z,alert.event,INFORMATIONAL,event title,event response,event action,event command output,event description,VDB,1-VDB-1,vdb_name
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          event_severity:
            type: string
          target_name:
            type: string
          target_object_type:
            type: string
          alert_timestamp:
            type: date-time
          event:
            type: string
          event_description:
            type: string
          event_title:
            type: string
          event_response:
            type: string
          event_action:
            type: string
          event_command_output:
            type: string
  /virtualization-faults/history:
    get:
      tags:
      - VirtualizationFaults
      summary: Fetch a list of all virtualization faults
      operationId: get_virtualization_faults_history
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationFaultsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListVirtualizationFaultsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationFault'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  id,engine_id,bundle_id,target_name,target_object_type,target_object_id,title,description,fault_action,response,severity,status,date_diagnosed,date_resolved,resolution_comments
                  3-FAULT-5,3,fault.oracle.logsync.snapshot.standby,Untitled/DBOMSR91F858-rhel-83-mv6m-qar-143787-27a4593a.dlpxdc.co,DSOURCE,3-ORACLE_DB_CONTAINER-1,LogSync detected database is running as a snapshot standby,LogSync has found that the linked source {0} has become a snapshot standby database. LogSync will not fetch archive logs generated by the snapshot standby and SnapSync will be disallowed until the database reverts to a physical standby. Once the database reverts to a physical standby LogSync will resume fetching archived logs.,Revert snapshot standby to a physical standby to resume LogSync. Consider provisioning a VDB from Delphix snapshots instead of using a snapshot standby.,Revert to physical standby as soon as possible to prevent LogSync from failing to sync new archive logs generated on the primary.,CRITICAL,RESOLVED,2024-08-08T02:42:06.589Z,2024-08-08T02:42:10.827Z,Fault no longer present.
  /virtualization-faults/history/search:
    post:
      tags:
      - VirtualizationFaults
      summary: Search virtualization faults
      operationId: search_virtualization_faults_history
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationFaultsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchVirtualizationFaultsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationFault'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  id,engine_id,bundle_id,target_name,target_object_type,target_object_id,title,description,fault_action,response,severity,status,date_diagnosed,date_resolved,resolution_comments
                  3-FAULT-5,3,fault.oracle.logsync.snapshot.standby,Untitled/DBOMSR91F858-rhel-83-mv6m-qar-143787-27a4593a.dlpxdc.co,DSOURCE,3-ORACLE_DB_CONTAINER-1,LogSync detected database is running as a snapshot standby,LogSync has found that the linked source {0} has become a snapshot standby database. LogSync will not fetch archive logs generated by the snapshot standby and SnapSync will be disallowed until the database reverts to a physical standby. Once the database reverts to a physical standby LogSync will resume fetching archived logs.,Revert snapshot standby to a physical standby to resume LogSync. Consider provisioning a VDB from Delphix snapshots instead of using a snapshot standby.,Revert to physical standby as soon as possible to prevent LogSync from failing to sync new archive logs generated on the primary.,CRITICAL,RESOLVED,2024-08-08T02:42:06.589Z,2024-08-08T02:42:10.827Z,Fault no longer present.
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          bundle_id:
            type: string
          target_name:
            type: string
          target_object_type:
            type: string
          target_object_id:
            type: string
          title:
            type: date-time
          description:
            type: string
          fault_action:
            type: string
          response:
            type: string
          severity:
            type: string
          status:
            type: string
          date_diagnosed:
            type: string
          date_resolved:
            type: string
          resolution_comments:
            type: string
  /virtualization-faults/resolveOrIgnore:
    post:
      tags:
      - VirtualizationFaults
      summary: Marks selected faults as resolved or ignored.
      operationId: resolve_or_ignore_virtualization_faults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualizationFaultResolveOrIgnoreParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: VirtualizationFaultResolveOrIgnoreJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /virtualization-faults/{engineId}/resolveAll:
    post:
      tags:
      - VirtualizationFaults
      summary: Marks all active faults of an engine that the user has permissions
        over as resolved.
      operationId: resolve_all_virtualization_faults
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: VirtualizationFaultResolveAllJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /virtualization-fault/{faultId}/resolve:
    post:
      tags:
      - VirtualizationFaults
      summary: Marks the fault as resolved. The Delphix engine will attempt to automatically
        detect cases where the fault has been resolved; but this is not always possible
        and may only occur on periodic intervals. In these cases, the user can proactively
        mark the fault resolved. This does not change the underlying disposition of
        the fault - if the problem is still present the system may immediately diagnose
        the same problem again. This should only be used to notify the system of resolution
        after the underlying problem has been resolved.
      operationId: resolve_virtualization_fault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualizationFaultResolveParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: VirtualizationFaultResolveJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/virtualizationFaultIdParam'
  /connectors/{connectorId}/test:
    post:
      tags:
      - Connectors
      summary: Checks connectivity between a masking engine and a remote data source.
      operationId: connectors_test
      parameters:
      - $ref: '#/components/parameters/connectorIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTestResponse'
  /hyperscale-instances:
    get:
      tags:
      - HyperscaleInstance
      summary: Returns a list of Hyperscale instances.
      operationId: get_hyperscale_instances
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleInstancesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListHyperscaleInstancesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleInstance'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - HyperscaleInstance
      summary: Register a Hyperscale instance
      operationId: register_hyperscale_instance
      requestBody:
        description: The parameters to register a Hyperscale instance.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperscaleInstanceRegistrationParameter'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleInstance'
  /hyperscale-instances/search:
    post:
      tags:
      - HyperscaleInstance
      summary: Search for Hyperscale instances.
      operationId: search_hyperscale_instances
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleInstancesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchHyperscaleInstancesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleInstance'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          hostname:
            type: string
          creation_date:
            type: string
          data_type:
            type: string
          insecure_ssl:
            type: boolean
          unsafe_ssl_hostname_check:
            type: boolean
          truststore_filename:
            type: string
          status:
            type: string
          connection_status:
            type: string
          connection_status_details:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /hyperscale-instances/{hyperscaleInstanceId}:
    get:
      tags:
      - HyperscaleInstance
      summary: Returns a Hyperscale Instance by ID.
      operationId: get_hyperscale_instance_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleInstance'
    delete:
      tags:
      - HyperscaleInstance
      summary: Unregister a Hyperscale Instance.
      operationId: unregister_hyperscale_instance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UnregisterHyperscaleInstanceResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - HyperscaleInstance
      summary: Update an Hyperscale Instance
      operationId: update_hyperscale_instance
      requestBody:
        description: Update parameters for a hyperscale instance.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperscaleInstanceUpdateParams'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleInstance'
    parameters:
    - $ref: '#/components/parameters/hyperscaleInstanceId'
  /hyperscale-instances/{hyperscaleInstanceId}/tags:
    get:
      tags:
      - HyperscaleInstance
      summary: Get tags for a Hyperscale Instance.
      operationId: get_hyperscale_instance_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - HyperscaleInstance
      summary: Create tags for a Hyperscale Instance.
      operationId: create_hyperscale_instance_tags
      requestBody:
        description: Tags information for Hyperscale Instance.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/hyperscaleInstanceId'
  /hyperscale-instances/{hyperscaleInstanceId}/tags/delete:
    post:
      tags:
      - HyperscaleInstance
      summary: Delete tags for a Hyperscale Instance.
      operationId: delete_hyperscale_instance_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/hyperscaleInstanceId'
  /hyperscale-instances/{hyperscaleInstanceId}/sync-engines:
    post:
      tags:
      - HyperscaleInstance
      summary: Sync the global object from a source engine to engines on a Hyperscale
        Instance.
      operationId: sync_engines_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncEnginesHyperscaleParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SyncEnginesHyperscaleResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/hyperscaleInstanceId'
  /hyperscale-instances/{hyperscaleInstanceId}/add-engine:
    post:
      tags:
      - HyperscaleInstance
      summary: Add an engine to a Hyperscale Instance.
      operationId: add_engine_to_hyperscale_instance
      requestBody:
        description: Body containing the ID of the registered engine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineIdBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: AddEngineToHyperscaleResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/hyperscaleInstanceId'
  /hyperscale-instances/{hyperscaleInstanceId}/remove-engine:
    post:
      tags:
      - HyperscaleInstance
      summary: Remove an engine from a Hyperscale Instance.
      operationId: remove_engine_from_hyperscale_instance
      requestBody:
        description: Body containing the ID of the registered engine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineIdBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: RemoveEngineFromHyperscaleResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/hyperscaleInstanceId'
  /hyperscale-mount-points:
    get:
      tags:
      - HyperscaleObjects
      summary: Returns a list of Hyperscale Mount Points.
      operationId: get_hyperscale_mount_points
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleMountPointsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListHyperscaleMountPointsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleMountPoint'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - HyperscaleObjects
      summary: Create a Hyperscale Mount Point
      operationId: create_hyperscale_mount_point
      requestBody:
        description: Request to create a Hyperscale Mount Point.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperscaleMountPoint'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CreateHyperscaleMountPointResponse
                type: object
                properties:
                  id:
                    type: string
                    description: The created Hyperscale Mount Point's ID
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-mount-points/{hyperscaleMountPointId}:
    get:
      tags:
      - HyperscaleObjects
      summary: Get a Hyperscale Mount Points.
      operationId: get_hyperscale_mount_point_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleMountPoint'
    delete:
      tags:
      - HyperscaleObjects
      summary: Delete a Hyperscale Mount Point.
      operationId: delete_hyperscale_mount_point
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteHyperscaleMountPointResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - HyperscaleObjects
      summary: Update a Hyperscale Mount Point by ID.
      operationId: update_hyperscale_mount_point_by_id
      requestBody:
        description: The new data to update a Hyperscale Mount Point.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperscaleMountPointUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateHyperscaleMountPointResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/hyperscaleMountPointIdParam'
  /hyperscale-mount-points/search:
    post:
      tags:
      - HyperscaleObjects
      summary: Search for Hyperscale Mount Points.
      operationId: search_hyperscale_mount_points
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleMountPointsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchHyperscaleMountPointsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleMountPoint'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          hyperscale_instance_id:
            type: string
          name:
            type: string
          hostname:
            type: string
          mount_type:
            type: string
          mount_path:
            type: string
          options:
            type: string
          staging_storage_type:
            type: string
          auth_mechanism:
            type: string
          aws_bucket_name:
            type: string
          aws_bucket_region:
            type: string
          aws_bucket_prefix:
            type: string
          aws_bucket_delimiter:
            type: string
  /hyperscale-connectors:
    get:
      tags:
      - HyperscaleObjects
      summary: Returns a list of Hyperscale Connectors.
      operationId: get_hyperscale_connectors
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleConnectorsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListHyperscaleConnectorsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleConnector'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - HyperscaleObjects
      summary: Create a Hyperscale Connector.
      operationId: create_hyperscale_connector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperscaleConnectorCreateParameters'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CreateHyperscaleConnectorResponse
                type: object
                properties:
                  id:
                    type: string
                    description: The created Hyperscale Connector's ID.
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-connectors/{hyperscaleConnectorId}:
    get:
      tags:
      - HyperscaleObjects
      summary: Get a Hyperscale Connector.
      operationId: get_hyperscale_connector_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleConnector'
    delete:
      tags:
      - HyperscaleObjects
      summary: Delete a Hyperscale Connector.
      operationId: delete_hyperscale_connector
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteHyperscaleConnectorResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - HyperscaleObjects
      summary: Update a Hyperscale Connector by ID.
      operationId: update_hyperscale_connector_by_id
      requestBody:
        description: The new data to update a Hyperscale Connector.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperscaleConnectorUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateHyperscaleConnectorResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
  /hyperscale-connectors/{hyperscaleConnectorId}/tags:
    get:
      tags:
      - HyperscaleObjects
      summary: Get tags for a Hyperscale Connector.
      operationId: get_hyperscale_connector_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - HyperscaleObjects
      summary: Create tags for a Hyperscale Connector.
      operationId: create_hyperscale_connector_tags
      requestBody:
        description: Tag information for a Hyperscale Connector.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
  /hyperscale-connectors/{hyperscaleConnectorId}/tags/delete:
    post:
      tags:
      - HyperscaleObjects
      summary: Delete tags for a Hyperscale Connector.
      operationId: delete_hyperscale_connector_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
  /hyperscale-connectors/search:
    post:
      tags:
      - HyperscaleObjects
      summary: Search for Hyperscale Connectors.
      operationId: search_hyperscale_connectors
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleConnectorsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchHyperscaleConnectorsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleConnector'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          hyperscale_instance_id:
            type: string
          data_type:
            type: string
          source_username:
            type: string
          source_jdbc_url:
            type: string
          source_mongo_url:
            type: string
          source_filesystem_path:
            type: string
          target_username:
            type: string
          target_jdbc_url:
            type: string
          target_mongo_url:
            type: string
          target_filesystem_path:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /hyperscale-datasets:
    get:
      tags:
      - HyperscaleObjects
      summary: Returns a list of Hyperscale Datasets.
      operationId: get_hyperscale_datasets
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleDatasetsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListHyperscaleDatasetsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDataset'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /hyperscale-datasets/{hyperscaleDatasetId}:
    get:
      tags:
      - HyperscaleObjects
      summary: Get a Hyperscale Dataset.
      operationId: get_hyperscale_dataset_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleDataset'
    patch:
      tags:
      - HyperscaleObjects
      summary: Update a Hyperscale Dataset by ID.
      operationId: update_hyperscale_dataset_by_id
      requestBody:
        description: The new data to update a Hyperscale Dataset.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperscaleDatasetUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateHyperscaleDatasetResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
  /hyperscale-datasets/{hyperscaleDatasetId}/tags:
    get:
      tags:
      - HyperscaleObjects
      summary: Get tags for a Hyperscale Dataset.
      operationId: get_hyperscale_dataset_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - HyperscaleObjects
      summary: Create tags for a Hyperscale Dataset.
      operationId: create_hyperscale_dataset_tags
      requestBody:
        description: Tag information for a Hyperscale Dataset.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
  /hyperscale-datasets/{hyperscaleDatasetId}/tags/delete:
    post:
      tags:
      - HyperscaleObjects
      summary: Delete tags for a Hyperscale Dataset.
      operationId: delete_hyperscale_dataset_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/{hyperscaleDatasetTableOrFileId}:
    get:
      tags:
      - HyperscaleObjects
      summary: Get a Hyperscale Dataset table or file by ID.
      operationId: get_hyperscale_dataset_table_or_file_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
    patch:
      tags:
      - HyperscaleObjects
      summary: Update a Hyperscale Dataset table or file by ID.
      operationId: update_hyperscale_dataset_table_or_file_by_id
      requestBody:
        description: The new data to update a Hyperscale Dataset table or file.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HyperscaleDatasetTableOrFileUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateHyperscaleDatasetTableOrFileResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    - $ref: '#/components/parameters/hyperscaleDatasetTableOrFileIdParam'
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files:
    get:
      tags:
      - HyperscaleObjects
      summary: Get the tables or files of a hyperscale dataset
      operationId: get_hyperscale_dataset_tables_or_files
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListHyperscaleDatasetTablesOrFilesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/cursor'
    - $ref: '#/components/parameters/hyperscaleDatasetTablesOrFilesSortParam'
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/search:
    post:
      tags:
      - HyperscaleObjects
      summary: Search the tables or files of a hyperscale dataset
      operationId: search_hyperscale_dataset_tables_or_files
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchHyperscaleDatasetTablesOrFilesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          schema_name:
            type: string
          table_name:
            type: string
          filter_key:
            type: string
          column_array_rows:
            type: integer
          unload_split:
            type: integer
          stream_size:
            type: integer
          masking_inventory:
            type: array[object]
            fields:
              field_name:
                type: string
              domain_name:
                type: string
              algorithm_name:
                type: string
              date_format:
                type: string
              algorithm_field_name:
                type: string
              algorithm_group_no:
                type: integer
    parameters:
    - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/cursor'
    - $ref: '#/components/parameters/hyperscaleDatasetTablesOrFilesSortParam'
  /hyperscale-datasets/search:
    post:
      tags:
      - HyperscaleObjects
      summary: Search for Hyperscale Datasets.
      operationId: search_hyperscale_datasets
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleDatasetsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchHyperscaleDatasetsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDataset'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          hyperscale_instance_id:
            type: string
          data_type:
            type: string
          mount_point_id:
            type: string
          connector_id:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /reporting/masking-execution-metrics:
    get:
      tags:
      - Reporting
      summary: Get the masking execution metrics report.
      operationId: get_masking_execution_metrics_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingExecutionMetricsSortParam'
      responses:
        '200':
          description: Returns a list of Masking execution metrics.
          content:
            application/json:
              schema:
                title: MaskingExecutionMetricsReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingExecutionMetrics'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  id,masking_job_name,masking_job_type,connector_type,ruleset_name,rows_masked,rows_total,bytes_masked,bytes_total,duration,tables_files_count,"masked_tables_files_count",columns_fields_count,"masked_columns_fields_count"
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-job,STANDARD,ORACLE,customers,2,2,0,0,19430,1,1,2,2
  /reporting/masking-execution-metrics/search:
    post:
      tags:
      - Reporting
      summary: Search the Masking execution metrics report.
      operationId: search_masking_execution_metrics_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingExecutionMetricsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Search Masking execution metrics.
          content:
            application/json:
              schema:
                title: MaskingExecutionMetricsReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingExecutionMetrics'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  id,masking_job_name,connector_type,ruleset_name,rows_masked,rows_total,bytes_masked,bytes_total,duration,tables_files_count,"masked_tables_files_count",columns_fields_count,"masked_columns_fields_count"
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-job,ORACLE,customers,2,2,0,0,19430,1,1,2,2
      x-filterable:
        fields:
          id:
            type: string
          masking_job_name:
            type: string
          masking_job_type:
            type: string
          connector_type:
            type: string
          ruleset_name:
            type: string
          rows_masked:
            type: integer
          rows_total:
            type: integer
          bytes_masked:
            type: integer
          bytes_total:
            type: integer
          duration:
            type: integer
          tables_files_count:
            type: integer
          masked_tables_files_count:
            type: integer
          columns_fields_count:
            type: integer
          masked_columns_fields_count:
            type: integer
  /reporting/engine-global-object-state-report:
    get:
      tags:
      - Reporting
      summary: Get the masking engine global object state report.
      operationId: get_engine_global_object_state_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/engineGlobalObjectStateReportSortParam'
      responses:
        '200':
          description: Returns a list of GlobalObjectState data.
          content:
            application/json:
              schema:
                title: GetEngineGlobalObjectStateReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/EngineGlobalObjectStateData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,jobs_count,connectors_count,rulesets_count,global_object_revision_hash
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-engine-dev,10,25,25,"dfb515e3d9727eebf499cb252b417efc926bad0b"
  /reporting/engine-global-object-state-report/search:
    post:
      tags:
      - Reporting
      summary: Search the masking engine global object state report.
      operationId: search_engine_global_object_state_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/engineGlobalObjectStateReportSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of searched GlobalObjectState data.
          content:
            application/json:
              schema:
                title: SearchEngineGlobalObjectStateReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/EngineGlobalObjectStateData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,jobs_count,connectors_count,rulesets_count,global_object_revision_hash
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-engine-dev,10,25,25,"dfb515e3d9727eebf499cb252b417efc926bad0b"
      x-filterable:
        fields:
          engine_id:
            type: string
          engine_name:
            type: string
          jobs_count:
            type: integer
          connectors_count:
            type: integer
          rulesets_count:
            type: integer
          global_object_revision_hash:
            type: string
  /reporting/data-risk-report:
    get:
      tags:
      - Reporting
      summary: Get the masking data risk report.
      operationId: get_data_risk_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dataRiskReportSortParam'
      responses:
        '200':
          description: Returns a list of DataRisk data.
          content:
            application/json:
              schema:
                title: GetDataRiskReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataRiskData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
                  totals:
                    $ref: '#/components/schemas/DataRiskReportTotals'
            text/csv:
              schema:
                type: string
                example: |
                  connector_id,connector_name,engine_id,engine_name,is_profiled,is_sensitive_data,is_masked,is_at_risk
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",my-connector,"dfb515e3d9727eebf499cb252b417efc926bad0b",my-engine,true,true,true,false
  /reporting/data-risk-report/search:
    post:
      tags:
      - Reporting
      summary: Search the masking data risk report.
      operationId: search_data_risk_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dataRiskReportSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of searched DataRisk data.
          content:
            application/json:
              schema:
                title: SearchDataRiskReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataRiskData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
                  totals:
                    $ref: '#/components/schemas/DataRiskReportTotals'
            text/csv:
              schema:
                type: string
                example: |
                  connector_id,engine_connector_id,connector_name,engine_id,engine_name,is_profiled,is_sensitive_data,is_masked,is_at_risk
                  "1-DATABASE-15",15,my-connector,"1",my-engine,true,true,true,false
      x-filterable:
        fields:
          connector_id:
            type: string
          engine_connector_id:
            type: integer
          connector_name:
            type: string
          connector_type:
            type: string
          last_profiled_date:
            type: string
          last_masked_date:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          is_profiled:
            type: boolean
          is_sensitive_data:
            type: boolean
          is_masked:
            type: boolean
          is_at_risk:
            type: boolean
          data_elements_total:
            type: integer
          data_elements_not_sensitive:
            type: integer
          data_elements_sensitive_masked:
            type: integer
          data_elements_sensitive_unmasked:
            type: integer
          records_total:
            type: integer
          records_not_sensitive:
            type: integer
          records_sensitive_masked:
            type: integer
          records_sensitive_unmasked:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /classifiers:
    get:
      tags:
      - Classifiers
      summary: Retrieve classifiers.
      operationId: get_classifiers
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/classifiersSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ClassifiersListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Classifier'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /classifiers/search:
    post:
      tags:
      - Classifiers
      summary: Search for classifiers.
      operationId: search_classifiers
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/classifiersSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ClassifiersSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Classifier'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          framework:
            type: string
            enum:
            - REGEX
            - LIST
            - PATH
            - DATA_TYPE
          description:
            type: string
          data_class_id:
            type: string
          data_class_name:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /classifiers/{classifierId}:
    get:
      tags:
      - Classifiers
      summary: Get a classifier by ID.
      operationId: get_classifier_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classifier'
    parameters:
    - $ref: '#/components/parameters/classifierIdParam'
  /classifiers/{classifierId}/discovery-policies:
    get:
      tags:
      - Classifiers
      summary: Get discovery policies for a classifier.
      operationId: get_classifier_discovery_policies
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryPoliciesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DiscoveryPoliciesListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveryPolicy'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/classifierIdParam'
  /classifiers/{classifierId}/discovery-policies/search:
    post:
      tags:
      - Classifiers
      summary: Search discovery policies for a classifier.
      operationId: search_classifier_discovery_policies
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryPoliciesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DiscoveryPoliciesSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveryPolicy'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          discovery_method:
            type: string
            enum:
            - CLASSIFIERS
            - EXPRESSIONS
          assignment_threshold:
            type: integer
          engine_id:
            type: string
          engine_name:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
    parameters:
    - $ref: '#/components/parameters/classifierIdParam'
  /classifiers/{classifierId}/tags:
    get:
      tags:
      - Classifiers
      summary: Get tags for a classifier.
      operationId: get_classifier_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Classifiers
      summary: Create tags for a classifier.
      operationId: create_classifier_tags
      requestBody:
        description: Tags information for classifier.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Classifier tags created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/classifierIdParam'
  /classifiers/{classifierId}/tags/delete:
    post:
      tags:
      - Classifiers
      summary: Delete tags for a classifier.
      operationId: delete_classifier_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/classifierIdParam'
  /connectors:
    get:
      tags:
      - Connectors
      summary: Retrieve the list of masking connectors.
      operationId: get_connectors
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/connectorsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListConnectorsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Connector'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /connectors/{connectorId}:
    get:
      tags:
      - Connectors
      summary: Retrieve a masking Connector by ID.
      operationId: get_connector_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
    patch:
      tags:
      - Connectors
      summary: Update a masking Connector by ID.
      operationId: update_connector_by_id
      requestBody:
        description: The new data to update a masking Connector.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateConnectorResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/connectorIdParam'
  /connectors/{connectorId}/masking-jobs/search:
    post:
      tags:
      - Connectors
      summary: Search jobs that use this connector
      operationId: search_connector_jobs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/jobWithConnectorSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListConnectorsMaskingJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJobWithConnectorRole'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          is_on_the_fly_masking:
            type: boolean
          last_execution_time:
            type: string
          last_execution_status:
            type: string
          creation_date:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          connector_role:
            type: string
            enum:
            - SOURCE
            - TARGET
    parameters:
    - $ref: '#/components/parameters/connectorIdParam'
  /connectors/{connectorId}/tags:
    get:
      tags:
      - Connectors
      summary: Get tags for a Connector.
      operationId: get_connector_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Connectors
      summary: Create tags for a Connector.
      operationId: create_connector_tags
      requestBody:
        description: Tags information for Connector.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/connectorIdParam'
  /connectors/{connectorId}/tags/delete:
    post:
      tags:
      - Connectors
      summary: Delete tags for a Connector.
      operationId: delete_connector_tag
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/connectorIdParam'
  /connectors/search:
    post:
      tags:
      - Connectors
      summary: Search for masking Connectors.
      operationId: search_connectors
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/connectorsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchConnectorsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Connector'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          type:
            type: string
          platform:
            type: string
          database_type:
            type: string
          name:
            type: string
          hostname:
            type: string
          username:
            type: string
          port:
            type: integer
          auth_present:
            type: boolean
          custom_driver_name:
            type: string
          database_name:
            type: string
          instance_name:
            type: string
          jdbc:
            type: string
          schema_name:
            type: string
          sid:
            type: string
          kerberos_auth:
            type: boolean
          service_principal:
            type: string
          enable_logger:
            type: boolean
          file_type:
            type: string
          connection_mode:
            type: string
          path:
            type: string
          ssh_key:
            type: string
          user_dir_is_root:
            type: boolean
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /data-classes:
    get:
      tags:
      - Data Classes
      summary: Retrieve the list of Data Classes.
      operationId: get_data_classes
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dataClassesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DataClassesListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataClass'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /data-classes/search:
    post:
      tags:
      - Data Classes
      summary: Search for Data Classes.
      operationId: search_data_classes
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dataClassesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DataClassesSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataClass'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          default_algorithm_id:
            type: string
          default_algorithm_name:
            type: string
          default_token_algorithm_id:
            type: string
          default_token_algorithm_name:
            type: string
          description:
            type: string
          example:
            type: string
          revision_hash:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /data-classes/{dataClassId}:
    get:
      tags:
      - Data Classes
      summary: Get a Data Class by ID.
      operationId: get_data_class_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataClass'
    patch:
      tags:
      - Data Classes
      summary: Update a Data Class.
      operationId: update_data_class
      requestBody:
        description: Update the description and/or example for a Data Class.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataClassUpdateParams'
        required: true
      responses:
        '200':
          description: Data Class update initiated.
          content:
            application/json:
              schema:
                title: DataClassUpdateResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/dataClassIdParam'
  /data-classes/{dataClassId}/algorithms:
    get:
      tags:
      - Data Classes
      summary: Retrieve the list of algorithms for a Data Class.
      operationId: get_data_class_algorithms
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/algorithmsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListAlgorithmsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Algorithm'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/dataClassIdParam'
  /data-classes/{dataClassId}/algorithms/search:
    post:
      tags:
      - Data Classes
      summary: Search for algorithms of a Data Class.
      operationId: search_data_class_algorithms
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/algorithmsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchAlgorithmsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Algorithm'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          framework_name:
            type: string
          framework_id:
            type: string
          plugin_name:
            type: string
          plugin_id:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          revision_hash:
            type: string
          create_date:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
    parameters:
    - $ref: '#/components/parameters/dataClassIdParam'
  /data-classes/{dataClassId}/tags:
    get:
      tags:
      - Data Classes
      summary: Get tags for a Data Class.
      operationId: get_data_class_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Data Classes
      summary: Create tags for a Data Class.
      operationId: create_data_class_tags
      requestBody:
        description: Tags information for Data Class.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Data Class tags created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/dataClassIdParam'
  /data-classes/{dataClassId}/tags/delete:
    post:
      tags:
      - Data Classes
      summary: Delete tags for a Data Class.
      operationId: delete_data_class_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/dataClassIdParam'
  /discovery-policies:
    get:
      tags:
      - Discovery Policies
      summary: Retrieve discovery policies.
      operationId: get_discovery_policies
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryPoliciesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DiscoveryPoliciesListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveryPolicy'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /discovery-policies/search:
    post:
      tags:
      - Discovery Policies
      summary: Search for discovery policies.
      operationId: search_discovery_policies
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryPoliciesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DiscoveryPoliciesSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveryPolicy'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          discovery_method:
            type: string
            enum:
            - CLASSIFIERS
            - EXPRESSIONS
          assignment_threshold:
            type: integer
          engine_id:
            type: string
          engine_name:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /discovery-policies/{discoveryPolicyId}:
    get:
      tags:
      - Discovery Policies
      summary: Get a discovery policy by ID.
      operationId: get_discovery_policy_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryPolicy'
    parameters:
    - $ref: '#/components/parameters/discoveryPolicyIdParam'
  /discovery-policies/{discoveryPolicyId}/classifiers:
    get:
      tags:
      - Discovery Policies
      summary: Get classifiers for a discovery policy.
      operationId: get_discovery_policy_classifiers
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/classifiersSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ClassifiersListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Classifier'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/discoveryPolicyIdParam'
  /discovery-policies/{discoveryPolicyId}/classifiers/search:
    post:
      tags:
      - Discovery Policies
      summary: Search for classifiers of a discovery policy.
      operationId: search_discovery_policy_classifiers
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/classifiersSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ClassifiersSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Classifier'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          framework:
            type: string
            enum:
            - REGEX
            - LIST
            - PATH
            - DATA_TYPE
          description:
            type: string
          data_class_id:
            type: string
          data_class_name:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
    parameters:
    - $ref: '#/components/parameters/discoveryPolicyIdParam'
  /discovery-policies/{discoveryPolicyId}/expressions:
    get:
      tags:
      - Discovery Policies
      summary: Get discovery expressions for a discovery policy.
      operationId: get_discovery_policy_expressions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryExpressionsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DiscoveryExpressionsListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveryExpression'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/discoveryPolicyIdParam'
  /discovery-policies/{discoveryPolicyId}/expressions/search:
    post:
      tags:
      - Discovery Policies
      summary: Search for discovery expressions of a discovery policy.
      operationId: search_discovery_policy_expressions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryExpressionsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DiscoveryExpressionsSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveryExpression'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          regular_expression:
            type: string
          data_level_profiling:
            type: boolean
          min_data_length:
            type: integer
          engine_id:
            type: string
          engine_name:
            type: string
          data_class_id:
            type: string
          data_class_name:
            type: string
          data_type:
            type: string
            enum:
            - String
            - Number
            - Date
            - Binary
          expression_type:
            type: string
            enum:
            - SEARCH
            - TYPE
          level:
            type: string
            enum:
            - DATA
            - COLUMN
            - TYPE
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
    parameters:
    - $ref: '#/components/parameters/discoveryPolicyIdParam'
  /discovery-policies/{discoveryPolicyId}/tags:
    get:
      tags:
      - Discovery Policies
      summary: Get tags for a discovery policy.
      operationId: get_discovery_policy_tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Discovery Policies
      summary: Create tags for a discovery policy.
      operationId: create_discovery_policy_tags
      requestBody:
        description: Tags information for discovery policy.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Discovery Policy tags created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/discoveryPolicyIdParam'
  /discovery-policies/{discoveryPolicyId}/tags/delete:
    post:
      tags:
      - Discovery Policies
      summary: Delete tags for a discovery policy.
      operationId: delete_discovery_policy_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/discoveryPolicyIdParam'
  /executions:
    get:
      tags:
      - Executions
      summary: Retrieve the list of masking executions.
      operationId: get_executions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/executionsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListExecutionsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Execution'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /executions/search:
    post:
      tags:
      - Executions
      summary: Search masking executions.
      operationId: search_executions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/executionsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchExecutionsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Execution'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          masking_job_id:
            type: string
          masking_job_name:
            type: string
          source_connector_id:
            type: string
          target_connector_id:
            type: string
          status:
            type: string
          rows_masked:
            type: integer
          rows_total:
            type: integer
          bytes_processed:
            type: integer
          bytes_total:
            type: integer
          start_time:
            type: string
          submit_time:
            type: string
          end_time:
            type: string
          run_duration:
            type: integer
          queue_duration:
            type: integer
          total_duration:
            type: integer
          account_id:
            type: integer
          account_name:
            type: string
          hyperscale_instance_id:
            type: string
          task_events:
            type: array[object]
            fields:
              event:
                type: string
              status:
                type: string
          hyperscale_task_events:
            type: array[object]
            fields:
              name:
                type: string
              progress:
                type: number
              status:
                type: string
              processed_objects:
                type: integer
              processed_rows:
                type: integer
              total_constraints:
                type: integer
              processed_indexes:
                type: integer
              total_indexes:
                type: integer
              processed_triggers:
                type: integer
              total_triggers:
                type: integer
              start_time:
                type: string
              end_time:
                type: string
              errors:
                type: array[object]
                fields:
                  table_name:
                    type: string
                  error:
                    type: string
  /executions/{executionId}:
    get:
      tags:
      - Executions
      summary: Retrieve an Execution by ID.
      operationId: get_execution_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/cancel:
    post:
      tags:
      - Executions
      summary: Cancel an Execution.
      operationId: cancel_execution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionCancelParameters'
        required: false
      responses:
        '200':
          description: OK
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/restart:
    post:
      tags:
      - Executions
      summary: Restart an Execution (Hyperscale only).
      operationId: restart_execution
      responses:
        '200':
          description: Masking job execution restarted.
          content:
            application/json:
              schema:
                title: RestartExecutionResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/cleanup:
    post:
      tags:
      - Executions
      summary: Cleanup an Execution (Hyperscale only).
      operationId: cleanup_execution
      responses:
        '200':
          description: Masking job execution cleaned up.
          content:
            application/json:
              schema:
                title: CleanupExecutionResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/events:
    get:
      tags:
      - Executions
      summary: Retrieve the list of events for a masking execution.
      operationId: get_execution_events
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/executionEventsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListExecutionEventsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutionEvent'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/events/search:
    post:
      tags:
      - Executions
      summary: Search masking executions events.
      operationId: search_execution_events
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/executionEventsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchExecutionEventsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutionEvent'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          execution_id:
            type: string
          execution_component_id:
            type: string
          event_type:
            type: string
          severity:
            type: string
          cause:
            type: string
          count:
            type: integer
          timestamp:
            type: string
          masked_object_name:
            type: string
          algorithm_name:
            type: string
          exception_type:
            type: string
          exception_detail:
            type: string
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/log:
    get:
      tags:
      - Executions
      summary: Retrieve the masking execution log.
      operationId: get_execution_log
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionLog'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/execution-components:
    get:
      tags:
      - Executions
      summary: Get execution components for an execution.
      operationId: get_execution_components
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/executionComponentsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ExecutionComponentsListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutionComponent'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/execution-components/search:
    post:
      tags:
      - Executions
      summary: Search execution components for an execution.
      operationId: search_execution_components
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/executionComponentsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ExecutionComponentsSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutionComponent'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          execution_id:
            type: string
          status:
            type: string
          rows_masked:
            type: integer
          rows_total:
            type: integer
          bytes_processed:
            type: integer
          bytes_total:
            type: integer
          start_time:
            type: string
          end_time:
            type: string
          non_conforming_data_count:
            type: integer
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/execution-components/{executionComponentId}:
    get:
      tags:
      - Executions
      summary: Get an execution component by ID.
      operationId: get_execution_component_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionComponent'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
    - $ref: '#/components/parameters/executionComponentIdParam'
  /executions/{executionId}/execution-components/{executionComponentId}/log:
    get:
      tags:
      - Executions
      summary: Get an execution component log.
      operationId: get_execution_component_log
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionComponentLog'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
    - $ref: '#/components/parameters/executionComponentIdParam'
  /executions/{executionId}/discovery-results:
    get:
      tags:
      - Executions
      summary: Retrieve the list of discovery results for a masking execution.
      operationId: get_discovery_results
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryResultSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListDiscoveryResultsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/discoveryResult'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /executions/{executionId}/discovery-results/search:
    post:
      tags:
      - Executions
      summary: Search discovery results associated with execution of a discovery job
      operationId: search_discovery_results
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryResultSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchDiscoveryResultsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/discoveryResult'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: integer
          table_name:
            type: string
          file_name:
            type: string
          column_name:
            type: string
          field_name:
            type: string
          data_class_name:
            type: string
          algorithm_name:
            type: string
          data_type:
            type: string
          confidence:
            type: integer
          is_profiler_writable:
            type: boolean
    parameters:
    - $ref: '#/components/parameters/executionIdParam'
  /masking-file-uploads:
    get:
      tags:
      - MaskingFiles
      summary: Retrieve the list of masking file uploads.
      operationId: get_masking_files
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingFilesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListMaskingFilesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingFileUpload'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /masking-file-uploads/{maskingFileId}:
    get:
      tags:
      - MaskingFiles
      summary: Get a masking file by ID or name.
      operationId: get_masking_file_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingFileUpload'
    patch:
      tags:
      - MaskingFiles
      summary: Update a masking file upload by id.
      operationId: update_masking_file_upload_by_id
      requestBody:
        description: The new data to update a masking file upload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaskingFileUploadUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingFileUpload'
    parameters:
    - $ref: '#/components/parameters/maskingFileIdParam'
  /masking-file-uploads/search:
    post:
      tags:
      - MaskingFiles
      summary: Search for masking files.
      operationId: search_masking_files
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingFilesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchMaskingFilesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingFileUpload'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          description:
            type: string
          filename:
            type: string
          file_size:
            type: string
          file_checksum:
            type: string
          created_date:
            type: string
          engine_file_uuid:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /masking-file-uploads/{maskingFileId}/tags:
    get:
      tags:
      - MaskingFiles
      summary: Get tags for a masking file.
      operationId: get_masking_file_tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - MaskingFiles
      summary: Create tags for a masking file.
      operationId: create_masking_file_tags
      parameters:
      - $ref: '#/components/parameters/maskingFileIdParam'
      requestBody:
        description: Tags information for masking file upload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Masking file tags created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/maskingFileIdParam'
  /masking-file-uploads/{maskingFileId}/tags/delete:
    post:
      tags:
      - MaskingFiles
      summary: Delete tags for a masking file
      operationId: delete_masking_file_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/maskingFileIdParam'
  /masking-file-uploads/{maskingFileId}/consumers:
    get:
      tags:
      - MaskingFiles
      summary: Get all consumers associated with this masking file
      operationId: get_masking_file_consumers
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/ConsumersSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListMaskingFileConsumersResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Consumer'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/maskingFileIdParam'
  /masking-file-uploads/{maskingFileId}/consumers/search:
    post:
      tags:
      - MaskingFiles
      summary: Search consumers of a masking file.
      operationId: search_masking_file_consumers
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/ConsumersSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchMaskingFileConsumersResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Consumer'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          parent_id:
            type: string
          parent_type:
            type: string
          parent_name:
            type: string
    parameters:
    - $ref: '#/components/parameters/maskingFileIdParam'
  /masking-jobs:
    get:
      tags:
      - MaskingJobs
      summary: Retrieve the list of masking jobs.
      operationId: get_masking_jobs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingJobsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListMaskingJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJob'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      deprecated: true
    post:
      tags:
      - MaskingJobs
      summary: Create a Masking Job.
      operationId: create_masking_job
      requestBody:
        description: Input params to create a masking job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMaskingJobRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: CreateMaskingJobResponse
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the created masking job.
                  job:
                    $ref: '#/components/schemas/Job'
  /masking-jobs/search:
    post:
      tags:
      - MaskingJobs
      summary: Search masking jobs.
      operationId: search_masking_jobs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingJobsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchMaskingJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJob'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      deprecated: true
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          is_on_the_fly_masking:
            type: boolean
          creation_date:
            type: string
          last_completed_execution_date:
            type: string
          last_execution_status:
            type: string
          last_execution_id:
            type: string
          connector_username:
            type: string
          on_the_fly_source_connector_username:
            type: string
          rule_set_id:
            type: string
          rule_set_name:
            type: string
          ruleset.connector_id:
            type: string
          ruleset.type:
            type: string
          ruleset.name:
            type: string
          ruleset.refresh_drops_table:
            type: boolean
          ruleset.algorithms:
            type: array[string]
          hyperscale_instance_id:
            type: string
          description:
            type: string
          dataset_id:
            type: string
          retain_execution_data:
            type: string
          max_memory:
            type: integer
          min_memory:
            type: integer
          feedback_size:
            type: integer
          stream_row_limit:
            type: integer
          num_input_streams:
            type: integer
          max_concurrent_source_connections:
            type: integer
          max_concurrent_target_connections:
            type: integer
          parallelism_degree:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /masking-jobs/source-engines:
    get:
      tags:
      - MaskingJobs
      summary: Retrieve the list of masking jobs along with their source engine.
      operationId: get_masking_job_source_engines
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingJobSourceEnginesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListMaskingJobSourceEnginesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJobSourceEngine'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /masking-jobs/source-engines/search:
    post:
      tags:
      - MaskingJobs
      summary: Search the list of masking jobs along with their source engine.
      operationId: search_masking_job_source_engines
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingJobSourceEnginesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchMaskingJobSourceEnginesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJobSourceEngine'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          masking_job_id:
            type: string
          source_engine_id:
            type: string
  /masking-jobs/{maskingJobId}:
    get:
      tags:
      - MaskingJobs
      summary: Retrieve a MaskingJob by ID.
      operationId: get_masking_job_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingJob'
      deprecated: true
    delete:
      tags:
      - MaskingJobs
      summary: Delete a masking job.
      operationId: delete_masking_job
      parameters:
      - $ref: '#/components/parameters/maskingJobDeleteForceParam'
      responses:
        '200':
          description: Masking job delete initiated.
          content:
            application/json:
              schema:
                title: DeleteMaskingJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - MaskingJobs
      summary: Update values of a MaskingJob.
      operationId: update_masking_job_by_id
      requestBody:
        description: The new data to update a Masking Job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaskingJobParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingJob'
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/copy:
    post:
      tags:
      - MaskingJobs
      summary: Copies the masking job to another engine.
      operationId: copy_masking_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyMaskingJobParameters'
      responses:
        '200':
          description: Copy masking job initiated.
          content:
            application/json:
              schema:
                title: CopyMaskingJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                  masking_job_id:
                    type: string
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/migrate:
    post:
      tags:
      - MaskingJobs
      summary: Migrates the masking job from its current source engine to another
        engine.
      operationId: migrate_masking_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrateMaskingJobParameters'
      responses:
        '200':
          description: Migrate masking job initiated.
          content:
            application/json:
              schema:
                title: MigrateMaskingJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/connectors:
    get:
      tags:
      - MaskingJobs
      summary: Get connectors for a Masking Job by ID.
      operationId: get_masking_job_connectors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingJobConnectorsResponse'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/execute:
    post:
      tags:
      - MaskingJobs
      summary: Execute a MaskingJob.
      operationId: execute_masking_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteMaskingJobParameters'
      responses:
        '200':
          description: Masking job execute initiated.
          content:
            application/json:
              schema:
                title: ExecuteMaskingJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/re-import:
    post:
      tags:
      - MaskingJobs
      summary: Re-import the dataset from the source MaskingJob (Hyperscale Job only).
      operationId: re_import_masking_job
      responses:
        '200':
          description: Masking job re-import initiated.
          content:
            application/json:
              schema:
                title: ReImportMaskingJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/tags:
    get:
      tags:
      - MaskingJobs
      summary: Get tags for a Masking Job.
      operationId: get_masking_job_tag
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
      deprecated: true
    post:
      tags:
      - MaskingJobs
      summary: Create tags for a Masking Job.
      operationId: create_masking_job_tag
      requestBody:
        description: Tags information for Masking Job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/tags/delete:
    post:
      tags:
      - MaskingJobs
      summary: Delete tags for a Masking Job.
      operationId: delete_masking_job_tag
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
      deprecated: true
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/add-engine:
    post:
      tags:
      - MaskingJobs
      summary: Add an engine to a Masking Job (Hyperscale Job only).
      operationId: add_engine_to_masking_job
      requestBody:
        description: Body containing the ID of the registered engine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineIdBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: AddEngineToJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /masking-jobs/{maskingJobId}/remove-engine:
    post:
      tags:
      - MaskingJobs
      summary: Remove an engine from a Masking Job (Hyperscale Job only).
      operationId: remove_engine_from_masking_job
      requestBody:
        description: Body containing the ID of the registered engine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineIdBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: RemoveEngineFromJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/maskingJobIdParam'
  /algorithms:
    get:
      tags:
      - Algorithms
      summary: Retrieve the list of algorithms.
      operationId: get_algorithms
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/algorithmsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListAlgorithmsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Algorithm'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /algorithms/{algorithmId}:
    get:
      tags:
      - Algorithms
      summary: Get an algorithm by ID.
      operationId: get_algorithm_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
    parameters:
    - $ref: '#/components/parameters/algorithmIdParam'
  /algorithms/search:
    post:
      tags:
      - Algorithms
      summary: Search for algorithms.
      operationId: search_algorithms
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/algorithmsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchAlgorithmsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Algorithm'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          framework_name:
            type: string
          framework_id:
            type: string
          plugin_name:
            type: string
          plugin_id:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          revision_hash:
            type: string
          create_date:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /algorithms/{algorithmId}/tags:
    get:
      tags:
      - Algorithms
      summary: Get tags for an Algorithm.
      operationId: get_algorithm_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Algorithms
      summary: Create tags for an Algorithm.
      operationId: create_algorithm_tags
      requestBody:
        description: Tags information for Algorithm.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Algorithm tags created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/algorithmIdParam'
  /algorithms/{algorithmId}/tags/delete:
    post:
      tags:
      - Algorithms
      summary: Delete tags for an Algorithm.
      operationId: delete_algorithm_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/algorithmIdParam'
  /algorithms/{algorithmId}/dependencies:
    get:
      tags:
      - Algorithms
      summary: Get dependencies of an algorithm by ID.
      operationId: get_algorithm_dependencies_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListAlgorithmDependenciesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dependency'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/algorithmIdParam'
    - $ref: '#/components/parameters/limit'
    - $ref: '#/components/parameters/cursor'
    - $ref: '#/components/parameters/dependenciesSortParam'
  /algorithms/{algorithmId}/dependencies/search:
    post:
      tags:
      - Algorithms
      summary: Search for algorithm dependencies.
      operationId: search_algorithm_dependencies
      parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/dependenciesSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchAlgorithmDependenciesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dependency'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          child_id:
            type: string
          child_name:
            type: string
          child_type:
            type: string
  /masking-environments:
    get:
      tags:
      - MaskingEnvironments
      summary: Retrieve the list of masking environments.
      operationId: get_masking_environments
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingEnvironmentsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListMaskingEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingEnvironment'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /masking-environments/search:
    post:
      tags:
      - MaskingEnvironments
      summary: Search masking environments.
      operationId: search_masking_environments
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/maskingEnvironmentsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchMaskingEnvironmentsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingEnvironment'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          purpose:
            type: string
          is_workflow_enabled:
            type: boolean
  /masking-environments/{maskingEnvironmentId}:
    get:
      tags:
      - MaskingEnvironments
      summary: Retrieve a MaskingEnvironment by ID.
      operationId: get_masking_environment_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingEnvironment'
    parameters:
    - $ref: '#/components/parameters/maskingEnvironmentId'
  /rule-sets:
    get:
      tags:
      - Rule Sets
      summary: Retrieve the list of Rule Sets.
      operationId: get_rule_sets
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/ruleSetsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: RuleSetsListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RuleSet'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /rule-sets/search:
    post:
      tags:
      - Rule Sets
      summary: Search for Rule Sets.
      operationId: search_rule_sets
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/ruleSetsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: RuleSetsSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RuleSet'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          type:
            type: string
          platform:
            type: string
          connector_id:
            type: string
          connector_name:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          data_elements_total:
            type: integer
          data_elements_sensitive:
            type: integer
          records_total:
            type: integer
          records_sensitive:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /rule-sets/{ruleSetId}:
    get:
      tags:
      - Rule Sets
      summary: Get a Rule Set by ID.
      operationId: get_rule_set_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSet'
    parameters:
    - $ref: '#/components/parameters/ruleSetIdParam'
  /rule-sets/{ruleSetId}/tags:
    get:
      tags:
      - Rule Sets
      summary: Get tags for a Rule Set.
      operationId: get_rule_set_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Rule Sets
      summary: Create tags for a Rule Set.
      operationId: create_rule_set_tags
      requestBody:
        description: Tags information for Rule Set.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Rule Set tags created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/ruleSetIdParam'
  /rule-sets/{ruleSetId}/tags/delete:
    post:
      tags:
      - Rule Sets
      summary: Delete tags for a Rule Set.
      operationId: delete_rule_set_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/ruleSetIdParam'
  /database-table-metadata:
    get:
      tags:
      - Rule Sets
      summary: Retrieve table metadata.
      operationId: get_database_table_metadata
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/databaseTableMetadataSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DatabaseTableMetadataListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatabaseTableMetadata'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /database-table-metadata/search:
    post:
      tags:
      - Rule Sets
      summary: Search table metadata.
      operationId: search_database_table_metadata
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/databaseTableMetadataSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DatabaseTableMetadataSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatabaseTableMetadata'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          table_name:
            type: string
          rule_set_id:
            type: string
          rule_set_name:
            type: string
          custom_sql:
            type: string
          where_clause:
            type: string
          having_clause:
            type: string
          key_column:
            type: string
          is_sensitive:
            type: boolean
          row_count:
            type: integer
          last_refresh_time:
            type: string
          last_row_count_time:
            type: string
  /database-column-metadata:
    get:
      tags:
      - Rule Sets
      summary: Retrieve column metadata.
      operationId: get_database_column_metadata
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/databaseColumnMetadataSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DatabaseColumnMetadataListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatabaseColumnMetadata'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /database-column-metadata/search:
    post:
      tags:
      - Rule Sets
      summary: Search column metadata.
      operationId: search_database_column_metadata
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/databaseColumnMetadataSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DatabaseColumnMetadataSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatabaseColumnMetadata'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: integer
          column_name:
            type: string
          database_table_metadata_id:
            type: integer
          table_name:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          rule_set_id:
            type: string
          rule_set_name:
            type: string
          algorithm_id:
            type: string
          algorithm_name:
            type: string
          data_class_id:
            type: string
          data_class_name:
            type: string
          data_type:
            type: string
          date_format:
            type: string
          column_length:
            type: integer
          is_sensitive:
            type: boolean
          is_profiler_writable:
            type: boolean
          is_primary_key:
            type: boolean
          is_identity:
            type: boolean
          is_index:
            type: boolean
          is_foreign_key:
            type: boolean
  /discovery-expressions:
    get:
      tags:
      - Discovery Expressions
      summary: Retrieve discovery expressions.
      operationId: get_discovery_expressions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryExpressionsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DiscoveryExpressionsListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveryExpression'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /discovery-expressions/search:
    post:
      tags:
      - Discovery Expressions
      summary: Search discovery expressions.
      operationId: search_discovery_expressions
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/discoveryExpressionsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DiscoveryExpressionsSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveryExpression'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          regular_expression:
            type: string
          data_level_profiling:
            type: boolean
          min_data_length:
            type: integer
          engine_id:
            type: string
          engine_name:
            type: string
          data_class_id:
            type: string
          data_class_name:
            type: string
          data_type:
            type: string
            enum:
            - String
            - Number
            - Date
            - Binary
          expression_type:
            type: string
            enum:
            - SEARCH
            - TYPE
          level:
            type: string
            enum:
            - DATA
            - COLUMN
            - TYPE
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /discovery-expressions/{expressionId}:
    get:
      tags:
      - Discovery Expressions
      summary: Get a discovery expression by ID.
      operationId: get_discovery_expression_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryExpression'
    parameters:
    - $ref: '#/components/parameters/discoveryExpressionIdParam'
  /discovery-expressions/{expressionId}/tags:
    get:
      tags:
      - Discovery Expressions
      summary: Get tags for a discovery expression.
      operationId: get_discovery_expression_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Discovery Expressions
      summary: Create tags for a discovery expression.
      operationId: create_discovery_expression_tags
      requestBody:
        description: Tags information for discovery expression.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Discovery expression tags created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/discoveryExpressionIdParam'
  /discovery-expressions/{expressionId}/tags/delete:
    post:
      tags:
      - Discovery Expressions
      summary: Delete tags for a discovery expression.
      operationId: delete_discovery_expression_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/discoveryExpressionIdParam'
  /compliance-jobs:
    get:
      tags:
      - ComplianceJobs
      summary: Retrieve the list of compliance jobs.
      operationId: get_compliance_jobs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/complianceJobsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListComplianceJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComplianceJob'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /compliance-jobs/search:
    post:
      tags:
      - ComplianceJobs
      summary: Search compliance jobs.
      operationId: search_compliance_jobs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/complianceJobsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchComplianceJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComplianceJob'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          engine_job_id:
            type: integer
          type:
            type: string
          execution_type:
            type: string
          is_on_the_fly_masking:
            type: boolean
          creation_date:
            type: string
          last_completed_execution_date:
            type: string
          last_execution_status:
            type: string
          last_execution_id:
            type: string
          last_execution_start_time:
            type: string
          last_execution_run_time:
            type: integer
          connector_username:
            type: string
          on_the_fly_source_connector_username:
            type: string
          rule_set_id:
            type: string
          rule_set_name:
            type: string
          hyperscale_instance_id:
            type: string
          description:
            type: string
          dataset_id:
            type: string
          retain_execution_data:
            type: string
          max_memory:
            type: integer
          min_memory:
            type: integer
          feedback_size:
            type: integer
          stream_row_limit:
            type: integer
          num_input_streams:
            type: integer
          max_concurrent_source_connections:
            type: integer
          max_concurrent_target_connections:
            type: integer
          parallelism_degree:
            type: integer
          discovery_policy_id:
            type: string
          discovery_policy_name:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /compliance-jobs/{complianceJobId}:
    get:
      tags:
      - ComplianceJobs
      summary: Retrieve a compliance job by ID.
      operationId: get_compliance_job_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceJob'
    parameters:
    - $ref: '#/components/parameters/complianceJobIdParam'
  /compliance-jobs/{complianceJobId}/connectors:
    get:
      tags:
      - ComplianceJobs
      summary: Get connectors for a Masking Job by ID.
      operationId: get_compliance_job_connectors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceJobConnectorsResponse'
    parameters:
    - $ref: '#/components/parameters/complianceJobIdParam'
  /compliance-jobs/{complianceJobId}/tags:
    get:
      tags:
      - ComplianceJobs
      summary: Get tags for a compliance job.
      operationId: get_compliance_job_tag
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - ComplianceJobs
      summary: Create tags for a compliance job.
      operationId: create_compliance_job_tag
      requestBody:
        description: Tags information for Masking Job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/complianceJobIdParam'
  /compliance-jobs/{complianceJobId}/tags/delete:
    post:
      tags:
      - ComplianceJobs
      summary: Delete tags for a compliance job.
      operationId: delete_compliance_job_tag
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/complianceJobIdParam'
  /compliance-jobs/{complianceJobId}/execute:
    post:
      tags:
      - ComplianceJobs
      summary: Execute a compliance.
      operationId: execute_compliance_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteComplianceJobRequest'
      responses:
        '200':
          description: Compliance job execute initiated.
          content:
            application/json:
              schema:
                title: ExecuteComplianceJobResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/complianceJobIdParam'
  /management/engines:
    get:
      tags:
      - Management
      summary: Returns a list of registered engines.
      operationId: get_registered_engines
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/engineSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListRegisteredEnginesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegisteredEngine'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Management
      summary: Register an engine.
      operationId: register_engine
      requestBody:
        description: The parameters to register an engine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineRegistrationParameter'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredEngine'
  /jobs:
    get:
      tags:
      - Jobs
      summary: List all jobs.
      operationId: get_jobs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/jobsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /jobs/search:
    post:
      tags:
      - Jobs
      summary: Search for jobs.
      operationId: search_jobs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/jobsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchJobsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          status:
            type: string
          type:
            type: string
          localized_type:
            type: string
          target_id:
            type: string
          target_name:
            type: string
          start_time:
            type: string
          update_time:
            type: string
          error_details:
            type: string
          trace_id:
            type: string
          engine_ids:
            type: array[string]
            deprecated: true
          engines:
            type: array[object]
            fields:
              engine_id:
                type: string
              engine_name:
                type: string
          account_id:
            type: int
          account_name:
            type: string
  /jobs/{jobId}:
    get:
      tags:
      - Jobs
      summary: Returns a job by ID.
      operationId: get_job_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
    parameters:
    - name: jobId
      in: path
      description: The ID of the job.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
  /jobs/{jobId}/abandon:
    post:
      tags:
      - Jobs
      summary: Abandons a job.
      description: |
        Abandoning a job means that the system will no longer track ongoing progress. The system will not attempt to stop the process in any way. The job will be moved to the ABANDONED terminal state.
      operationId: abandon_job
      responses:
        '204':
          description: No Content
    parameters:
    - name: jobId
      in: path
      description: The ID of the job.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
  /jobs/{jobId}/result:
    get:
      tags:
      - Jobs
      summary: Get job result.
      description: Get job result.
      operationId: get_job_result
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResultResponse'
    parameters:
    - name: jobId
      in: path
      description: The ID of the job.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
  /jobs/{jobId}/tags:
    get:
      tags:
      - Jobs
      summary: Get tags for a Job.
      operationId: get_job_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Jobs
      summary: Create tags for a Job.
      operationId: create_job_tags
      requestBody:
        description: Tags information for Job.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - name: jobId
      in: path
      description: The ID of the job.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
  /jobs/{jobId}/tags/delete:
    post:
      tags:
      - Jobs
      summary: Delete tags for a Job.
      operationId: delete_job_tag
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - name: jobId
      in: path
      description: The ID of the job.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
  /management/engines/{engineId}:
    get:
      tags:
      - Management
      summary: Returns a registered engine by ID.
      operationId: get_registered_engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredEngine'
    put:
      tags:
      - Management
      summary: Update a registered engine.
      operationId: update_registered_engine
      requestBody:
        description: The updated registration engine information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisteredEngine'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredEngine'
    delete:
      tags:
      - Management
      summary: Unregister an engine.
      operationId: unregister_engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: DeleteEngineResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    patch:
      tags:
      - Management
      summary: Update a registered engine.
      operationId: update_registered_engine_partial
      requestBody:
        description: The updated registration engine information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisteredEngine'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredEngine'
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /management/engines/{engineId}/auto-tagging:
    get:
      tags:
      - Management
      summary: Returns the engine's auto tagging configuration.
      operationId: get_engine_auto_tagging_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTaggingConfig'
    patch:
      tags:
      - Management
      summary: Update the engine's auto tagging configuration.
      operationId: update_engine_auto_tagging_config
      requestBody:
        description: The auto tagging config update parameters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EngineAutoTaggingConfigUpdateParameters'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: UpdateEngineAutoTaggingConfigResponse
                type: object
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /management/engines/{engineId}/compliance-application-settings:
    get:
      tags:
      - Management
      summary: Returns a compliance engine's application settings.
      operationId: get_compliance_application_settings
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/complianceApplicationSettingsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ComplianceApplicationSettingsListResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComplianceApplicationSetting'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /management/engines/{engineId}/compliance-application-settings/search:
    post:
      tags:
      - Management
      summary: Search a compliance engine's application settings.
      operationId: search_compliance_application_settings
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/complianceApplicationSettingsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ComplianceApplicationSettingsSearchResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComplianceApplicationSetting'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          group:
            type: string
          name:
            type: string
          value:
            type: string
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /management/engines/search:
    post:
      tags:
      - Management
      summary: Search for engines.
      operationId: search_engines
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/engineSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchEnginesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegisteredEngine'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          uuid:
            type: string
          ssh_public_key:
            type: string
          type:
            type: string
          version:
            type: string
          name:
            type: string
          hostname:
            type: string
          cpu_core_count:
            type: integer
          memory_size:
            type: integer
          data_storage_capacity:
            type: integer
          data_storage_used:
            type: integer
          insecure_ssl:
            type: boolean
          unsafe_ssl_hostname_check:
            type: boolean
          truststore_filename:
            type: string
          hyperscale_truststore_filename:
            type: string
          status:
            type: string
          username:
            type: string
          hashicorp_vault_id:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          connection_status:
            type: string
          connection_status_details:
            type: string
          engine_connection_status:
            type: string
          engine_connection_status_details:
            type: string
          masking_memory_used:
            type: integer
          masking_allocated_memory:
            type: integer
          masking_jobs_running:
            type: integer
          masking_max_concurrent_jobs:
            type: integer
          masking_available_cores:
            type: integer
          hyperscale_instance_ids:
            type: array[string]
  /management/engines/{engineId}/tags:
    get:
      tags:
      - Management
      summary: Get tags for a Engine.
      operationId: get_engine_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Management
      summary: Create tags for an Engine.
      operationId: create_engine_tags
      requestBody:
        description: Tags information for Engine.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /management/engines/{engineId}/tags/delete:
    post:
      tags:
      - Management
      summary: Delete tags for an Engine.
      operationId: delete_engine_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
  /management/vaults/hashicorp:
    get:
      tags:
      - Management
      summary: Returns a list of configured Hashicorp vaults.
      operationId: get_hashicorp_vaults
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hashicorpVaultsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListHashicorpVaultsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HashicorpVault'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Management
      summary: Configure a new Hashicorp Vault
      operationId: create_hashicorp_vault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashicorpVault'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashicorpVault'
  /management/vaults/hashicorp/search:
    post:
      tags:
      - Management
      summary: Search for configured Hashicorp vaults.
      operationId: search_hashicorp_vaults
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hashicorpVaultsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchHashicorpVaultsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HashicorpVault'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /management/vaults/hashicorp/{vaultId}:
    get:
      tags:
      - Management
      summary: Get a Hashicorp vault by id
      operationId: get_hashicorp_vault
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashicorpVault'
    delete:
      tags:
      - Management
      summary: Delete a Hashicorp vault by id
      operationId: delete_hashicorp_vault
      responses:
        '204':
          description: No Content
    parameters:
    - name: vaultId
      in: path
      description: Numeric ID of the Hashicorp vault
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
  /management/vaults/hashicorp/{vaultId}/tags:
    get:
      tags:
      - Management
      summary: Get tags for a Hashicorp vault.
      operationId: get_hashicorp_vault_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Management
      summary: Create tags for a Hashicorp vault.
      operationId: create_hashicorp_vault_tags
      requestBody:
        description: Tags information for Hashicorp vault.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - name: vaultId
      in: path
      description: Numeric ID of the Hashicorp vault
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
  /management/vaults/hashicorp/{vaultId}/tags/delete:
    post:
      tags:
      - Management
      summary: Delete tags for a Hashicorp vault.
      operationId: delete_hashicorp_vault_tag
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - name: vaultId
      in: path
      description: Numeric ID of the Hashicorp vault
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
  /management/accounts:
    get:
      tags:
      - Accounts
      summary: Returns a list of Accounts
      operationId: get_accounts
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/accountsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListAccountsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Accounts
      summary: |
        Create a new Account
      operationId: create_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateParameter'
        required: true
      responses:
        '201':
          description: The created Account id and if requested the generated API key
            token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreateResponse'
  /management/accounts/{id}/api-key-reset:
    post:
      tags:
      - Accounts
      summary: Reset account API key.
      operationId: api_key_reset
      responses:
        '200':
          description: Updated account with the new API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreateResponse'
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/{id}/api-key-delete:
    delete:
      tags:
      - Accounts
      summary: Delete an API Key for an account
      operationId: api_key_delete
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/api-key-regenerate:
    post:
      tags:
      - Accounts
      summary: Regenerate api key for the self.
      operationId: api-key-regenerate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApikeyRegenerateParameter'
        required: true
      responses:
        '200':
          description: Updated current account with the new API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCreateResponse'
  /management/accounts/{id}:
    get:
      tags:
      - Accounts
      summary: Get an Account by id
      operationId: get_account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    put:
      tags:
      - Accounts
      summary: |
        Update an Account
      operationId: update_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateParameter'
        required: true
      responses:
        '200':
          description: Returns the updated Account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      tags:
      - Accounts
      summary: Delete an Account
      operationId: delete_account
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/{id}/enable:
    post:
      tags:
      - Accounts
      summary: Enable an Account.
      operationId: enable_account
      responses:
        '200':
          description: OK
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/{id}/disable:
    post:
      tags:
      - Accounts
      summary: Disable an Account.
      operationId: disable
      responses:
        '200':
          description: OK
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/{id}/change_password:
    post:
      tags:
      - Accounts
      summary: |
        Change Account Password.
      operationId: change_account_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordParameter'
        required: true
      responses:
        '204':
          description: Password changed.
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/{id}/reset_password:
    post:
      tags:
      - Accounts
      summary: |
        Reset Account Password.
      operationId: reset_account_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordParameter'
        required: true
      responses:
        '204':
          description: Password reset.
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/{id}/tags:
    get:
      tags:
      - Accounts
      summary: Get tags for an Account.
      operationId: get_account_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Accounts
      summary: Create tags for an Account.
      operationId: create_account_tags
      requestBody:
        description: Tags information for Account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/{id}/tags/delete:
    post:
      tags:
      - Accounts
      summary: Delete tags for an Account.
      operationId: delete_account_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/accountIdParam'
  /management/accounts/password-policies:
    get:
      tags:
      - Accounts
      summary: Returns the password policies
      operationId: get_password_policies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPoliciesParams'
    patch:
      tags:
      - Accounts
      summary: Update password policies.
      operationId: update_password_policies
      requestBody:
        description: The parameters to update the password policies.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordPoliciesParams'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPoliciesParams'
  /management/license:
    get:
      tags:
      - License
      summary: Returns the DCT license information.
      operationId: get_license
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseInfo'
  /management/license/change-license:
    post:
      tags:
      - License
      summary: Change the current DCT license.
      operationId: change_license
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLicenseParameters'
        required: true
      responses:
        '200':
          description: OK
  /management/properties:
    get:
      tags:
      - Management
      summary: Get global properties.
      operationId: list_properties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalProperties'
    patch:
      tags:
      - Management
      summary: Update value of predefined properties.
      operationId: update_properties
      requestBody:
        description: The parameters to update property value.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalProperties'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalProperties'
  /management/api-classification:
    get:
      tags:
      - Management
      summary: Get api classification.
      operationId: get_api_classification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClassificationConfig'
    put:
      tags:
      - Management
      summary: Update the api classification to new version.
      operationId: update_api_classification
      requestBody:
        description: Request to update api classification config.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIClassificationConfig'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClassificationConfig'
  /login:
    post:
      tags:
      - Login
      summary: |
        Login to Account with Username and Password
      operationId: account_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLoginParameter'
        required: true
      responses:
        '200':
          description: Account Login Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginToken'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: invalid_credentials
                error_description: error-message-goes-here
  /logout:
    post:
      tags:
      - Login
      summary: Invalidates username/password and SSO login session.
      operationId: account_logout
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Logged out
  /management/accounts/search:
    post:
      tags:
      - Accounts
      summary: Search for Accounts.
      operationId: search_accounts
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/accountsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchAccountsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          username:
            type: string
          last_access_time:
            type: string
          creation_time:
            type: string
          enabled:
            type: boolean
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /token-info:
    post:
      tags:
      - Login
      summary: |
        Get Token Information
      operationId: token_info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenInfoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenInfoResponse'
              example:
                active: true
                token_type: Bearer
                account_id: 1
                first_name: first-name
                last_name: last-name
                email: abc@example.com
                username: user-name
                exp: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: invalid-token
                error_description: error-message-goes-here
  /is-saml-enabled:
    get:
      tags:
      - SamlLogin
      summary: |
        Check if SAML is enabled
      operationId: checkSaml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLValidationResponse'
              example:
                enabled: true
  /management/smtp:
    get:
      tags:
      - Management
      summary: Returns the SMTP configuration
      operationId: get_smtp_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMTPConfigParams'
    put:
      tags:
      - Management
      summary: Update SMTP Config.
      operationId: update_smtp_config
      requestBody:
        description: The parameters to update the SMTP config.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMTPConfigParams'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMTPConfigParams'
  /management/smtp/validate:
    post:
      tags:
      - Management
      summary: Validate SMTP Config.
      operationId: validate_smtp_config
      requestBody:
        description: The parameters to validate the SMTP config.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMTPConfigValidate'
        required: true
      responses:
        '200':
          description: OK
  /management/metadata-database:
    get:
      tags:
      - Management
      summary: Returns configuration information about the metadata database which
        stores the product data.
      operationId: get_metadata_database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataDbInfo'
  /management/ldap-config:
    get:
      tags:
      - Management
      summary: Returns the LDAP configuration
      operationId: get_ldap_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConfigParams'
    put:
      tags:
      - Management
      summary: Update LDAP Config.
      operationId: update_ldap_config
      requestBody:
        description: The parameters to update the LDAP config.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConfigParams'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConfigParams'
  /management/ldap-config/validate:
    post:
      tags:
      - Management
      summary: Validate LDAP Config. Without username/password, DCT performs an anonymous
        bind against the LDAP server. If credentials are provided DCT validates that
        authentication and mapping of optional properties are actually working with
        provided credentials. LDAP search is only validated if search attributes are
        set.
      operationId: validate_ldap_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LdapConfigValidateParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: LdapValidateResponse
                type: object
                properties:
                  message:
                    minLength: 1
                    type: string
                    description: Validation message for LDAP config.
  /management/saml-config:
    get:
      tags:
      - Management
      summary: Returns the SAML configuration
      operationId: get_saml_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLConfigParams'
    put:
      tags:
      - Management
      summary: Update SAML Config.
      operationId: update_saml_config
      requestBody:
        description: The parameters to update the SAML config.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLConfigParams'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLConfigParams'
  /management/phonehome/events:
    get:
      tags:
      - Management
      summary: Returns previous bundle upload events
      operationId: get_phonehome_events
      parameters:
      - name: limit
        in: query
        description: The maximum number of items to return.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BundleUploadEvent'
  /management/proxy:
    get:
      tags:
      - Management
      summary: Returns the current web proxy configuration to use to connect to Delphix
        services.
      operationId: get_proxy_configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyConfiguration'
    put:
      tags:
      - Management
      summary: Update the web proxy configuration to use to connect to Delphix services.
      operationId: update_proxy_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyConfiguration'
        required: true
      responses:
        '200':
          description: Update the web proxy configuration to use to connect to Delphix
            services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyConfiguration'
  /management/product-registration-delphix-connectivity-check:
    get:
      tags:
      - Management
      summary: Returns True if Delphix services are reachable for product registration.
      operationId: get_product_registration_delphix_connectivity_check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                description: True if the Delphix services are reachable for product
                  registration, False otherwise.
  /management/product-registration-status:
    get:
      tags:
      - Management
      summary: Returns the product registration status.
      operationId: get_product_registration_status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                description: True if the DCT is registered, False otherwise.
  /management/product-registration-offline:
    get:
      tags:
      - Management
      summary: Generates and returns a public key that can be used to register the
        product.
      operationId: get_product_registration_key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: The key to register the product with.
    post:
      tags:
      - Management
      summary: Registers the product using a manually generated payload.
      operationId: register_product_offline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRegistrationOfflinePayload'
        required: true
      responses:
        '204':
          description: No Content
  /management/product-registration-online:
    post:
      tags:
      - Management
      summary: Registers the product using the provided credentials.
      operationId: register_product_online
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRegistrationOnlinePayload'
        required: true
      responses:
        '204':
          description: No Content
  /reporting/audit-logs-summary-report:
    get:
      tags:
      - Reporting
      summary: Gets the audit log summary report.
      operationId: get_audit_logs_summary_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/auditLogsSummaryReportSortParam'
      responses:
        '200':
          description: Returns a list of aggregated audit log entries for each account.
          content:
            application/json:
              schema:
                title: AuditLogsSummaryReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLogsSummary'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
                  totals:
                    $ref: '#/components/schemas/AuditLogsSummaryTotals'
            text/csv:
              schema:
                type: string
                example: |
                  account_id,account_first_name,account_last_name,vdb_refreshes,masking_jobs
                  1,FirstName1,LastName1,10,4
                  2,FirstName2,LastName2,7,3
                  total_vdb_refreshes,total_masking_jobs
                  17,7
  /reporting/virtualization-storage-summary-report:
    get:
      tags:
      - Reporting
      summary: Gets the storage summary report for virtualization engines.
      operationId: get_virtualization_storage_summary_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationStorageReportSortParam'
      responses:
        '200':
          description: Returns a list of storage summary data of virtualization engines.
          content:
            application/json:
              schema:
                title: VirtualizationStorageSummaryReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationStorageSummaryData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,engine_hostname,total_capacity,free_storage,used_storage,used_percentage,dsource_count,vdb_count,total_object_count,reserved_storage,dsource_used_storage,vdb_used_storage
                  1,my-engine,"eng01.dev.delphix.com",23404216320,20896169984,2508046336,10.71,5,25,30,2200000000,890000000,11000000
  /reporting/virtualization-storage-summary-report/search:
    post:
      tags:
      - Reporting
      summary: Search the storage summary report for virtualization engines.
      operationId: search_virtualization_storage_summary_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/virtualizationStorageReportSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of storage summary data of virtualization engines.
          content:
            application/json:
              schema:
                title: VirtualizationStorageSummaryReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationStorageSummaryData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,engine_hostname,total_capacity,free_storage,used_storage,used_percentage,dsource_count,vdb_count,total_object_count,reserved_storage,dsource_used_storage,vdb_used_storage
                  1,my-engine,"eng01.dev.delphix.com",23404216320,20896169984,2508046336,10.71,5,25,30,2200000000,890000000,11000000
      x-filterable:
        fields:
          engine_id:
            type: string
          engine_name:
            type: string
          engine_hostname:
            type: string
          total_capacity:
            type: integer
          free_storage:
            type: integer
          used_storage:
            type: integer
          used_percentage:
            type: number
          dsource_count:
            type: integer
          vdb_count:
            type: integer
          total_object_count:
            type: integer
          reserved_storage:
            type: integer
          dsource_used_storage:
            type: integer
          vdb_used_storage:
            type: integer
  /reporting/api-usage-report:
    get:
      tags:
      - Reporting
      summary: Gets the report of API usage metrics over a given time period. This
        API returns at the most 10000 results in the response to protect against the
        server running out of memory. Users might not hit this limit with the default
        report without any 'apiUsageReportGroupByParam' param but can hit this limit
        if the groupBy is by too granular like by 'client_name' or 'user_agent' only.
        Hence it is advisable to use startDate and endDate to 'limit' the scope of
        the report.
      operationId: get_api_usage_report
      parameters:
      - $ref: '#/components/parameters/startDate'
      - $ref: '#/components/parameters/endDate'
      - $ref: '#/components/parameters/apiMetricKind'
      - $ref: '#/components/parameters/apiUsageReportGroupByParam'
      - $ref: '#/components/parameters/apiUsageReportClientNameFilterParam'
      - $ref: '#/components/parameters/apiUsageReportUserAgentFilterParam'
      - $ref: '#/components/parameters/apiUsageReportDctVersionFilterParam'
      responses:
        '200':
          description: Returns a list of API usage metrics.
          content:
            application/json:
              schema:
                title: ApiUsageReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiUsageData'
                  total_automation_api_count:
                    type: integer
                    description: Total count of automation API calls over the requested
                      timeframe.
                    format: int64
                    example: 4200
                  total_governance_api_count:
                    type: integer
                    description: Total count of governance API calls over the requested
                      timeframe.
                    format: int64
                    example: 4200
            text/csv:
              schema:
                type: string
                example: |
                  api_endpoint,api_method,api_count
                  /v2/bookmarks,GET,1
                  /v2/bookmarks/search,POST,1
                  /v2/management/engines,GET,1
  /reporting/schedule:
    get:
      tags:
      - Reporting
      summary: List all report schedules.
      operationId: get_reporting_schedules
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/reportingScheduleSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListReportingScheduleResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingSchedule'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Reporting
      summary: Create a new report schedule.
      operationId: create_reporting_schedule
      requestBody:
        $ref: '#/components/requestBodies/CreateReportingSchedule'
      responses:
        '200':
          description: Returns the newly created schedule for a report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
  /reporting/schedule/search:
    post:
      tags:
      - Reporting
      summary: Search for report schedules.
      operationId: search_reporting_schedules
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/reportingScheduleSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchReportingScheduleResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingSchedule'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          report_id:
            type: integer
          report_type:
            type: string
          cron_expression:
            type: string
          time_zone:
            type: string
          message:
            type: string
          file_format:
            type: string
          enabled:
            type: boolean
          sort_column:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /reporting/schedule/{reportId}:
    get:
      tags:
      - Reporting
      summary: Returns a report schedule by ID.
      operationId: get_reporting_schedule_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
    put:
      tags:
      - Reporting
      summary: Update a reporting schedule by ID.
      operationId: update_reporting_schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportingSchedule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
    delete:
      tags:
      - Reporting
      summary: Delete report schedule by ID.
      operationId: delete_reporting_schedule
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/reportIdParam'
  /reporting/schedule/{reportId}/tags:
    get:
      tags:
      - Reporting
      summary: Get tags for a report schedule.
      operationId: get_reporting_schedule_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Reporting
      summary: Create tags for a report schedule.
      operationId: create_reporting_schedule_tags
      requestBody:
        description: Tags information for report schedule.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/reportIdParam'
  /reporting/schedule/{reportId}/tags/delete:
    post:
      tags:
      - Reporting
      summary: Delete tags for a report schedule.
      operationId: delete_reporting_schedule_tag
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/reportIdParam'
  /reporting/engine-performance-analytic-report:
    get:
      tags:
      - Reporting
      summary: Gets the performance analytics report for engines.
      operationId: get_engine_performance_analytics_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/EnginePerformanceAnalyticReportSortParam'
      responses:
        '200':
          description: Returns a list of performance analytics data of engines.
          content:
            application/json:
              schema:
                title: EnginePerformanceAnalyticReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnginePerformanceAnalytic'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,engine_id,engine_type,aggregation_period,cpu_cores_count,cpu_utilization,total_memory,average_disk_latency_read,average_disk_latency_write,average_disk_latency_total,average_disk_throughput_read,average_disk_throughput_write,average_disk_throughput_total,average_nfs_latency_read,average_nfs_latency_write,average_nfs_latency_total,average_nfs_throughput_read,average_nfs_throughput_write,average_nfs_throughput_total,average_iscsi_latency_read,average_iscsi_latency_write,average_iscsi_latency_total,average_iscsi_throughput_read,average_iscsi_throughput_write,average_iscsi_throughput_total,average_network_throughput_transmit,average_network_throughput_receive
                  km,1,VIRTUALIZATION,24,2,4.97529992942837,8589934592,4747942,900793,901766,486,495052,253030,32493,1127989,394758,34417,0,17208,0,0,0,0,0,0,11.135787037037,5.75303240740741
  /reporting/engine-performance-analytic-report/search:
    post:
      tags:
      - Reporting
      summary: Search the performance analytic report for engines.
      operationId: search_engine_performance_analytics_report
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/EnginePerformanceAnalyticReportSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of performance analytics data of engines.
          content:
            application/json:
              schema:
                title: EnginePerformanceAnalyticReportResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnginePerformanceAnalytic'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,engine_id,engine_type,aggregation_period,cpu_cores_count,cpu_utilization,total_memory,average_disk_latency_read,average_disk_latency_write,average_disk_latency_total,average_disk_throughput_read,average_disk_throughput_write,average_disk_throughput_total,average_nfs_latency_read,average_nfs_latency_write,average_nfs_latency_total,average_nfs_throughput_read,average_nfs_throughput_write,average_nfs_throughput_total,average_iscsi_latency_read,average_iscsi_latency_write,average_iscsi_latency_total,average_iscsi_throughput_read,average_iscsi_throughput_write,average_iscsi_throughput_total,average_network_throughput_transmit,average_network_throughput_receive
                  km,1,VIRTUALIZATION,24,2,4.97529992942837,8589934592,4747942,900793,901766,486,495052,253030,32493,1127989,394758,34417,0,17208,0,0,0,0,0,0,11.135787037037,5.75303240740741
      x-filterable:
        fields:
          engine_id:
            type: string
          engine_name:
            type: string
          engine_type:
            type: string
          aggregation_period:
            type: integer
          cpu_cores_count:
            type: integer
          cpu_utilization:
            type: number
            format: double
          total_memory:
            type: integer
            format: int64
          average_disk_latency_read:
            type: integer
            format: int64
          average_disk_latency_write:
            type: integer
            format: int64
          average_disk_latency_total:
            type: integer
            format: int64
          average_disk_throughput_read:
            type: integer
            format: int64
          average_disk_throughput_write:
            type: integer
            format: int64
          average_disk_throughput_total:
            type: integer
            format: int64
          average_disk_iops_read:
            type: integer
            format: int64
          average_disk_iops_write:
            type: integer
            format: int64
          average_disk_iops_total:
            type: integer
            format: int64
          average_nfs_latency_read:
            type: integer
            format: int64
          average_nfs_latency_write:
            type: integer
            format: int64
          average_nfs_latency_total:
            type: integer
            format: int64
          average_nfs_throughput_read:
            type: integer
            format: int64
          average_nfs_throughput_write:
            type: integer
            format: int64
          average_nfs_throughput_total:
            type: integer
            format: int64
          average_nfs_iops_read:
            type: integer
            format: int64
          average_nfs_iops_write:
            type: integer
            format: int64
          average_nfs_iops_total:
            type: integer
            format: int64
          average_iscsi_latency_read:
            type: integer
            format: int64
          average_iscsi_latency_write:
            type: integer
            format: int64
          average_iscsi_latency_total:
            type: integer
            format: int64
          average_iscsi_throughput_read:
            type: integer
            format: int64
          average_iscsi_throughput_write:
            type: integer
            format: int64
          average_iscsi_throughput_total:
            type: integer
            format: int64
          average_iscsi_iops_read:
            type: integer
            format: int64
          average_iscsi_iops_write:
            type: integer
            format: int64
          average_iscsi_iops_total:
            type: integer
            format: int64
          average_network_throughput_transmit:
            type: number
            format: double
          average_network_throughput_receive:
            type: number
            format: double
  /reporting/engine-performance-analytic-trends/search:
    post:
      tags:
      - Reporting
      summary: Search the performance analytic trend data for engines.
      operationId: search_engine_performance_analytic_trends
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/EnginePerformanceAnalyticTrendSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: Returns a list of performance analytic trends data of engines.
          content:
            application/json:
              schema:
                title: EnginePerformanceAnalyticTrendResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnginePerformanceAnalyticTrend'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          engine_id:
            type: string
          trend_type:
            type: string
          aggregation_period:
            type: integer
  /reporting/product_info:
    get:
      tags:
      - Reporting
      summary: Returns the DCT Product Information.
      operationId: get_product_info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
  /roles:
    get:
      tags:
      - Authorization
      summary: List all roles
      operationId: get_roles
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/roleSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListRolesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Authorization
      summary: Create custom role
      operationId: create_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRole'
      responses:
        '200':
          description: Returns the newly created role.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
  /roles/{roleId}:
    get:
      tags:
      - Authorization
      summary: Returns role by ID.
      operationId: get_role_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    delete:
      tags:
      - Authorization
      summary: Delete role by ID.
      operationId: delete_role
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - Authorization
      summary: Update a Role.
      operationId: update_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    parameters:
    - $ref: '#/components/parameters/roleIdParam'
  /roles/search:
    post:
      tags:
      - Authorization
      summary: Search for roles.
      operationId: search_roles
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/roleSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchRolesResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          system_role:
            type: boolean
          immutable:
            type: boolean
          permission_objects:
            type: array[object]
            fields:
              object_type:
                type: string
              permissions:
                type: array[string]
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
  /roles/{roleId}/permissions:
    post:
      tags:
      - Authorization
      summary: Add permissions to a role.
      operationId: add_role_permissions
      requestBody:
        description: Permissions to add to the role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsRequest'
        required: true
      responses:
        '200':
          description: The updated role.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    parameters:
    - $ref: '#/components/parameters/roleIdParam'
  /roles/{roleId}/permissions/delete:
    post:
      tags:
      - Authorization
      summary: Remove permissions from a role.
      operationId: remove_role_permissions
      requestBody:
        description: Permissions to remove from the role.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsRequest'
        required: true
      responses:
        '200':
          description: The updated role.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    parameters:
    - $ref: '#/components/parameters/roleIdParam'
  /roles/{roleId}/tags:
    get:
      tags:
      - Authorization
      summary: Get tags for a Role.
      operationId: get_role_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    post:
      tags:
      - Authorization
      summary: Create tags for a role.
      operationId: create_role_tags
      requestBody:
        description: Tags information for Roles.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
    parameters:
    - $ref: '#/components/parameters/roleIdParam'
  /roles/{roleId}/tags/delete:
    post:
      tags:
      - Authorization
      summary: Delete tags for a Role.
      operationId: delete_role_tag
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
    parameters:
    - $ref: '#/components/parameters/roleIdParam'
  /auth/permissions/objects/{objectType}/{objectId}:
    get:
      tags:
      - Authorization
      summary: Returns permissions for given object.
      operationId: get_object_permissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectPermissionsResponse'
    parameters:
    - $ref: '#/components/parameters/objectTypeParam'
    - $ref: '#/components/parameters/objectIdParam'
  /auth/object-permissions:
    get:
      tags:
      - Authorization
      summary: Returns all of the possible permissions for all of the objects.
      operationId: get_all_object_permissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllObjectPermissionsResponse'
  /access-groups:
    get:
      tags:
      - Authorization
      summary: List all access groups.
      operationId: get_access_groups
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/accessGroupsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListAccessGroupsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessGroup'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Authorization
      summary: Create a new access group.
      operationId: create_access_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessGroup'
        required: true
      responses:
        '201':
          description: Returns the newly created access group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
  /access-groups/search:
    post:
      tags:
      - Authorization
      summary: Search for access groups.
      operationId: search_access_groups
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/accessGroupsSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchAccessGroupsResponse
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessGroup'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
      x-filterable:
        description: Access group fields which can be used in filter expressions.
        fields:
        - id
        - name
        - account_ids
        - tagged_account_ids
        - scopes
        - single_account
  /access-groups/{accessGroupId}:
    get:
      tags:
      - Authorization
      summary: Returns an Access group by ID.
      operationId: get_access_group_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    delete:
      tags:
      - Authorization
      summary: Delete an Access group.
      operationId: delete_access_group
      responses:
        '204':
          description: No Content
    patch:
      tags:
      - Authorization
      summary: Update an Access group.
      operationId: update_access_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessGroupUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
  /access-groups/{accessGroupId}/tags:
    post:
      tags:
      - Authorization
      summary: Add account tags to an Access group
      operationId: add_access_group_account_tags
      requestBody:
        description: Account Tags to add to the Access group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequest'
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
  /access-groups/{accessGroupId}/tags/delete:
    post:
      tags:
      - Authorization
      summary: Remove account tags from an access group.
      operationId: remove_access_group_account_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
  /access-groups/{accessGroupId}/account-ids:
    post:
      tags:
      - Authorization
      summary: Add account ids to an Access group
      operationId: add_access_group_account_ids
      requestBody:
        description: Account ids to add to the Access group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessGroupAccountIdsRequest'
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
  /access-groups/{accessGroupId}/account-ids/{accountId}:
    delete:
      tags:
      - Authorization
      summary: Remove the account from the access group.
      operationId: remove_access_group_account_id
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
    - name: accountId
      in: path
      description: The ID of the account.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
  /access-groups/{accessGroupId}/scopes:
    post:
      tags:
      - Authorization
      summary: Add scopes to an Access group
      operationId: add_access_group_scopes
      requestBody:
        description: Scopes to add to the Access group.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessGroupScopesRequest'
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
  /access-groups/{accessGroupId}/scopes/{scopeId}:
    get:
      tags:
      - Authorization
      summary: Get access group scope.
      operationId: get_access_group_scope
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroupScope'
    delete:
      tags:
      - Authorization
      summary: Remove the scope from the Access group.
      operationId: remove_access_group_scope
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    patch:
      tags:
      - Authorization
      summary: Update access group scope.
      operationId: update_access_group_scope
      requestBody:
        description: Access group scope to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessGroupScope'
        required: true
      responses:
        '200':
          description: The updated access group scope.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroupScope'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
    - $ref: '#/components/parameters/scopeIdParam'
  /access-groups/{accessGroupId}/scopes/{scopeId}/object-tags:
    post:
      tags:
      - Authorization
      summary: Add object tags to the access group scope.
      operationId: add_tags_to_scope
      requestBody:
        description: Object tags for the access group scope.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeTagsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeTagsResponse'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
    - $ref: '#/components/parameters/scopeIdParam'
  /access-groups/{accessGroupId}/scopes/{scopeId}/object-tags/delete:
    post:
      tags:
      - Authorization
      summary: Remove tags from the access group scope.
      operationId: delete_access_group_scope_object_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteScopeObjectTags'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeTagsResponse'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
    - $ref: '#/components/parameters/scopeIdParam'
  /access-groups/{accessGroupId}/scopes/{scopeId}/objects:
    post:
      tags:
      - Authorization
      summary: Add objects to the access group scope.
      operationId: add_objects_to_access_group_scope
      requestBody:
        description: Add objects to the access group scope.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedObjectsRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedObjectItemsResponse'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
    - $ref: '#/components/parameters/scopeIdParam'
  /access-groups/{accessGroupId}/scopes/{scopeId}/objects/delete:
    post:
      tags:
      - Authorization
      summary: Remove objects from the access group scope.
      operationId: delete_access_group_scope_objects
      requestBody:
        $ref: '#/components/requestBodies/DeleteObjects'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedObjectItemsResponse'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
    - $ref: '#/components/parameters/scopeIdParam'
  /access-groups/{accessGroupId}/scopes/{scopeId}/always_allowed_permissions:
    post:
      tags:
      - Authorization
      summary: Add always allowed permissions for given object type.
      operationId: add_always_allowed_permissions
      requestBody:
        description: Add always allowed permissions for given object type.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlwaysAllowedPermissionRequest'
        required: true
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroupScope'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
    - $ref: '#/components/parameters/scopeIdParam'
  /access-groups/{accessGroupId}/scopes/{scopeId}/always_allowed_permissions/delete:
    post:
      tags:
      - Authorization
      summary: Remove always allowed permissions for given object type.
      operationId: remove_always_allowed_permissions
      requestBody:
        description: Remove always allowed permissions for given object type.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlwaysAllowedPermissionRequest'
        required: true
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroupScope'
    parameters:
    - $ref: '#/components/parameters/accessGroupIdParam'
    - $ref: '#/components/parameters/scopeIdParam'
components:
  schemas:
    APIClassificationConfig:
      title: APIClassificationConfig
      type: object
      properties:
        version:
          type: string
          description: Api Classification Config Version.
          example: 1.0.0
        api_classification:
          type: array
          description: The classification of each APIs, either it is automation or
            not.
          items:
            $ref: '#/components/schemas/ApiClassificationObject'
      description: Api Classification Config.
    ASEDSourceLinkSourceParameters:
      required:
      - load_backup_path
      - source_id
      allOf:
      - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
      - type: object
        properties:
          external_file_path:
            maxLength: 1024
            minLength: 1
            type: string
            description: External file path.
          mount_base:
            maxLength: 87
            minLength: 1
            type: string
            description: The base mount point to use for the NFS mounts.
          load_backup_path:
            maxLength: 1024
            minLength: 1
            type: string
            description: Source database backup location.
          backup_server_name:
            maxLength: 1024
            minLength: 1
            type: string
            description: Name of the backup server instance.
          backup_host_user:
            maxLength: 1024
            minLength: 1
            type: string
            description: OS user for the host where the backup server is located.
          backup_host:
            maxLength: 1024
            minLength: 1
            type: string
            description: Host environment where the backup server is located.
          dump_credentials:
            maxLength: 1024
            minLength: 1
            type: string
            description: The password credential for the source DB user.
            x-dct-toolkit-credential-field: true
          source_host_user:
            maxLength: 1024
            minLength: 1
            type: string
            description: ID or user reference of the host OS user to use for linking.
          db_user:
            maxLength: 1024
            minLength: 1
            type: string
            description: The user name for the source DB user.
          db_password:
            maxLength: 256
            minLength: 1
            type: string
            description: Password for the database user.
            x-dct-toolkit-credential-field: true
          db_vault_username:
            maxLength: 256
            minLength: 1
            type: string
            description: Delphix display name for the vault user.
            example: my-vault
          db_vault:
            maxLength: 256
            minLength: 1
            type: string
            description: The name or reference of the vault from which to read the
              database credentials.
          db_hashicorp_vault_engine:
            maxLength: 256
            minLength: 1
            type: string
            description: Vault engine name where the credential is stored.
          db_hashicorp_vault_secret_path:
            maxLength: 256
            minLength: 1
            type: string
            description: Path in the vault engine where the credential is stored.
          db_hashicorp_vault_username_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Hashicorp vault key for the username in the key-value store.
          db_hashicorp_vault_secret_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Hashicorp vault key for the password in the key-value store.
          db_azure_vault_name:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure key vault name.
          db_azure_vault_username_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure vault key for the username in the key-value store.
          db_azure_vault_secret_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure vault key for the password in the key-value store.
          db_cyberark_vault_query_string:
            maxLength: 256
            minLength: 1
            type: string
            description: Query to find a credential in the CyberArk vault.
          staging_repository:
            maxLength: 1024
            minLength: 1
            type: string
            description: The SAP ASE instance on the staging environment that we want
              to use for validated sync.
          staging_host_user:
            maxLength: 1024
            minLength: 1
            type: string
            description: Information about the host OS user on the staging environment
              to use for linking.
          validated_sync_mode:
            type: string
            description: Information about the host OS user on the staging environment
              to use for linking.
            enum:
            - ENABLED
            - DISABLED
            default: ENABLED
          dump_history_file_enabled:
            type: boolean
            description: Specifies if Dump History File is enabled for backup history
              detection.
            default: false
          drop_and_recreate_devices:
            type: boolean
            description: If this parameter is set to true, it will drop the older
              devices and create new devices during manual sync operations instead
              of trying to remap the devices. This might increase the space utilization
              on Delphix Engine.
            default: false
          sync_strategy:
            type: string
            description: |
              Determines how the Delphix Engine will take a backup:
              * `latest_backup` - Use the most recent backup.
              * `new_backup` - Delphix will take a new backup of your source database.
              * `specific_backup` - Use a specific backup. Using this option requires setting `ase_backup_files`.
              Default is `new_backup`.
            enum:
            - latest_backup
            - new_backup
            - specific_backup
            default: new_backup
          ase_backup_files:
            type: array
            description: The location of the full backup of the source database to
              restore from. The backup should be present in the shared backup location
              for the source database.
            items:
              maxLength: 256
              minLength: 1
              type: string
          pre_validated_sync:
            type: array
            description: Operations to perform on the staging source before performing
              a validated sync.
            items:
              $ref: '#/components/schemas/SourceOperation'
          post_validated_sync:
            type: array
            description: Operations to perform on the staging source after performing
              a validated sync.
            items:
              $ref: '#/components/schemas/SourceOperation'
    AccessGroup:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          description: The Access group ID.
          readOnly: true
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The Access group name
        single_account:
          type: boolean
          description: Indicates that this Access group defines the permissions of
            a single account, and thus account and account tags cannot be modified.
            Instead create a new Access group to manage permissions of multiple accounts.
        account_ids:
          type: array
          description: List of accounts ids included individually (as opposed to added
            by tags) in the Access group.
          items:
            type: integer
            format: int64
        tagged_account_ids:
          type: array
          description: List of accounts ids included by tags in the Access group.
          readOnly: true
          items:
            type: integer
            format: int64
        account_tags:
          type: array
          description: List of account tags. Accounts matching any of these tags will
            be automatically added to the Access group.
          items:
            $ref: '#/components/schemas/Tag'
        scopes:
          type: array
          description: The Access group scopes.
          items:
            $ref: '#/components/schemas/AccessGroupScope'
      description: An Access group is the DCT mechanism to grant roles to accounts.
        Each account has its own Access Group which can be used to manage permissions
        for that account, and an unlimited number of other Access groups can be created
        to manage permissions by groups of accounts.
    AccessGroupAccountIdsRequest:
      required:
      - account_ids
      type: object
      properties:
        account_ids:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
    AccessGroupScope:
      required:
      - role_id
      type: object
      properties:
        id:
          type: string
          description: The Access group scope ID.
          readOnly: true
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The Access group scope name.
        role_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The Access group role id.
        scope_type:
          type: string
          description: Specifies the type of the scope. Scope of type SIMPLE would
            grant access to all DCT objects. Scope of type SCOPED would grant access
            to all objects based on objects and object-tags and permissions defined
            in linked role. Scope of type ADVANCED would grant access to DCT objects
            based on objects and object-tags and the individual permissions.
          example: SCOPED
          enum:
          - SIMPLE
          - SCOPED
          - ADVANCED
        object_tags:
          type: array
          description: The permissions in this access group scope will be granted
            to all DCT objects tagged with tags matching this property. This is cumulative
            with objects defined in the 'objects' property, and mutually exclusive
            with scope_type 'SIMPLE'.
          items:
            $ref: '#/components/schemas/ScopeTag'
        objects:
          type: array
          description: The permissions in this access group scope will be granted
            to all DCT objects with matching object id and object type, mutually exclusive
            with  scope_type 'SIMPLE'.
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
        always_allowed_permissions:
          type: array
          description: An array of always allowed permissions which can be used to
            specify object type and permission. An object with same object type and
            permission can not be added in 'objects' array.
          items:
            $ref: '#/components/schemas/AlwaysAllowedPermission'
      description: An Access group scope allows a role to be granted to accounts in
        the Access group.
    AccessGroupScopesRequest:
      required:
      - scopes
      type: object
      properties:
        scopes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccessGroupScope'
    AccessGroupUpdateParameters:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The Access group name
    Account:
      properties:
        id:
          type: integer
          description: Numeric ID of the Account.
          format: int64
          readOnly: true
        api_client_id:
          maxLength: 1024
          minLength: 1
          type: string
          description: The unique ID which is used to identify the identity of an
            API request. The web server (nginx) configuration must be configured so
            as to include the external ID as the value of the X_CLIENT_ID HTTP request
            header when requests are proxied. For OAuth2/JWT based authentication,
            this typically corresponds to a value extracted from the JWT, uniquely
            identifying the Account.
        first_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional first name for the Account.
        last_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional last name for the Account.
        email:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional email for the Account.
        username:
          maxLength: 1024
          minLength: 1
          type: string
          description: The username for username/password authentication. This can
            also be used to provide an optional logical name for the Account.
        ldap_principal:
          maxLength: 1024
          minLength: 1
          type: string
          description: This value will be used for linking this account to an LDAP
            user when authenticated with the same LDAP principal. When accounts authenticate
            with LDAP, an LDAP principal value is calculated based on the username,
            msad_domain_name, search_base and username_pattern.
        last_access_time:
          type: string
          description: last time this account made a (successful or failed) API call.
            Note that updates to this property are asynchronous and make take some
            time to be reflected.
          format: date-time
        creation_time:
          type: string
          description: Creation time of this Account. This value is null for accounts
            created prior to version 9.0.0 of the product.
          format: date-time
        api_key_expiry_time:
          type: string
          description: Expiration time of the API key, if null then API key will never
            expire.
          format: date-time
        effective_scopes:
          type: array
          description: Access group scopes associated with this account.
          items:
            $ref: '#/components/schemas/EffectiveScope'
        tags:
          type: array
          description: The tags to be created for this Account.
          example:
          - key: key-1
            value: value-1
          - key: key-2
            value: value-2
          items:
            $ref: '#/components/schemas/Tag'
        enabled:
          type: boolean
          description: Whether this account can be used to make API calls.
    AccountCreateParameter:
      properties:
        is_admin:
          type: boolean
          description: Whether the created account must be granted to admin role.
          default: false
        generate_api_key:
          type: boolean
          description: Whether an API key must be generated for this Account. This
            must be set if the Account will be used for API key based authentication,
            and unset otherwise.
          default: false
        api_client_id:
          maxLength: 1024
          minLength: 1
          type: string
          description: The unique ID which is used to identify the identity of an
            API request. The web server (nginx) configuration must be configured so
            as to include the external ID as the value of the X_CLIENT_ID HTTP request
            header when requests are proxied. If this value isn't set, the application
            will automatically generate one. For OAuth2/JWT based authentication,
            this typically corresponds to a value extracted from the JWT, uniquely
            identifying the Account.
        first_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional first name for the Account.
        last_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional last name for the Account.
        email:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional email for the Account.
        username:
          maxLength: 1024
          minLength: 1
          type: string
          description: The username for username/password authentication. This can
            also be used to provide an optional logical name for the Account.
        password:
          maxLength: 1024
          minLength: 1
          type: string
          description: The password for username/password authentication.
          x-dct-toolkit-credential-field: true
        ldap_principal:
          maxLength: 1024
          minLength: 1
          type: string
          description: This value will be used for linking this account to an LDAP
            user when authenticated with the same LDAP principal. When accounts authenticate
            with LDAP, an LDAP principal value is calculated based on the username,
            msad_domain_name, search_base and username_pattern.
        tags:
          type: array
          description: The tags to be created for this Account.
          example:
          - key: key-1
            value: value-1
          - key: key-2
            value: value-2
          items:
            $ref: '#/components/schemas/Tag'
    AccountCreateResponse:
      properties:
        token:
          type: string
          description: |
            The opaque token to use to authenticate for other API calls. The token must be included in all HTTP API calls
            in a request header named "Authorization", and prefixed with "apk " to denote that it is a proprietary API key format.
            For instance, if the token is "abc123", request must contain the following HTTP request header:
            "Authorization: apk abc123".
        id:
          type: integer
          description: Numeric ID of the created Account.
          format: int64
        first_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: First name of the created Account.
        last_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: Last name of the created Account.
        email:
          maxLength: 1024
          minLength: 1
          type: string
          description: Email of the created Account.
        username:
          maxLength: 1024
          minLength: 1
          type: string
          description: Username of the created Account.
        ldap_principal:
          maxLength: 1024
          minLength: 1
          type: string
          description: The LDAP principal of the created Account.
        tags:
          type: array
          description: The tags to be created for this Account.
          example:
          - key: key-1
            value: value-1
          - key: key-2
            value: value-2
          items:
            $ref: '#/components/schemas/Tag'
    AccountLoginParameter:
      properties:
        username:
          maxLength: 1024
          minLength: 1
          type: string
          description: Username of the account that needs to login
        password:
          maxLength: 1024
          minLength: 1
          type: string
          description: Password of the account that needs to login.
          x-dct-toolkit-credential-field: true
        api_key:
          maxLength: 1024
          minLength: 1
          type: string
          description: API key (without 'apk ' prefix) of the account that needs to
            login. When api_key is set then username/password would be ignored if
            provided.
          x-dct-toolkit-credential-field: true
    AccountUpdateParameter:
      properties:
        id:
          type: integer
          description: Numeric ID of the Account.
          format: int64
          readOnly: true
        api_client_id:
          maxLength: 1024
          minLength: 1
          type: string
          description: The unique ID which is used to identify the identity of an
            API request. The web server (nginx) configuration must be configured so
            as to include the external ID as the value of the X_CLIENT_ID HTTP request
            header when requests are proxied. For OAuth2/JWT based authentication,
            this typically corresponds to a value extracted from the JWT, uniquely
            identifying the Account.
        first_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional first name for the Account.
        last_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional last name for the Account.
        email:
          maxLength: 1024
          minLength: 1
          type: string
          description: An optional email for the Account.
        username:
          maxLength: 1024
          minLength: 1
          type: string
          description: The username for username/password authentication. This can
            also be used to provide an optional logical name for the Account.
        ldap_principal:
          maxLength: 1024
          minLength: 1
          type: string
          description: This value will be used for linking this account to an LDAP
            user when authenticated with the same LDAP principal. When accounts authenticate
            with LDAP, an LDAP principal value is calculated based on the username,
            msad_domain_name, search_base and username_pattern.
    AdditionalMountPoint:
      type: object
      properties:
        shared_path:
          maxLength: 2048
          minLength: 1
          type: string
          description: Relative path within the container of the directory that should
            be mounted.
          example: /
        mount_path:
          maxLength: 2048
          minLength: 1
          type: string
          description: Absolute path on the target environment were the filesystem
            should be mounted
          example: /work/ws1
        environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The entity ID of the environment on which the file system will
            be mounted.
          example: environment-123
      description: Specifies an additional location on which to mount a subdirectory
        of an AppData container.
    Algorithm:
      type: object
      properties:
        id:
          type: string
          description: The algorithm entity ID.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          type: string
          description: The name of this algorithm.
          example: Address
        description:
          type: string
          description: A description of this algorithm.
          nullable: true
        plugin_name:
          type: string
          description: The name of the plugin that this algorithm belongs to.
          example: dlpx-core
        plugin_id:
          type: string
          description: The id of the plugin that this algorithm belongs to.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        framework_name:
          type: string
          description: The name of the framework that this algorithm belongs to.
          example: Secure Lookup
        framework_id:
          type: string
          description: The id of the framework that this algorithm belongs to.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        engine_name:
          type: string
          description: The name of the origin engine that this algorithm belongs to.
          example: Compliance Engine 1
        engine_id:
          type: string
          description: The id of the origin engine that this algorithm belongs to.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        revision_hash:
          type: string
          description: The export revision hash of this algorithm from the source
            engine.
          example: 90f4dc6d405c
        config:
          type: object
          additionalProperties: true
          description: The configuration of this algorithm.
        create_date:
          type: string
          description: The date and time this algorithm was created.
          format: date-time
          example: 2022-11-30T08:51:34.148Z
        tags:
          type: array
          description: The tags of this algorithm.
          items:
            $ref: '#/components/schemas/Tag'
      description: A masking algorithm.
    AllObjectPermissionsResponse:
      type: object
      properties:
        object_permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionObject'
    AlwaysAllowedPermission:
      required:
      - object_type
      - permission
      type: object
      properties:
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    AlwaysAllowedPermissionRequest:
      required:
      - always_allowed_permissions
      type: object
      properties:
        always_allowed_permissions:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: An array of always allowed permissions
          items:
            $ref: '#/components/schemas/AlwaysAllowedPermission'
    ApiClassificationObject:
      type: object
      properties:
        api_method:
          type: string
          description: HTTP method of the API.
          example: POST
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
        path:
          maxLength: 256
          minLength: 1
          type: string
          description: context path of the API.
          example: /vdb-groups
        is_automation:
          type: boolean
          description: Either this API is automation or not.
          example: true
        start_date:
          type: string
          description: The start date and time from when this api's is_automation
            definition has changed.
          format: date-time
        end_date:
          type: string
          description: The end date and time from when this api's is_automation definition
            has changed.
          format: date-time
      description: An API classification object which classifies APIs as automation
        or governance.
    ApiUsageData:
      required:
      - api_count
      properties:
        api_endpoint:
          minLength: 1
          type: string
          description: API called.
          example: /v2/management/engines
        api_method:
          minLength: 1
          type: string
          description: HTTP method for API called.
          example: GET
        api_count:
          type: integer
          description: Count of API calls over the requested timeframe.
          format: int64
          example: 4200
        kind:
          type: string
          description: Whether the API calls are of kind automation or governance
          example: automation
          enum:
          - automation
          - governance
        client_name:
          type: string
          description: Name of the api client that called the API endpoint
          example: client-123
        user_agent:
          type: string
          description: Version of the api client that called the API endpoint
          example: 1.0-beta
        dct_version:
          type: string
          description: DCT version at the time of api call
          example: 2.2.0
    ApikeyRegenerateParameter:
      required:
      - token
      properties:
        token:
          type: string
          description: Current api key for the account
    AppDataDSourceLinkSourceParameters:
      required:
      - environment_user
      - parameters
      - sync_parameters
      allOf:
      - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
      - type: object
        properties:
          link_type:
            type: string
            description: |
              The type of link to create. Default is AppDataDirect.
              * `AppDataDirect` - Represents the AppData specific parameters of a link request for a source directly replicated into the Delphix Engine.
              * `AppDataStaged` - Represents the AppData specific parameters of a link request for a source with a staging source.
            enum:
            - AppDataDirect
            - AppDataStaged
            default: AppDataDirect
          staging_mount_base:
            maxLength: 256
            type: string
            description: The base mount point for the NFS mount on the staging environment
              [AppDataStaged only].
          staging_environment:
            type: string
            description: The environment used as an intermediate stage to pull data
              into Delphix [AppDataStaged only].
          staging_environment_user:
            type: string
            description: The environment user used to access the staging environment
              [AppDataStaged only].
          environment_user:
            maxLength: 256
            minLength: 1
            type: string
            description: The OS user to use for linking.
          excludes:
            type: array
            description: List of subdirectories in the source to exclude when syncing
              data. These paths are relative to the root of the source directory.
              [AppDataDirect only]
            items:
              maxLength: 1024
              minLength: 1
              type: string
          follow_symlinks:
            type: array
            description: List of symlinks in the source to follow when syncing data.
              These paths are relative to the root of the source directory. All other
              symlinks are preserved. [AppDataDirect only]
            items:
              maxLength: 1024
              minLength: 1
              type: string
          parameters:
            type: object
            additionalProperties: true
            description: The JSON payload conforming to the DraftV4 schema based on
              the type of application data being manipulated.
          sync_parameters:
            type: object
            additionalProperties: true
            description: The JSON payload conforming to the snapshot parameters definition
              in a LUA toolkit or platform plugin.
    AuditLogsSummary:
      type: object
      properties:
        account_id:
          type: integer
          format: int64
        account_first_name:
          maxLength: 256
          minLength: 1
          type: string
        account_last_name:
          maxLength: 256
          minLength: 1
          type: string
        vdb_refreshes:
          type: integer
          description: The number of VDB refreshes performed by the account.
          format: int32
        masking_jobs:
          type: integer
          description: The number of compliance jobs executed by the account.
          format: int32
      description: The summary of actions performed by an account.
    AuditLogsSummaryTotals:
      type: object
      properties:
        total_vdb_refreshes:
          type: integer
          format: int32
        total_masking_jobs:
          type: integer
          format: int32
      description: The global totals of different actions performed across all accounts.
    AutoTaggingConfig:
      title: AutoTaggingConfig
      type: object
      properties:
        enable_virtualization_dataset_groups:
          type: boolean
          description: Include dataset group names as tags for dSources, VDBs, and
            vCDBs (key 'dlpx-dataset-group').
          example: true
        enable_masking_environments:
          type: boolean
          description: Include masking environment names as tags for masking Jobs
            and Connectors (key 'dlpx-environment').
          example: true
        enable_masking_applications:
          type: boolean
          description: Include masking app names as tags for masking Jobs and Connectors
            (key 'dlpx-application').
          example: true
        enable_engine_name:
          type: boolean
          description: Include the engine name as a tag on discovered objects (key
            'dlpx-engine').
          example: true
        custom_tags:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: List of custom tags to add to discovered objects.
          items:
            $ref: '#/components/schemas/Tag'
      description: Configuration settings for auto tagging.
    BaseDSourceLinkSourceParameters:
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: Name of the dSource to be created.
        source_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the source to link.
        group_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the dataset group where this dSource should belong to.
        description:
          maxLength: 1024
          minLength: 1
          type: string
          description: The notes/description for the dSource.
        log_sync_enabled:
          type: boolean
          description: True if LogSync should run for this database.
          default: false
        sync_policy_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the SnapSync policy for the dSource.
          example: snapshot-123
        retention_policy_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the Retention policy for the dSource.
          example: retention-policy-123
        make_current_account_owner:
          type: boolean
          description: Whether the account creating this reporting schedule must be
            configured as owner of the reporting schedule.
          default: true
        tags:
          maxItems: 1000
          minItems: 1
          type: array
          description: The tags to be created for dSource.
          items:
            $ref: '#/components/schemas/Tag'
        ops_pre_sync:
          type: array
          description: Operations to perform before syncing the created dSource. These
            operations can quiesce any data prior to syncing.
          items:
            $ref: '#/components/schemas/SourceOperation'
        ops_post_sync:
          type: array
          description: Operations to perform after syncing a created dSource.
          items:
            $ref: '#/components/schemas/SourceOperation'
    BaseProvisionVDBParameters:
      allOf:
      - $ref: '#/components/schemas/VirtualDatasetHooks'
      - type: object
        properties:
          target_group_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the group into which the VDB will be provisioned.
              If unset, a group is selected randomly on the Engine.
            example: group-123
          name:
            maxLength: 256
            minLength: 1
            type: string
            description: The unique name of the provisioned VDB within a group. If
              unset, a name is randomly generated.
            example: my-test-vdb
          database_name:
            maxLength: 256
            minLength: 1
            type: string
            description: The name of the database on the target environment. Defaults
              to the value of the name property.
            example: my-test-database
          cdb_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the container database (CDB) to provision an Oracle
              Multitenant database into. This corresponds to a CDB or VCDB API object.
              When this is not set, a new vCDB will be provisioned.
            example: ORACLE_SINGLE_CONFIG-376
            x-dct-toolkit-subcommand: oracle
          cluster_node_ids:
            minItems: 1
            type: array
            description: The cluster node ids, name or addresses for this provision
              operation (Oracle RAC Only).
            example:
            - ORACLE_CLUSTER_NODE-1
            items:
              maxLength: 256
              minLength: 1
              type: string
            x-dct-toolkit-subcommand: oracle
          cluster_node_instances:
            minItems: 1
            type: array
            description: The cluster node instances details for this provision operation(Oracle
              RAC Only).This property is mutually exclusive with cluster_node_ids.
            example:
            - node_reference: ORACLE_CLUSTER_NODE-1
              instance_number: 1
              instance_name: cluster_instance1
            items:
              $ref: '#/components/schemas/ClusterNodeInstance'
            x-dct-toolkit-subcommand: oracle
          truncate_log_on_checkpoint:
            type: boolean
            description: Whether to truncate log on checkpoint (ASE only).
            example: true
            x-dct-toolkit-subcommand: sybase
          os_username:
            maxLength: 256
            minLength: 1
            type: string
            description: The name of the privileged user to run the provision operation
              (Oracle Only).
            example: os-user-x
            x-dct-toolkit-subcommand: oracle
          os_password:
            maxLength: 256
            minLength: 1
            type: string
            description: The password of the privileged user to run the provision
              operation (Oracle Only).
            example: os-user-secret-password
            x-dct-toolkit-credential-field: true
            x-dct-toolkit-subcommand: oracle
          environment_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the target environment where to provision the VDB.
              If repository_id unambigously identifies a repository, this is unnecessary
              and ignored. Otherwise, a compatible repository is randomly selected
              on the environment.
            example: environment-123
          environment_user_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The environment user ID to use to connect to the target environment.
            example: environment-user-123
          repository_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the target repository where to provision the VDB.
              A repository typically corresponds to a database installation (Oracle
              home, database instance, ...). Setting this attribute implicitly determines
              the environment where to provision the VDB.
            example: oracle-home-123
          auto_select_repository:
            type: boolean
            description: Option to automatically select a compatible environment and
              repository. Mutually exclusive with repository_id.
            example: true
          vdb_restart:
            type: boolean
            description: Indicates whether the Engine should automatically restart
              this virtual source when target host reboot is detected.
            example: true
          template_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the target VDB Template (Oracle and MSSql Only).
            example: template-123
          auxiliary_template_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the configuration template to apply to the auxiliary
              container database. This is only relevant when provisioning a Multitenant
              pluggable database into an existing CDB, i.e when the cdb_id property
              is set.(Oracle Only)
            example: aux-template-123
            x-dct-toolkit-subcommand: oracle
          file_mapping_rules:
            maxLength: 131072
            minLength: 1
            type: string
            description: Target VDB file mapping rules (Oracle Only). Rules must be
              line separated (\n or \r) and each line must have the format "pattern:replacement".
              Lines are applied in order.
            example: |-
              /datafile/dbdhcp3/oradata/dbdhcp3:/data
              /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
            x-dct-toolkit-subcommand: oracle
          oracle_instance_name:
            maxLength: 15
            minLength: 1
            pattern: ^[a-zA-Z0-9_]+$
            type: string
            description: Target VDB SID name (Oracle Only).
            example: dbdhcp2
            x-dct-toolkit-subcommand: oracle
          unique_name:
            maxLength: 30
            minLength: 1
            pattern: ^[a-zA-Z0-9_\$#]+$
            type: string
            description: Target VDB db_unique_name (Oracle Only).
            example: dbdhcp2
            x-dct-toolkit-subcommand: oracle
          vcdb_name:
            maxLength: 256
            minLength: 1
            pattern: ^[a-zA-Z0-9_]+$
            type: string
            description: When provisioning an Oracle Multitenant vCDB (when the cdb_id
              property is not set), the name of the provisioned vCDB (Oracle Multitenant
              Only).
            example: VCCD_6QQ
            x-dct-toolkit-subcommand: oracle
          vcdb_database_name:
            maxLength: 8
            minLength: 1
            type: string
            description: When provisioning an Oracle Multitenant vCDB (when the cdb_id
              property is not set), the database name of the provisioned vCDB. Defaults
              to the value of the vcdb_name property. (Oracle Multitenant Only).
            example: VCCD_6QQ
            x-dct-toolkit-subcommand: oracle
          mount_point:
            maxLength: 256
            minLength: 1
            type: string
            description: Mount point for the VDB (Oracle, ASE, AppData).
            example: /var/mnt
          open_reset_logs:
            type: boolean
            description: Whether to open the database after provision (Oracle Only).
            example: true
            x-dct-toolkit-subcommand: oracle
          snapshot_policy_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the snapshot policy for the VDB.
            example: snapshot-123
          retention_policy_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the retention policy for the VDB.
            example: retention-policy-123
          recovery_model:
            type: string
            description: Recovery model of the source database (MSSql Only).
            example: FULL
            enum:
            - FULL
            - SIMPLE
            - BULK_LOGGED
            x-dct-toolkit-subcommand: mssql
          pre_script:
            maxLength: 1024
            minLength: 1
            type: string
            description: PowerShell script or executable to run prior to provisioning
              (MSSql Only).
            example: C:\Program Files\Delphix\scripts\myscript.ps1
            x-dct-toolkit-subcommand: mssql
          post_script:
            maxLength: 1024
            minLength: 1
            type: string
            description: PowerShell script or executable to run after provisioning
              (MSSql Only).
            example: C:\Program Files\Delphix\scripts\myscript.ps1
            x-dct-toolkit-subcommand: mssql
          cdc_on_provision:
            type: boolean
            description: Option to enable change data capture (CDC) on both the provisioned
              VDB and subsequent snapshot-related operations (e.g. refresh, rewind)
              (MSSql Only).
            example: true
            x-dct-toolkit-subcommand: mssql
          online_log_size:
            minimum: 4
            type: integer
            description: Online log size in MB (Oracle Only).
            example: 4
            x-dct-toolkit-subcommand: oracle
          online_log_groups:
            minimum: 2
            type: integer
            description: Number of online log groups (Oracle Only).
            example: 2
            x-dct-toolkit-subcommand: oracle
          archive_log:
            type: boolean
            description: Option to create a VDB in archivelog mode (Oracle Only).
            example: true
            x-dct-toolkit-subcommand: oracle
          new_dbid:
            type: boolean
            description: Option to generate a new DB ID for the created VDB (Oracle
              Only).
            example: true
            x-dct-toolkit-subcommand: oracle
          masked:
            type: boolean
            description: Indicates whether to mark this VDB as a masked VDB.
            example: true
          listener_ids:
            type: array
            description: The listener IDs for this provision operation (Oracle Only).
            example:
            - listener-123
            - listener-456
            items:
              maxLength: 256
              minLength: 1
              type: string
            x-dct-toolkit-subcommand: oracle
          custom_env_vars:
            type: object
            additionalProperties:
              maxLength: 4096
              minLength: 1
              type: string
            description: Environment variable to be set when the engine creates a
              VDB. See the Engine documentation for the list of allowed/denied environment
              variables and rules about substitution.
            example:
              MY_ENV_VAR1: $ORACLE_HOME
              MY_ENV_VAR2: $CRS_HOME/after
          custom_env_files:
            type: array
            description: Environment files to be sourced when the Engine creates a
              VDB. This path can be followed by parameters. Paths and parameters are
              separated by spaces.
            example:
            - /export/home/env_file_1
            - /export/home/env_file_2
            items:
              maxLength: 4096
              minLength: 1
              type: string
          oracle_rac_custom_env_files:
            type: array
            description: Environment files to be sourced when the Engine creates an
              Oracle RAC VDB. This path can be followed by parameters. Paths and parameters
              are separated by spaces.
            example:
            - node_id: ORACLE_CLUSTER_NODE-1
              path_parameters: /export/home/env_file_1
            items:
              $ref: '#/components/schemas/OracleRacCustomEnvFile'
            x-dct-toolkit-subcommand: oracle
          oracle_rac_custom_env_vars:
            type: array
            description: Environment variable to be set when the engine creates an
              Oracle RAC VDB. See the Engine documentation for the list of allowed/denied
              environment variables and rules about substitution.
            example:
            - node_id: ORACLE_CLUSTER_NODE-1
              name: MY_ENV_VAR1
              value: $CRS_HOME/after
            items:
              $ref: '#/components/schemas/OracleRacCustomEnvVar'
            x-dct-toolkit-subcommand: oracle
          parentTdeKeystorePath:
            maxLength: 1024
            minLength: 1
            type: string
            description: Path to a copy of the parent's Oracle transparent data encryption
              keystore on the target host. Required to provision from snapshots containing
              encrypted database files. (Oracle Multitenant Only)
            example: /foo/bar/tde
            x-dct-toolkit-subcommand: oracle
          parent_tde_keystore_password:
            maxLength: 1024
            minLength: 1
            type: string
            description: The password of the keystore specified in parentTdeKeystorePath.
              (Oracle Multitenant Only)
            example: password
            x-dct-toolkit-credential-field: true
            x-dct-toolkit-subcommand: oracle
          tde_exported_key_file_secret:
            maxLength: 1024
            minLength: 1
            type: string
            description: Secret to be used while exporting and importing vPDB encryption
              keys if Transparent Data Encryption is enabled on the vPDB. (Oracle
              Multitenant Only)
            example: secret
            x-dct-toolkit-subcommand: oracle
          tde_key_identifier:
            maxLength: 256
            minLength: 1
            type: string
            description: ID of the key created by Delphix. (Oracle Multitenant Only)
            example: tde-indentifier
            x-dct-toolkit-subcommand: oracle
          target_vcdb_tde_keystore_path:
            maxLength: 1024
            minLength: 1
            type: string
            description: Path to the keystore of the target vCDB. (Oracle Multitenant
              Only)
            example: /foo/cdb/tde
            x-dct-toolkit-subcommand: oracle
          cdb_tde_keystore_password:
            maxLength: 1024
            minLength: 1
            type: string
            description: The password for the Transparent Data Encryption keystore
              associated with the CDB. (Oracle Multitenant Only)
            example: cdb-password
            x-dct-toolkit-credential-field: true
            x-dct-toolkit-subcommand: oracle
          vcdb_tde_key_identifier:
            maxLength: 256
            minLength: 1
            type: string
            description: ID of the key created by Delphix. (Oracle Multitenant Only)
            example: vcdb-identifier
            x-dct-toolkit-subcommand: oracle
          appdata_source_params:
            type: object
            additionalProperties: true
            description: The JSON payload conforming to the DraftV4 schema based on
              the type of application data being manipulated.
            example:
              param: value
            x-dct-toolkit-subcommand: appdata
          additional_mount_points:
            type: array
            description: Specifies additional locations on which to mount a subdirectory
              of an AppData container.
            nullable: true
            example:
            - shared_path: /
              mount_path: /work
              environment_id: environment-123
            items:
              $ref: '#/components/schemas/AdditionalMountPoint'
            x-dct-toolkit-subcommand: appdata
          appdata_config_params:
            type: object
            additionalProperties: true
            description: The list of parameters specified by the source config schema
              in the toolkit
            nullable: true
            example:
              option: value
            x-dct-toolkit-subcommand: appdata
          config_params:
            type: object
            additionalProperties: true
            description: Database configuration parameter overrides.
            nullable: true
            example:
              processes: 150
          privileged_os_user:
            maxLength: 32
            pattern: ^$|^[a-zA-Z_][a-zA-Z0-9_\-]+[$]?$
            type: string
            description: This privileged unix username will be used to create the
              VDB. Leave this field blank if you do not want to use privilege elevation.
              The unix privileged username should begin with a letter or an underscore,
              followed by letters, digits, underscores, or dashes. They can end with
              a dollar sign (postgres only).
            x-dct-toolkit-subcommand: postgres
          postgres_port:
            maximum: 65536
            minimum: 1
            type: integer
            description: Port number for Postgres target database (postgres only).
            x-dct-toolkit-subcommand: postgres
          config_settings_stg:
            type: array
            description: Custom Database-Level config settings (postgres only).
            items:
              $ref: '#/components/schemas/ConfigSettingsStg'
            x-dct-toolkit-subcommand: postgres
          vcdb_restart:
            type: boolean
            description: Indicates whether the Engine should automatically restart
              this vCDB when target host reboot is detected. If vdb_restart property
              value is not explicitly set and vcdb_restart is set as false - the vdb_restart
              property is defaulted to false.
            example: true
            x-dct-toolkit-subcommand: oracle
          mssql_failover_drive_letter:
            maxLength: 1
            minLength: 1
            type: string
            description: Base drive letter location for mount points. (MSSql Only).
            x-dct-toolkit-subcommand: mssql
          tags:
            maxItems: 1000
            minItems: 1
            type: array
            description: The tags to be created for VDB.
            items:
              $ref: '#/components/schemas/Tag'
          invoke_datapatch:
            type: boolean
            description: Whether to invoke datapatch during provisioning (Oracle Only).
            example: false
            x-dct-toolkit-subcommand: oracle
    Bookmark:
      type: object
      properties:
        id:
          type: string
          description: The Bookmark object entity ID.
          readOnly: true
          example: bookmark-123
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The user-defined name of this bookmark.
          example: my-bookmark-123
        creation_date:
          type: string
          description: The date and time that this bookmark was created.
          format: date-time
          readOnly: true
          example: 2021-07-04T08:51:34.148Z
        data_timestamp:
          type: string
          description: The timestamp for the data that the bookmark refers to.
          format: date-time
          readOnly: true
          example: 2021-06-03T08:51:34.148Z
        timeflow_id:
          type: string
          description: The timeflow for the snapshot that the bookmark was created
            of.
          example: 1-TIMEFLOW-1
        location:
          type: string
          description: The location for the data that the bookmark refers to.
          example: '200000'
        vdb_ids:
          type: array
          description: The list of VDB IDs associated with this bookmark.
          example:
          - vdb-123
          - vdb-456
          items:
            type: string
        dsource_ids:
          type: array
          description: The list of dSource IDs associated with this bookmark.
          example:
          - dsource-123
          - dsource-456
          items:
            type: string
        vdb_group_id:
          type: string
          description: The ID of the VDB group on which bookmark is created.
          example: vdb-group-123
        vdb_group_name:
          type: string
          description: The name of the VDB group on which bookmark is created.
          example: my-vdb-group
        vdbs:
          type: array
          description: The list of VDB IDs and VDB names associated with this bookmark.
          items:
            $ref: '#/components/schemas/BookmarkVDBs'
        dsources:
          type: array
          description: The list of dSource IDs and dSource names associated with this
            bookmark.
          items:
            $ref: '#/components/schemas/BookmarkDSources'
        retention:
          type: integer
          description: The retention policy for this bookmark, in days. A value of
            -1 indicates the bookmark should be kept forever. Deprecated in favor
            of expiration.
          format: int64
          example: 365
          deprecated: true
        expiration:
          type: string
          description: The expiration for this bookmark. When unset, indicates the
            bookmark is kept forever except for bookmarks of replicated datasets.
            Expiration cannot be set for bookmarks of replicated datasets.
          format: date
          example: 2021-07-04T00:00:00Z
        status:
          type: string
          description: A message with details about operation progress or state of
            this bookmark.
          nullable: true
          readOnly: true
          example: RESTORED
        replicated_dataset:
          type: boolean
          description: Whether this bookmark is created from a replicated dataset
            or not.
        bookmark_source:
          type: string
          description: Source of the bookmark, default is DCT. In case of self-service
            bookmarks, this value would be ENGINE.
          enum:
          - DCT
          - ENGINE
        bookmark_status:
          type: string
          description: Status of the bookmark. It can have INACTIVE value for engine
            bookmarks only. If this value is INACTIVE then ss_bookmark_errors would
            have the list of associated errors.
          enum:
          - ACTIVE
          - INACTIVE
        ss_data_layout_id:
          type: string
          description: Data-layout Id for engine-managed bookmarks.
        ss_bookmark_reference:
          type: string
          description: Engine reference of the self-service bookmark.
        ss_bookmark_errors:
          type: array
          description: List of errors if any, during bookmark creation in DCT from
            self-service.
          example:
          - No snapshots found for JS_BOOKMARK-1 at timestamp 2021-07-04T08:51:34.148
          items:
            type: string
        bookmark_type:
          type: string
          description: Type of the bookmark, either PUBLIC or PRIVATE.
          example: PRIVATE
          enum:
          - PUBLIC
          - PRIVATE
          default: PRIVATE
        tags:
          type: array
          description: The tags to be created for this Bookmark.
          example:
          - key: key-1
            value: value-1
          - key: key-2
            value: value-2
          items:
            $ref: '#/components/schemas/Tag'
      description: A Data Control Tower object that references points in time for
        one or more datasets.
    BookmarkCompatibleRepositoryRequest:
      required:
      - bookmark_id
      type: object
      properties:
        bookmark_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the bookmark from which to execute the operation.
            The bookmark must contain only one VDB.
        environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID or name of the target environment.
          example: 1-UNIX_HOST_ENVIRONMENT-1
    BookmarkCreateParameters:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The user-defined name of this bookmark.
          example: my-bookmark-123
        vdb_ids:
          uniqueItems: true
          type: array
          description: The IDs of the VDBs to create the Bookmark on. This parameter
            is mutually exclusive with snapshot_ids and timeflow_ids.
          example:
          - vdb-123
          - vdb-456
          items:
            type: string
        vdb_group_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the VDB group to create the Bookmark on. This parameter
            is mutually exclusive with vdb_ids.
          example: vdb-group-123
        snapshot_ids:
          uniqueItems: true
          type: array
          description: |
            The IDs of the snapshots that will be part of the Bookmark. This parameter is mutually exclusive with vdb_ids, timestamp, timestamp_in_database_timezone, location and timeflow_ids.
          example:
          - snapshot-1
          - snapshot-2
          items:
            type: string
        timeflow_ids:
          uniqueItems: true
          type: array
          description: The array of timeflow Id. Only allowed to set when timestamp,
            timestamp_in_database_timezone or location is provided.
          example:
          - timeflow-1
          - timeflow-2
          items:
            type: string
        timestamp:
          type: string
          description: The point in time from which to execute the operation. Mutually
            exclusive with snapshot_ids, timestamp_in_database_timezone and location.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        timestamp_in_database_timezone:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{0,3})?'
          type: string
          description: The point in time from which to execute the operation, expressed
            as a date-time in the timezone of the source database. Mutually exclusive
            with snapshot_ids, timestamp and location.
          example: 2021-08-14T14:55:20.507Z
        location:
          maxLength: 256
          minLength: 1
          type: string
          description: The location to create bookmark from. Mutually exclusive with
            snapshot_ids, timestamp, and timestamp_in_database_timezone.
          example: '112233'
        retention:
          type: integer
          description: The retention policy for this bookmark, in days. A value of
            -1 indicates the bookmark should be kept forever. Deprecated in favor
            of expiration and retain_forever.
          format: int64
          example: 365
          deprecated: true
        expiration:
          type: string
          description: The expiration for this bookmark. Mutually exclusive with retention
            and retain_forever.
          format: date
          example: 2021-07-04T00:00:00Z
        retain_forever:
          type: boolean
          description: Indicates that the bookmark should be retained forever.
          example: false
        tags:
          type: array
          description: The tags to be created for this Bookmark.
          example:
          - key: key-1
            value: value-1
          - key: key-2
            value: value-2
          items:
            $ref: '#/components/schemas/Tag'
        bookmark_type:
          type: string
          description: Type of the bookmark, either PUBLIC or PRIVATE.
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
          default: PRIVATE
        make_current_account_owner:
          type: boolean
          description: Whether the account creating this bookmark must be configured
            as owner of the bookmark.
          default: true
        inherit_parent_vdb_tags:
          type: boolean
          description: This field has been deprecated in favour of new field 'inherit_parent_tags'.
          deprecated: true
          default: false
        inherit_parent_tags:
          type: boolean
          description: Whether this bookmark should inherit tags from the parent dataset.
          default: false
      description: A Data Control Tower object that references points in time for
        one or more datasets.
    BookmarkDSources:
      type: object
      properties:
        dsource_id:
          type: string
          description: The dSource id.
          example: dsource-id-1
        dsource_name:
          type: string
          description: The dSource name.
          example: dsource-name
      description: dSource id and name associated with bookmark.
    BookmarkVDBs:
      type: object
      properties:
        vdb_id:
          type: string
          description: The VDB id.
          example: vdb-id-1
        vdb_name:
          type: string
          description: The VDB name.
          example: vdb-name
      description: VDB id and name associated with bookmark.
    BundleUploadEvent:
      type: object
      properties:
        id:
          type: string
          description: The ID of the bundle generation event.
        generationStartTime:
          type: string
          description: The time when the bundle generation started.
          format: date-time
        generationEndTime:
          type: string
          description: The time when the bundle generation ended.
          format: date-time
        allGapsFilled:
          type: boolean
          description: True if the bundle was fully built, False if it was trimmed
            short due to constraints
        dataDates:
          type: array
          description: The list of dates for which the data is included in the bundle.
          items:
            type: string
            format: date
      description: Bundle Upload Event
    CDB:
      type: object
      properties:
        id:
          type: string
          description: The CDB object entity ID.
          example: 1-CDB-1
        name:
          type: string
          description: The name of this CDB.
          nullable: true
          example: Oracle CDB
        namespace_id:
          type: string
          description: The namespace id of this CDB.
          example: 1-NAMESPACE-1
        namespace_name:
          type: string
          description: The namespace name of this CDB.
          example: test-engine-1
        is_replica:
          type: boolean
          description: Is this a replicated object.
          example: true
        database_version:
          type: string
          description: The version of this CDB.
          nullable: true
          example: 10.2.0.5.0
        environment_id:
          type: string
          description: A reference to the Environment that hosts this CDB.
          nullable: true
          example: 1-ENVIRONMENT-1
        size:
          type: integer
          description: The total size of the data files used by this CDB, in bytes.
          format: int64
          nullable: true
          example: 339292672
        jdbc_connection_string:
          type: string
          description: The JDBC connection URL for this CDB.
          nullable: true
          example: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.43.47.94)(PORT=1521))(CONNECT_DATA=(UR=A)(SID=production01)))
          deprecated: true
        engine_id:
          type: string
          description: A reference to the Engine that this CDB belongs to.
          example: engine-12
        is_linked:
          type: boolean
          description: Whether this CDB is linked or not.
          example: false
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        group_name:
          type: string
          description: The name of the group containing this CDB.
          nullable: true
          example: Untitled
        status:
          type: string
          description: The runtime status of the vCDB.
          nullable: true
          example: RUNNING
        enabled:
          type: boolean
          description: Whether the CDB is enabled or not.
          example: true
        instance_name:
          type: string
          description: The instance name of this single instance CDB.
          example: CDBSID
        instance_number:
          type: integer
          description: The instance number of this single instance CDB.
        instances:
          type: array
          items:
            $ref: '#/components/schemas/OracleRACDatabaseInstance'
        oracle_services:
          type: array
          items:
            $ref: '#/components/schemas/OracleService'
        repository_id:
          type: string
          description: The repository id of this CDB.
          example: 1-ORACLE_INSTALL-1
      description: The Delphix representation of an Oracle Container Database.
    ChangeLicenseParameters:
      title: ChangeLicenseParameters
      required:
      - tier
      type: object
      properties:
        tier:
          $ref: '#/components/schemas/LicenseTier'
      description: Parameters to change the DCT license.
    ChangePasswordParameter:
      required:
      - old_password
      properties:
        old_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: Old password that needs to be changed for the Account.
          x-dct-toolkit-credential-field: true
        new_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: New password that needs to be set for the Account. Set this
            to null for unsetting the current password. Not including this property
            also results in unsetting of the current password.
          x-dct-toolkit-credential-field: true
    Classifier:
      type: object
      properties:
        id:
          type: string
          description: The classifier ID.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          type: string
          description: The name of this classifier.
          example: City
        framework:
          type: string
          description: The framework of this classifier.
          example: REGEX
          enum:
          - REGEX
          - LIST
          - PATH
          - DATA_TYPE
        description:
          type: string
          description: A description of this classifier.
          nullable: true
        data_class_id:
          type: string
          description: The id of the data class associated with this classifier.
          example: 6b5c4d3e-2a1b-4c3d-5e6f-7a8b9c0d1e2f
        data_class_name:
          type: string
          description: The name of the data class associated with this classifier.
          example: My Domain
        config:
          type: object
          additionalProperties: true
          description: The configuration of this algorithm.
        engine_id:
          type: string
          description: The ID of the engine this classifier originated from.
          nullable: true
        engine_name:
          type: string
          description: The name of the engine this classifier originated from.
          nullable: true
        tags:
          type: array
          description: The tags of this classifier.
          items:
            $ref: '#/components/schemas/Tag'
      description: A classifier.
    ClusterNodeInstance:
      required:
      - instance_name
      - instance_number
      - node_reference
      type: object
      properties:
        node_reference:
          maxLength: 256
          minLength: 1
          minItems: 1
          type: string
          description: The cluster node id, name or addresses for this provision operation
        instance_number:
          type: integer
          description: The instance number for this provision operation
        instance_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The instance name for this provision operation
    CommvaultConnectivityCheckParameters:
      title: CommvaultConnectivityCheckParameters
      required:
      - commserve_host_name
      - environment_id
      - environment_user_id
      - source_client_name
      - staging_client_name
      type: object
      properties:
        environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the target environment to test Commvault connectivity
            from.
          example: 1-ENVIRONMENT-1
        environment_user_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the environment user.
          example: USER-1
        commserve_host_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The hostname of the CommServe server to connect to.
          example: commserve.delphix.com
        source_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the Source Client in CommServe.
          example: source_client.delphix.com
        staging_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the Staging Client in CommServe.
          example: staging_client.delphix.com
      description: Parameters to Tests CommServe host and staging client connectivity
        on an environment.
    ComplianceApplicationSetting:
      title: ComplianceApplicationSetting
      type: object
      properties:
        id:
          type: string
          description: The ID of the application setting.
          example: 5835c60d-2155-1234-8c54-b4dff23d89c5
        group:
          type: string
          description: The group of the application setting.
          example: general
        name:
          type: string
          description: The name of the application setting.
          example: PasswordResetLinkDuration
        value:
          type: string
          description: The value of the application setting.
          example: '5'
      description: An application setting of a compliance engine.
    ComplianceJob:
      type: object
      properties:
        id:
          type: string
          description: The Masking Job entity ID.
          readOnly: true
          example: masking-job-1
        name:
          type: string
          description: The name of this Masking Job.
          example: My favorite MaskingJob
        rule_set_id:
          type: string
          description: The ID of the Rule Set used by this Masking Job (Standard Job
            only). For hyperscale jobs, see dataset_id.
          example: uuid
        rule_set_name:
          type: string
          description: The name of the Rule Set used by this Masking Job (Standard
            Job only). For hyperscale jobs, see dataset_id.
          example: my rule set
        connector_type:
          type: string
          description: The type of data being masked by this Job. If the Masking Job
            is masking a database this is the type of the database (Standard Job only).
          example: MARIADB
        is_on_the_fly_masking:
          type: boolean
          description: Whether this is an on-the-fly masking job (Standard Job only).
          example: true
        creation_date:
          type: string
          description: The date this MaskingJob was created (Standard Job only).
          format: date-time
          example: 2022-11-30T08:51:34.148Z
        last_completed_execution_date:
          type: string
          description: The date this ComplianceJob was last executed to completion.
          format: date-time
          example: 2022-11-30T09:51:34.148Z
        last_execution_status:
          $ref: '#/components/schemas/ExecutionStatus'
        last_execution_id:
          type: string
          description: The ID of this ComplianceJob's last execution.
          example: 00e38996-7da2-4827-8f3e-0503234de537
        last_execution_start_time:
          type: string
          description: The start time of the most recent execution of this compliance
            job.
          format: date-time
          example: 2022-11-30T09:51:34.148Z
        last_execution_run_time:
          type: integer
          description: The run time of the most recent execution of this compliance
            job in ms.
          format: int64
          example: 31000
        connector_username:
          type: string
          description: The username of the Connector used by the ComplianceJob (Standard
            Job only). For hyperscale jobs, see the connector of the dataset.
          nullable: true
          example: user123
        connector_password:
          type: string
          description: The password of the Connector used by the ComplianceJob (Standard
            Job only). For hyperscale jobs, see the connector of the dataset.
          nullable: true
          example: '*****'
          x-dct-toolkit-credential-field: true
        on_the_fly_source_connector_id:
          type: string
          description: The id of the OTF source connector for this job
          nullable: true
        on_the_fly_source_connector_name:
          type: string
          description: The name of the OTF source connector for this job
          nullable: true
        on_the_fly_source_connector_type:
          type: string
          description: The type of the OTF source connector for this job
          nullable: true
        on_the_fly_source_connector_username:
          type: string
          description: The username of the source Connector used by the on-the-fly
            job (Standard Job only).
          nullable: true
          example: user123
        on_the_fly_source_connector_password:
          type: string
          description: The password of the source Connector used by the on-the-fly
            job (Standard Job only).
          nullable: true
          example: '*****'
          x-dct-toolkit-credential-field: true
        type:
          type: string
          description: The type of compliance job.
          example: MASKING
          enum:
          - MASKING
          - DISCOVERY
          - TOKENIZATION
          - REIDENTIFICATION
        execution_type:
          type: string
          description: The execution type of this Job.
          example: STANDARD
          enum:
          - STANDARD
          - HYPERSCALE
        hyperscale_instance_id:
          type: string
          description: The ID of the Hyperscale instance of this job (Hyperscale Job
            only).
          example: abc
        description:
          type: string
          description: Description of the job (Hyperscale Job only).
          example: Job for app finance
        dataset_id:
          type: string
          description: Dataset of the Hyperscale Job (Hyperscale Job only).
          example: dataset-123
        retain_execution_data:
          type: string
          description: Defines whether execution data will be stored after execution
            is complete (Hyperscale Job only).
          example: 'false'
          enum:
          - 'NO'
          - ON_ERROR
          - ALWAYS
        max_memory:
          type: integer
          description: Maximum memory to be allocated for each Masking job (Hyperscale
            Job only).
          format: int32
          example: 1024
        min_memory:
          type: integer
          description: Minimum memory to be allocated for each Masking job (Hyperscale
            Job only).
          format: int32
          example: 1024
        feedback_size:
          type: integer
          description: Feedback Size for each Masking job (Hyperscale Job only).
          format: int32
          example: 32
        stream_row_limit:
          type: integer
          description: Stream Row Limit for each Masking job (Hyperscale Job only).
          format: int32
          example: 4
        num_input_streams:
          type: integer
          description: Number of input streams to be configured for Masking Job (Hyperscale
            Job only).
          format: int32
          example: 4
        max_concurrent_source_connections:
          type: integer
          description: Maximum number of parallel connection that the Hyperscale instance
            can have with the source datasource (Hyperscale Job only).
          format: int32
          example: 32
        max_concurrent_target_connections:
          type: integer
          description: Maximum number of parallel connection that the Hyperscale instance
            can have with the target datasource (Hyperscale Job only).
          format: int32
          example: 32
        parallelism_degree:
          type: integer
          description: The degree of parallelism (DOP) per Oracle job to recreate
            the index in the post-load process (Hyperscale Job only).
          format: int32
          example: 4
        source_masking_job_id:
          type: string
          description: The ID of the MaskingJob that was used as the source to create
            this job (Hyperscale Job only).
          example: masking-job-0
        engine_id:
          type: string
          description: The engine on which this job resides (Standard Job only).
          example: '1'
        engine_name:
          type: string
          description: The name of the engine on which this job resides (Standard
            Job only).
          example: masking-engine-1
        engine_ids:
          type: array
          description: List of engines that this job can run on (Hyperscale Job only).
          items:
            type: string
        discovery_policy_id:
          type: string
          description: The id of the discovery policy in use - applicable for discovery
            jobs only.
          nullable: true
        discovery_policy_name:
          type: string
          description: The name of the discovery policy in use - applicable for discovery
            jobs only.
          nullable: true
          example: ASDD Standard
        environment_name:
          type: string
          description: The name of the environment in which this job resides on the
            compliance engine.
          example: B2B Staging
        application_name:
          type: string
          description: The name of the application associated with the environment
            in which this job resides on the compliance engine.
          example: Custom B2B Solution
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: A masking job.
    ComplianceJobConnectorsResponse:
      type: object
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        on_the_fly_connector:
          $ref: '#/components/schemas/Connector'
      description: Connector(s) for a compliance job.
    ConfigSettingsStg:
      type: object
      properties:
        property_name:
          maxLength: 40
          pattern: ^$|^[_a-zA-Z0-9]*$
          type: string
          description: Name of the property.
        value:
          maxLength: 40
          pattern: ^$|^''$|^[/_.:%@'+!*a-zA-Z0-9\[\]\- ]*$
          type: string
          description: Value of the property.
        comment_property:
          type: boolean
          description: Select this option to comment out the provided property name
            in the configuration file.
      description: Custom Database-Level config settings.
    ConnectivityCheckParameters:
      title: ConnectivityCheckParameters
      required:
      - engine_id
      - host
      - port
      type: object
      properties:
        engine_id:
          type: string
          description: The ID of the engine to check.
          example: engine-123
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
        os_name:
          type: string
          description: Operating system type of the environment.
          example: UNIX
          enum:
          - UNIX
          - WINDOWS
        staging_environment:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the connector environment which is used to connect to
            this source environment.
          example: 1-WINDOWS_HOST-1
        host:
          type: string
          description: The hostname of the remote host machine to check.
          example: test.host.com
        port:
          maximum: 65535
          minimum: 0
          type: integer
          description: The port of the remote host machine to check. For Windows,
            port on which Delphix connector is running.
          nullable: true
          example: 22
        username:
          maxLength: 255
          minLength: 1
          type: string
          description: The username of the remote host machine to check. Username
            is mandatory input with password/use_engine_public_key/kerberos_authentication.
          example: username
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: The password of the remote host machine to check.
          example: password
          x-dct-toolkit-credential-field: true
        vault_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The DCT id or name of the vault from which to read the host
            credentials.
          example: my-vault
        hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
          example: kv
          x-dct-toolkit-credential-field: true
        hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
          example: oracle-env
          x-dct-toolkit-credential-field: true
        hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the username in the key-value store.
          example: username
          x-dct-toolkit-credential-field: true
        hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the password in the key-value store.
          example: secret
          x-dct-toolkit-credential-field: true
        azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          example: azure_vault
          x-dct-toolkit-credential-field: true
        azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store (ORACLE,
            ASE and MSSQL_DOMAIN_USER only).
          example: username
          x-dct-toolkit-credential-field: true
        azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store (ORACLE,
            ASE and MSSQL_DOMAIN_USER only).
          example: secret
          x-dct-toolkit-credential-field: true
        cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
          example: Safe=Test;Folder=Test;Object=Test
          x-dct-toolkit-credential-field: true
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
      description: Parameters to check connectivity between engine and remote host.
    ConnectivityCheckResponse:
      title: ConnectivityResponse
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: A message describing the result of the connectivity check.
          example: Success!
        status:
          type: string
          description: A status describing the status of the connectivity check.
          example: SUCCESS
          enum:
          - SUCCESS
          - FAILED
      description: The result of the connectivity check.
    Connector:
      type: object
      properties:
        id:
          type: string
          description: The Connector entity ID.
          example: 1-database-123
        name:
          type: string
          description: The Connector name.
          example: connector-name
        engine_id:
          type: string
          description: The id of the Compliance Engine that this Connector belongs
            to.
          example: '123'
        engine_name:
          type: string
          description: The name of the Compliance Engine that this Connector belongs
            to.
          example: my-compliance-engine-1
        type:
          $ref: '#/components/schemas/ConnectorTypeEnum'
        hostname:
          type: string
          description: The network hostname or IP address of the database server.
          example: database_server.mycompany.co
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The TCP port of the server.
          format: int32
          example: 9100
        username:
          type: string
          description: The username this Connector will use to connect to the database.
        auth_present:
          type: boolean
          description: Whether this connector has authentication credentials set
        database_type:
          type: string
          description: The database variant, such as Oracle or MSSQL Server
          example: ORACLE
          enum:
          - AURORA_POSTGRES
          - DB2
          - DB2_ISERIES
          - DB2_MAINFRAME
          - EXTENDED
          - GENERIC
          - MARIADB
          - MSSQL
          - MYSQL
          - ORACLE
          - POSTGRES
          - RDS_POSTGRES
          - SYBASE
        custom_driver_name:
          type: string
          description: The name of the custom JDBC driver for this connector
        database_name:
          type: string
          description: The database name for this connector
        instance_name:
          type: string
          description: The instance name for this connector
        jdbc:
          type: string
          description: The jdbc URL for this connector
        schema_name:
          type: string
          description: The schema name for this connector
        sid:
          type: string
          description: The SID value for this connector. This field is specific to
            Oracle database connectors
        kerberos_auth:
          type: boolean
          description: Whether kerberos authentication is enabled for this connector
        service_principal:
          type: string
          description: The service principal to use for kerberos authentication
        enable_logger:
          type: boolean
          description: Whether the logger is enable for this connector
        file_type:
          type: string
          description: The type of file this connector is configured to access
          example: DELIMITED
          enum:
          - DELIMITED
          - FIXED_WIDTH
          - XML
          - JSON
        connection_mode:
          type: string
          description: The connection mode for file connectors
          example: SFTP
          enum:
          - FTP
          - MOUNT
          - SFTP
          - FTPS
          - AWS_S3
          - S3_COMPATIBLE
        path:
          type: string
          description: The path on the remote server for file connections
        ssh_key:
          type: string
          description: The name of the ssh key for SFTP mode file connectors
        user_dir_is_root:
          type: boolean
          description: For FTP and SFTP connections, whether the user dir is set to
            root
        platform:
          type: string
          description: This database or file connection type associated with the connector
          example: ORACLE
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: Connectors are the way users define the data sources to which the
        Masking Engine should connect.
      example:
        id: 1-database-123
        name: connector-name
        engine_id: 123
        type: DATABASE
        hostname: database_server.example.com
        database_type: POSTGRES
        schema_name: public
        database_name: public
        port: 5432
        username: user-123
    ConnectorTestResponse:
      title: ConnectorTestResponse
      required:
      - message
      - status
      type: object
      properties:
        status:
          type: string
          description: Connection status, SUCCEEDED or FAILED
          example: SUCCEEDED
          enum:
          - SUCCEEDED
          - FAILED
        message:
          type: string
          description: A message describing the result of the masking connector test.
          example: Connection Succeeded
      description: The result of the masking connector test.
    ConnectorTypeEnum:
      type: string
      example: DATABASE
      enum:
      - DATABASE
      - FILE
      - MAINFRAME_DATASET
    ConnectorUpdateParameters:
      type: object
      properties:
        name:
          type: string
          description: The Connector name.
        hostname:
          type: string
          description: The network hostname or IP address of the database server.
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: The TCP port of the server.
          format: int32
        username:
          type: string
          description: The username this Connector will use to connect to the database.
        password:
          type: string
          description: The password this Connector will use to connect to the database.
          x-dct-toolkit-credential-field: true
      description: Parameters used to update a Masking Connector.
      example:
        name: connector-name
        hostname: database_server.mycompany.co
        port: 4322
        username: user-123
        password: password123
    Consumer:
      type: object
      properties:
        parent_id:
          type: string
          description: ID of the parent object.
        parent_name:
          type: string
          description: The name of the parent object.
        parent_type:
          type: string
          description: The type of the object.
          example: algorithm
      description: Consumer object.
    ConvertDataLayoutRequest:
      type: object
      properties:
        skip_account_import:
          type: boolean
          description: Skip running the account import process. If this flag is not
            set, then accounts from self-service will overwrite existing accounts
            if any.
          example: false
          default: false
    ConvertDataLayoutResponse:
      type: object
      properties:
        job_id:
          type: string
          description: DCT job-id of the job that convert the engine bookmarks to
            DCT bookmarks.
          example: job-1
          deprecated: true
        job:
          $ref: '#/components/schemas/Job'
    CopyMaskingJobParameters:
      required:
      - target_engine_id
      type: object
      properties:
        target_engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the engine to copy the job to.
          example: '1'
        source_environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID or name of the source environment on the target engine.
            This only applies to On-The-Fly jobs.
          example: test-on-the-fly-mask1
        target_environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID or name of the target environment on the target engine
            to copy the job into.
          example: prod-in-place-mask1
        force_overwrite:
          type: boolean
          description: Whether to overwrite objects that already exist on the target
            engine.
          default: false
      description: Parameters to copy a masking job.
    CreateMaskingJobRequest:
      title: CreateMaskingJobRequest
      type: object
      properties:
        name:
          type: string
          description: The name to give the Masking Job.
          example: My favorite MaskingJob
        description:
          type: string
          description: The description of the Job (Hyperscale Job only).
          example: Job for app finance DB
        job_type:
          type: string
          description: The type of Job.
          example: HYPERSCALE
          enum:
          - HYPERSCALE
        hyperscale_instance_id:
          type: string
          description: The ID of the HyperscaleInstance to create this Job on (Hyperscale
            Job only).
          example: hyperscale-123
        source_masking_job_id:
          type: string
          description: The ID of the Masking Job to use as the source (Hyperscale
            Job only).
          example: masking-job-123
        hyperscale_source_connector_username:
          type: string
          description: The username to set for the Source Connector that will be imported
            (Hyperscale Job only).
          example: db-user-123
        hyperscale_source_connector_password:
          type: string
          description: The password to set for the Source Connector that will be imported
            (Hyperscale Job only).
          example: dp-pass-123
          x-dct-toolkit-credential-field: true
        hyperscale_target_connector_username:
          type: string
          description: The username to set for the Target Connector that will be imported
            (Hyperscale Job only).
          example: db-user-123
        hyperscale_target_connector_password:
          type: string
          description: The password to set for the Target Connector that will be imported
            (Hyperscale Job only).
          example: dp-pass-123
          x-dct-toolkit-credential-field: true
        mount_point_id:
          type: string
          description: The ID of the MountPoint to use for the resulting dataset (Hyperscale
            Job only).
          example: mount-point-123
        unload_split:
          type: integer
          description: The number of unloaded files to be generated from the source
            database (Hyperscale Job only).
          format: int64
          example: 4
        stream_size:
          type: integer
          description: The stream size to be used by the sqlldr oracle utility which
            specifies the size (in bytes) of the data stream sent from the client
            to the server (Hyperscale Job only).
          format: int64
          example: 65536
        retain_execution_data:
          type: string
          description: Defines whether execution data will be stored after execution
            is complete (Hyperscale Job only).
          example: 'false'
          enum:
          - 'NO'
          - ON_ERROR
          - ALWAYS
        max_memory:
          type: integer
          description: Maximum memory, in MB, to be allocated for each Masking job
            (Hyperscale Job only).
          format: int32
          example: 1024
        min_memory:
          type: integer
          description: Minimum memory, in MB, to be allocated for each Masking job
            (Hyperscale Job only).
          format: int32
          example: 1024
        feedback_size:
          type: integer
          description: The granularity with which the masking engine provides updates
            on the progress of the masking job. For instance, a feedbackSize of 50000
            results in log updates whenever 50000 rows are processed during the masking
            phase (Hyperscale Job only).
          format: int32
          example: 10000
        stream_row_limit:
          type: integer
          description: The stream row limit constrains the total number of rows that
            may enter the job for each masking stream. Setting this value to 0 allows
            unlimited rows into each stream, while leaving it blank will select a
            default limit based on job type (Hyperscale Job only).
          format: int32
          example: 0
        num_input_streams:
          type: integer
          description: Number of input streams to be configured for Masking Job (Hyperscale
            Job only).
          format: int32
          example: 4
        max_concurrent_source_connections:
          type: integer
          description: Maximum number of parallel connection that the Hyperscale instance
            can have with the source datasource (Hyperscale Job only).
          format: int32
          example: 32
        max_concurrent_target_connections:
          type: integer
          description: Maximum number of parallel connection that the Hyperscale instance
            can have with the target datasource (Hyperscale Job only).
          format: int32
          example: 32
        parallelism_degree:
          type: integer
          description: The degree of parallelism (DOP) per Oracle job to recreate
            the index in the post-load process (Hyperscale Job only).
          format: int32
          example: 4
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        make_current_account_owner:
          type: boolean
          description: Whether the account creating this Masking job must be configured
            as owner of it (Hyperscale Job only).
          default: true
      description: Parameters to create a MaskingJob.
    CreateOracleListenerParams:
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OracleListenerTypeEnum'
        name:
          type: string
          description: The name of the Oracle listener.
        protocol_addresses:
          type: array
          description: The protocol addresses of the Oracle listener.
          items:
            type: string
        host_id:
          type: string
          description: The id of the host on which the Oracle listener runs.
    CreateReplicationProfileParameters:
      required:
      - engine_id
      - replication_mode
      - target_engine_id
      type: object
      properties:
        name:
          type: string
          description: The ReplicationProfile name.
        replication_mode:
          type: string
          description: The ReplicationProfile mode.
          enum:
          - ENGINE_DATA_REPLICATION
          - MASKED_DATA_DISTRIBUTION
          - CONTINUOUS_VAULT
        engine_id:
          type: string
          description: The ID of the engine that the ReplicationProfile belongs to.
        target_engine_id:
          type: string
          description: The ID of the replication target engine.
        target_host:
          type: string
          description: Hostname of the replication target engine. If none is provided,
            the hostname for the engine referenced by target_engine_id will be used.
        target_port:
          maximum: 65535
          minimum: 0
          type: integer
          description: Target TCP port number for the Delphix Session Protocol.
          default: 8415
        description:
          maxLength: 4096
          type: string
          description: The ReplicationProfile description.
        schedule:
          maxLength: 256
          minLength: 1
          type: string
          description: Replication schedule in the form of a quartz-formatted string.
        tags:
          type: array
          description: The tags that are applied to this ReplicationProfile.
          items:
            $ref: '#/components/schemas/Tag'
        enable_tag_replication:
          type: boolean
          description: Indicates whether tag replication from primary object to replica
            object is enabled or disabled for this ReplicationProfile.
        bandwidth_limit:
          minimum: 0
          type: integer
          description: Bandwidth limit (MB/s) for replication network traffic. A value
            of 0 means no limit.
          default: 0
        number_of_connections:
          maximum: 16
          minimum: 1
          type: integer
          description: Total number of transport connections to use.
          default: 1
        encrypted:
          type: boolean
          description: Encrypt replication network traffic.
          default: false
        automatic_replication:
          type: boolean
          description: Indication whether the replication spec schedule is enabled
            or not.
          default: false
        use_system_socks_setting:
          type: boolean
          description: Connect to the replication target host via the system-wide
            SOCKS proxy.
          default: false
        vdb_ids:
          type: array
          description: The VDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        dsource_ids:
          type: array
          description: The dSources that are replicated by this ReplicationProfile.
          items:
            type: string
        cdb_ids:
          type: array
          description: The CDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        vcdb_ids:
          type: array
          description: The vCDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        group_ids:
          type: array
          description: The groups that are replicated by this ReplicationProfile.
          items:
            type: string
        replicate_entire_engine:
          type: boolean
          description: Whether to replicate the entire engine. This is mutually exclusive
            with the vdb_ids, dsource_ids, cdb_ids, vcdb_ids, and group_ids properties.
      description: The parameters to create a ReplicationProfile.
    CreateRepositoryParams:
      required:
      - database_type
      type: object
      properties:
        database_type:
          type: string
          description: The database type of this repository.
          enum:
          - ORACLE
          - MSSQL
        bits:
          type: integer
          description: 32 or 64 bits.
          enum:
          - 32
          - 64
        installation_home:
          maxLength: 300
          minLength: 1
          type: string
          description: The Oracle install or SQL Server instance home.
        version:
          type: string
          description: Version of the oracle repository or SQL Server instance.
        oracle_base:
          maxLength: 256
          type: string
          description: The Oracle base where database binaries are located.
        allow_provisioning:
          type: boolean
          description: Flag indicating whether the repository should be used for provisioning.
          default: true
        is_staging:
          type: boolean
          description: Flag indicating whether this repository can be used by the
            Delphix Engine for internal processing.
          default: false
        applied_patches:
          type: array
          description: List of Oracle patches that have been applied to this Oracle
            Home.
          items:
            type: integer
            format: int64
        full_text_installed:
          type: boolean
          description: This property determines if the full-text search and semantic
            search is installed or not (MSSql only).
        server_name:
          maxLength: 128
          type: string
          description: The Server Name of the SQL Server instance.
        port:
          type: integer
          description: The network port for connecting to the SQL Server instance.
          format: int64
        instance_owner:
          maxLength: 255
          minLength: 1
          type: string
          description: Account the SQL Server instance is running as.
        instance_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the SQL Server instance.
    CreateRole:
      required:
      - name
      - permission_objects
      type: object
      properties:
        name:
          type: string
          description: The Role name.
        description:
          type: string
          description: Role description.
        permission_objects:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of permissions granted by this role.
          items:
            $ref: '#/components/schemas/PermissionObject'
        immutable:
          type: boolean
          description: If set to true, adding or removing permission is not allowed.
          default: false
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: A role Object to create a custom role.
    CreateVDBGroupOrder:
      properties:
        vdb_id:
          type: string
          description: Vdb id
        order:
          type: integer
          description: Dictates order of operations on VDBs. Operations can be performed
            in parallel <br> for all VDBs or sequentially. Below are possible valid
            and invalid orderings given an example <br> VDB group with 3 vdbs (A,
            B, and C).<br> Valid:<br> {"vdb_id":"vdb-1", "order":"1"} {"vdb_id":"vdb-2",
            order:"1"} {vdb_id:"vdb-3", order:"1"} (parallel)<br> {vdb_id:"vdb-1",
            order:"1"} {vdb_id:"vdb-2", order:"2"} {vdb_id:"vdb-3", order:"3"} (sequential)<br>
            Invalid:<br> {vdb_id:"vdb-1", order:"A"} {vdb_id:"vdb-2", order:"B"} {vdb_id:"vdb-3",
            order:"C"} (sequential)<br><br> In the sequential case the vdbs with priority
            1 is the first to be started and the last to<br> be stopped. This value
            is set on creation of VDB groups.
          format: int32
          default: 0
    CredentialsEnvVariable:
      required:
      - base_var_name
      properties:
        base_var_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Base name of the environment variables. Variables are named
            by appending '_USER', '_PASSWORD', '_PUBKEY' and '_PRIVKEY' to this base
            name, respectively. Variables whose values are not entered or are not
            present in the type of credential or vault selected, will not be set.
        password:
          maxLength: 256
          minLength: 1
          type: string
          description: Password to assign to the environment variables.
          example: password
          x-dct-toolkit-credential-field: true
        vault_username:
          maxLength: 256
          minLength: 1
          type: string
          description: Delphix display name for the vault user.
          example: my-vault
        vault:
          maxLength: 256
          minLength: 1
          type: string
          description: The name or reference of the vault to assign to the environment
            variables.
          example: my-vault
        hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
          example: kv
        hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
          example: oracle-env
        hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Hashicorp vault key for the username in the key-value store.
          example: username
        hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Hashicorp vault key for the password in the key-value store.
          example: secret
        azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name.
          example: azure_vault
        azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key in the key-value store.
          example: username
        azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key in the key-value store.
          example: secret
        cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
          example: Safe=Test;Folder=Test;Object=Test
    DSource:
      type: object
      properties:
        id:
          type: string
          description: The dSource object entity ID.
        database_type:
          type: string
          description: The database type of this dSource.
          nullable: true
        name:
          type: string
          description: The container name of this dSource.
          nullable: true
        namespace_id:
          type: string
          description: The namespace id of this dSource.
          nullable: true
        namespace_name:
          type: string
          description: The namespace name of this dSource.
          nullable: true
        is_replica:
          type: boolean
          description: Is this a replicated object.
          nullable: true
        database_version:
          type: string
          description: The database version of this dSource.
          nullable: true
        content_type:
          type: string
          description: The content type of the dSource.
          nullable: true
        data_uuid:
          type: string
          description: A universal ID that uniquely identifies the dSource database.
          nullable: true
        storage_size:
          type: integer
          description: The actual space used by this dSource, in bytes.
          format: int64
          nullable: true
        plugin_version:
          type: string
          description: The version of the plugin associated with this source database.
          nullable: true
        creation_date:
          type: string
          description: The date this dSource was created.
          format: date-time
          nullable: true
        group_name:
          type: string
          description: The name of the group containing this dSource.
          nullable: true
        enabled:
          type: boolean
          description: A value indicating whether this dSource is enabled.
          nullable: true
        is_detached:
          type: boolean
          description: A value indicating whether this dSource is detached.
          nullable: true
        engine_id:
          type: string
          description: A reference to the Engine that this dSource belongs to.
        source_id:
          type: string
          description: A reference to the Source associated with this dSource.
          nullable: true
        status:
          type: string
          description: The runtime status of the dSource. 'Unknown' if all attempts
            to connect to the source failed.
          nullable: true
        engine_name:
          type: string
          description: Name of the Engine where this DSource is hosted
          nullable: true
        cdb_id:
          type: string
          description: A reference to the CDB associated with this dSource.
          nullable: true
        current_timeflow_id:
          type: string
          description: A reference to the currently active timeflow for this dSource.
          example: timeflow-123
        previous_timeflow_id:
          type: string
          description: A reference to the previous timeflow for this dSource.
          example: timeflow-123
        is_appdata:
          type: boolean
          description: Indicates whether this dSource has an AppData database.
          example: true
        toolkit_id:
          type: string
          description: The ID of the toolkit associated with this dSource(AppData
            only).
        unvirtualized_space:
          type: integer
          description: This is the sum of unvirtualized space from the dependants
            VDBs of the dSource.
          format: int64
        dependant_vdbs:
          type: integer
          description: The number of VDBs that are dependant on this dSource. This
            includes all VDB descendants that have this dSource as an ancestor.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        primary_object_id:
          type: string
          description: The ID of the parent object from which replication was done.
        primary_engine_id:
          type: string
          description: The ID of the parent engine from which replication was done.
        primary_engine_name:
          type: string
          description: The name of the parent engine from which replication was done.
        replicas:
          type: array
          description: The list of replicas replicated from this object.
          items:
            $ref: '#/components/schemas/Replica'
        hooks:
          $ref: '#/components/schemas/DSourceHooks'
        sync_policy_id:
          type: string
          description: The id of the snapshot policy associated with this dSource.
        retention_policy_id:
          type: string
          description: The id of the retention policy associated with this dSource.
        replica_retention_policy_id:
          type: string
          description: The id of the replica retention policy associated with this
            dSource.
        quota_policy_id:
          type: string
          description: The id of the quota policy associated with this dSource.
        logsync_enabled:
          type: boolean
          description: True if LogSync is enabled for this dSource.
        exported_data_directory:
          type: string
          description: ZFS exported data directory path.
        template_id:
          type: string
          description: A reference to the Non Virtual Database Template.
          nullable: true
          example: DATABASE_TEMPLATE-1
        allow_auto_staging_restart_on_host_reboot:
          type: boolean
          description: Indicates whether Delphix should automatically restart this
            staging database when staging host reboot is detected.
        physical_standby:
          type: boolean
          description: Indicates whether this staging database is configured as a
            physical standby.
        validate_by_opening_db_in_read_only_mode:
          type: boolean
          description: Indicates whether this staging database snapshot is validated
            by opening it in read-only mode.
      description: The Delphix storage-based copy of the source database including
        its history.
      example:
        id: dsource-123
        database_type: Oracle
        name: prod01-main
        database_version: 10.2.0.5.0
        data_uuid: 1734315df891991101eb96963535afa0
        storage_size: 339292672
        plugin_version: '1.0'
        creation_date: 2021-05-01T08:51:34.148Z
        group_name: DSources
        enabled: true
        is_detached: false
        engine_id: engine-123
        source_id: source-123
        status: RUNNING
        engine_name: engine-123-name
        cdb_id: cdb-123
        is_appdata: true
        tags:
        - key: key1
          value: value1
        - key: key2
          value: value2
        primary_object_id: 1-CONTAINER-1
        primary_engine_id: '1'
        primary_engine_name: source-engine
        replicas:
        - replica_id: replica-1
          replica_engine_id: '1'
          replica_engine_name: replica-e1
        - replica_id: replica-2
          replica_engine_id: '2'
          replica_engine_name: replica-e2
        hooks:
          pre_sync:
          - name: Print the current user
            command: whoami
            shell: bash
            element_id: '0'
        sync_policy_id: 1-POLICY_SNAPSHOT-1
        retention_policy_id: 1-POLICY_RETENTION-1
        replica_retention_policy_id: 1-POLICY_REPLICA_RETENTION-1
        quota_policy_id: 1-POLICY_QUOTA-1
        logsync_enabled: true
        exported_data_directory: domain0/oracle_db_container-30/oracle_timeflow-32/datafile
        template_id: DATABASE_TEMPLATE-1
    DSourceConsumptionData:
      properties:
        name:
          type: string
          description: The name of the dSource
          example: prod01-main
        status:
          type: string
          description: The status of the dSource
          example: Running
        database_type:
          type: string
          description: The type of the dSource
          example: Oracle
        engine_id:
          minLength: 1
          type: string
          description: The id of the engine the dSource belongs to.
          example: '1'
        engine_name:
          type: string
          description: The name of the engine the dSource belongs to
          example: My favorite engine
        last_consumption_date:
          type: string
          description: The most recent date where consumption data was captured for
            this dSource.
          format: date-time
        ingested_size:
          minimum: 0
          type: integer
          description: The ingested size of the dSource
          format: int64
          example: 12345
    DSourceHooks:
      type: object
      properties:
        ops_pre_sync:
          maxItems: 100
          type: array
          description: The commands to execute before syncing with external data.
          items:
            $ref: '#/components/schemas/Hook'
        ops_pre_log_sync:
          maxItems: 100
          type: array
          description: The commands to execute after syncing with external data and
            before running the LogSync.
          items:
            $ref: '#/components/schemas/Hook'
        ops_post_sync:
          maxItems: 100
          type: array
          description: The commands to execute after syncing a linked source.
          items:
            $ref: '#/components/schemas/Hook'
        pre_validated_sync:
          maxItems: 100
          type: array
          description: The commands to execute on the staging source before performing
            a validated sync.
          items:
            $ref: '#/components/schemas/Hook'
        post_validated_sync:
          maxItems: 100
          type: array
          description: The commands to execute on the staging source after performing
            a validated sync.
          items:
            $ref: '#/components/schemas/Hook'
      description: DSource operation hooks.
    DSourceSnapshotParameters:
      type: object
      properties:
        drop_and_recreate_devices:
          type: boolean
          description: |
            If this parameter is set to true, older devices will be dropped and new
            devices created instead of trying to remap the devices. This might increase
            the space utilization on Delphix Engine. (ASE only)
        sync_strategy:
          type: string
          description: |
            Determines how the Delphix Engine will take a backup:
            * `latest_backup` - Use the most recent backup.
            * `new_backup` - Delphix will take a new backup of your source database.
            * `specific_backup` - Use a specific backup. Using this option requires setting
              `ase_backup_files` for ASE dSources or `mssql_backup_uuid` for MSSql dSources.
            Default is `new_backup`.
            (ASE, MSSql only)
          enum:
          - latest_backup
          - new_backup
          - specific_backup
        ase_backup_files:
          type: array
          description: When using the `specific_backup` sync_strategy, determines
            the backup files. (ASE Only)
          items:
            maxLength: 4096
            minLength: 1
            type: string
        mssql_backup_uuid:
          maxLength: 4096
          minLength: 1
          type: string
          description: When using the `specific_backup` sync_strategy, determines
            the Backup Set UUID. (MSSql only)
        compression_enabled:
          type: boolean
          description: When using the `new_backup` sync_strategy, determines if compression
            must be enabled. Defaults to the configuration of the ingestion strategy
            configured on the Delphix Engine for this dSource. (MSSql only)
        availability_group_backup_policy:
          type: string
          description: |
            When using the `new_backup` sync_strategy for an MSSql Availability Group, determines the backup policy:
            * `primary` - Backups only go to the primary node.
            * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
            * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
            (MSSql only)
          enum:
          - primary
          - secondary_only
          - prefer_secondary
        do_not_resume:
          type: boolean
          description: |
            Indicates whether a fresh SnapSync must be started regardless if it was possible to
            resume the current SnapSync. If true, we will not resume but instead ignore previous progress
            and backup all datafiles even if already completed from previous failed SnapSync. This does not
            force a full backup, if an incremental was in progress this will start a new incremental snapshot.
            (Oracle only)
        double_sync:
          type: boolean
          description: |
            Indicates whether two SnapSyncs should be performed in immediate succession to reduce the number
            of logs required to provision the snapshot. This may significantly reduce the time necessary to
            provision from a snapshot.
            (Oracle only).
        force_full_backup:
          type: boolean
          description: Whether or not to take another full backup of the source database.
            (Oracle only)
        skip_space_check:
          type: boolean
          description: |
            Skip check that tests if there is enough space available to store the database in
            the Delphix Engine. The Delphix Engine estimates how much space a database will occupy after
            compression and prevents SnapSync if insufficient space is available. This safeguard can be
            overridden using this option. This may be useful when linking highly compressible databases.
            (Oracle only)
        files_for_partial_full_backup:
          maxItems: 10000
          minItems: 1
          type: array
          description: |
            List of datafiles to take a full backup of. This would be useful in situations
            where certain datafiles could not be backed up during previous SnapSync due to corruption
            or because they went offline.
            (Oracle only)
          items:
            type: integer
            format: int64
        appdata_parameters:
          type: object
          additionalProperties: true
          description: The list of parameters specified by the snapshotParametersDefinition
            schema in the toolkit (AppData only).
          nullable: true
          example:
            resync: true
      description: Parameters to snapshot a DSource.
    DSourceUsageData:
      properties:
        engine_name:
          type: string
          description: The name of the engine the dSource belongs to.
          example: My favorite engine
        name:
          type: string
          description: The name of the dSource
          example: prod01-main
        unvirtualized_space:
          type: integer
          description: The the disk space that would be required if not using Delphix
            virtualizion, in bytes.
          format: int64
          example: 109242677
        actual_space:
          type: integer
          description: The actual space used by this dSource, in bytes. This includes
            the disk space used by the current copy of the data as well as the snapshots
            and log files retained to enable provisioning from historical versions.
          format: int64
          example: 339292672
        dependant_vdbs:
          type: integer
          description: The number of VDBs that are dependant on this dSource. This
            includes all VDB descendants that have this dSource as an ancestor.
          example: 25
    DataClass:
      type: object
      properties:
        id:
          type: string
          description: The data class ID.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          type: string
          description: The name of this data class.
          example: Account Number
        default_algorithm_id:
          type: string
          description: The ID of the default masking algorithm for this data class.
          nullable: true
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        default_algorithm_name:
          type: string
          description: The name of the default masking algorithm for this data class.
          nullable: true
          example: alg1
        default_token_algorithm_id:
          type: string
          description: The ID of the default tokenization algorithm for this data
            class.
          nullable: true
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        default_token_algorithm_name:
          type: string
          description: The default tokenization algorithm for this data class.
          nullable: true
          example: alg2
        description:
          type: string
          description: A description of this data class.
          nullable: true
        example:
          maxLength: 200
          type: string
          description: An example data value for this data class.
          nullable: true
        revision_hash:
          type: string
          description: The export revision hash of this data class from the source
            engine.
          nullable: true
          example: 6e0509df463cf714b2697ccf2f8ac972970021d1
        engine_id:
          type: string
          description: The ID of the engine that this data class originated from.
          nullable: true
        engine_name:
          type: string
          description: The name of the engine that this data class originated from.
          nullable: true
        tags:
          type: array
          description: The tags of this data class.
          items:
            $ref: '#/components/schemas/Tag'
      description: A data class.
    DataClassUpdateParams:
      type: object
      properties:
        description:
          type: string
          description: A description of this data class.
          nullable: true
        example:
          maxLength: 200
          type: string
          description: An example data value for this data class.
          nullable: true
      description: Parameters used to update a Data Class.
      example:
        description: This data class is used for account numbers.
        example: '1234567890'
    DataLayout:
      type: object
      properties:
        id:
          type: string
          description: DCT Id of the template/container.
          example: 1-template-123
        name:
          type: string
          description: Name of the template/container
          example: template-123
        type:
          type: string
          description: Type of the object, either CONTAINER or TEMPLATE.
          example: CONTAINER
          enum:
          - CONTAINER
          - TEMPLATE
        engine_id:
          type: string
          description: Id of the engine this object belongs to.
          example: '1'
        engine_name:
          type: string
          description: Name of the engine this object belongs to.
          example: engine-1
        tags:
          type: array
          description: The tags to be created for this data-layout.
          example:
          - key: key-1
            value: value-1
          - key: key-2
            value: value-2
          items:
            $ref: '#/components/schemas/Tag'
      description: A Data Control Tower object that references the self-service template/container.
    DataPointByLocationParameters:
      type: object
      properties:
        location:
          maxLength: 256
          minLength: 1
          type: string
          description: The location to provision from.
          example: '112233'
        timeflow_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the timeflow to provision from.
          example: timeflow_123
    DataPointBySnapshotParameters:
      type: object
      properties:
        snapshot_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the snapshot from which to execute the operation.
            If the snapshot_id is not, selects the latest snapshot.
    DataPointByTimestampParameters:
      type: object
      properties:
        timestamp:
          type: string
          description: The point in time from which to execute the operation. Mutually
            exclusive with timestamp_in_database_timezone. If the timestamp is not
            set, selects the latest point.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        timestamp_in_database_timezone:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{0,3})?'
          type: string
          description: The point in time from which to execute the operation, expressed
            as a date-time in the timezone of the source database. Mutually exclusive
            with timestamp.
          example: 2021-08-14T14:55:20.507Z
        timeflow_id:
          type: string
          description: The Timeflow ID.
          example: timeflow-123
    DataPointFromBookmarkParameters:
      required:
      - bookmark_id
      type: object
      properties:
        bookmark_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the bookmark from which to execute the operation.
            The bookmark must contain only one VDB.
    DataRiskData:
      properties:
        connector_id:
          type: string
          description: The DCT id of the connector. This is an opaque string.
          example: 1-DATABASE-15
        engine_connector_id:
          type: integer
          description: The ID of the connector as found on the compliance engine.
          example: 15
        connector_name:
          type: string
          description: Name of the connector.
          example: Dev Database
        connector_type:
          type: string
          description: Type of the connector.
          example: DATABASE
          enum:
          - DATABASE
          - FILE
          - MAINFRAME_DATASET
        last_profiled_date:
          type: string
          description: Date this connector was last profiled.
          format: date-time
          example: 2022-11-30T08:51:34.148Z
        last_masked_date:
          type: string
          description: Date this connector last had a masking job run.
          format: date-time
          example: 2022-11-30T08:51:34.148Z
        engine_id:
          type: string
          description: The entity ID of the masking engine.
          example: 4ed2357d-f1a7-410c-b951-90f0edc1a0f6
        engine_name:
          type: string
          description: The name of the masking engine.
          example: Development Engine
        is_profiled:
          type: boolean
          description: If this connector has been profiled.
          example: true
        is_sensitive_data:
          type: boolean
          description: If this connector has sensitive data.
          example: true
        is_masked:
          type: boolean
          description: If this connector has had a successful masking job run.
          example: false
        is_at_risk:
          type: boolean
          description: If this connector has sensitive data that have not been masked.
          example: true
        data_elements_total:
          type: integer
          description: The total number of data elements of this connector.
          format: int64
          example: 1000
        data_elements_not_sensitive:
          type: integer
          description: The number of data elements categorized as not sensitive.
          format: int64
          example: 400
        data_elements_sensitive_masked:
          type: integer
          description: The number of sensitive data elements that have been masked.
          format: int64
          example: 500
        data_elements_sensitive_unmasked:
          type: integer
          description: The number of sensitive data elements that have not been masked.
          format: int64
          example: 100
        records_total:
          type: integer
          description: The total number of records from this connector.
          format: int64
          example: 10000
        records_not_sensitive:
          type: integer
          description: The number of records found to be not sensitive.
          format: int64
          example: 4000
        records_sensitive_masked:
          type: integer
          description: The number of records found to be sensitive and have been masked.
          format: int64
          example: 5000
        records_sensitive_unmasked:
          type: integer
          description: The number of records found to be sensitive and have not been
            masked.
          format: int64
          example: 1000
        tags:
          type: array
          description: The tags of the connector.
          items:
            $ref: '#/components/schemas/Tag'
    DataRiskReportTotals:
      type: object
      properties:
        connector_total:
          type: integer
          description: The total number of connectors.
          format: int64
          example: 10
        profiled_connector_count:
          type: integer
          description: The number of connectors that have been profiled.
          format: int64
          example: 8
        sensitive_connector_count:
          type: integer
          description: The number of connectors found to have sensitive data.
          format: int64
          example: 5
        masked_connector_count:
          type: integer
          description: The number of connectors having had a successfully run masking
            job.
          format: int64
          example: 3
        at_risk_connector_count:
          type: integer
          description: The number of connectors with sensitive data that have not
            been masked.
          format: int64
          example: 2
        data_elements_total:
          type: integer
          description: The total number of data elements across connectors.
          format: int64
          example: 1000
        data_elements_not_sensitive:
          type: integer
          description: The number of data elements categorized as not sensitive.
          format: int64
          example: 400
        data_elements_sensitive_masked:
          type: integer
          description: The number of sensitive data elements that have been masked.
          format: int64
          example: 500
        data_elements_sensitive_unmasked:
          type: integer
          description: The number of sensitive data elements that have not been masked.
          format: int64
          example: 100
        records_total:
          type: integer
          description: The total number of records across connectors.
          format: int64
          example: 10000
        records_not_sensitive:
          type: integer
          description: The number of records found to be not sensitive.
          format: int64
          example: 4000
        records_sensitive_masked:
          type: integer
          description: The number of sensitive records that have been masked.
          format: int64
          example: 5000
        records_sensitive_unmasked:
          type: integer
          description: The number of sensitive records that have not been masked.
          format: int64
          example: 1000
        records_coverage_missing_reason:
          type: string
          description: An explanation if the records coverage is not provided.
      description: The global totals of masking data risk metrics across all connectors.
    DatabaseColumnMetadata:
      type: object
      properties:
        id:
          type: integer
          description: The id of this column metadata.
          format: int64
          example: 10
        column_name:
          type: string
          description: The name of the column.
          example: my_column
        database_table_metadata_id:
          type: integer
          description: The id of the database table metadata that this column belongs
            to.
          format: int64
          example: 30
        table_name:
          type: string
          description: The name of the table that this column belongs to.
          example: profile
        rule_set_id:
          type: string
          description: The id of the rule set that this column metadata belongs to.
          example: 4ed2357d-f1a7-410c-b951-90f0edc1a0f6
        rule_set_name:
          type: string
          description: The name of the rule set that this table metadata belongs to.
          example: my rule set
        engine_id:
          type: string
          description: The id of the engine associated with this column.
          example: 5ff0dab4-368c-4d57-8b61-9a09b6e80f42
        engine_name:
          type: string
          description: The name of the engine associated with this column.
          example: my engine
        algorithm_id:
          type: string
          description: The id of the algorithm associated with this column.
          example: 7a1b2c3d-e4f5-4a6b-8c7d-9e0f1a2b3c4d
        algorithm_name:
          type: string
          description: The name of the algorithm associated with this column.
          example: My Secure Lookup
        data_class_id:
          type: string
          description: The id of the data class associated with this column.
          example: 6b5c4d3e-2a1b-4c3d-5e6f-7a8b9c0d1e2f
        data_class_name:
          type: string
          description: The name of the data class associated with this column.
          example: My Domain
        data_type:
          type: string
          description: The data type of the column.
          example: VARCHAR
        date_format:
          type: string
          description: The format of the date stored in the column.
          example: YYYY-MM-DD
        column_length:
          type: integer
          description: The length of the column.
          format: int32
          example: 255
        is_sensitive:
          type: boolean
          description: This field indicates whether or not a column has sensitive
            data.
        is_profiler_writable:
          type: boolean
          description: Indicates whether this column is writable by the profiler.
        is_primary_key:
          type: boolean
          description: Indicates whether this column is a primary key.
        is_identity:
          type: boolean
          description: Indicates whether this column is an identity column.
        is_index:
          type: boolean
          description: Indicates whether this column is indexed.
        is_foreign_key:
          type: boolean
          description: Indicates whether this column is a foreign key.
      description: An object describing a database column metadata with some settings.
    DatabaseConnectivityCheckParameters:
      title: DatabaseConnectivityCheckParameters
      required:
      - credentials_type
      - source_id
      type: object
      properties:
        credentials_type:
          type: string
          description: The type of credentials.
          enum:
          - MSSQL_ENVIRONMENT_USER
          - MSSQL_DOMAIN_USER
          - MSSQL_DATABASE_USER
          - ORACLE
          - ASE
          - SOURCE_CONFIG
        source_id:
          type: string
          description: Source database config Id.
          example: 1-SOURCE-CONFIG-1
        username:
          type: string
          description: Database username (Not applicable for MSSQL_ENVIRONMENT_USER).
          example: username
        password:
          type: string
          description: Database password (Not applicable for MSSQL_ENVIRONMENT_USER
            and mutually exclusive with vault attributes).
          example: password
          x-dct-toolkit-credential-field: true
        vault:
          maxLength: 256
          minLength: 1
          type: string
          description: The name or reference of the vault from which to read the database
            credentials (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          example: my-vault
        hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored (ORACLE, ASE
            and MSSQL_DOMAIN_USER only).
          example: kv
        hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored (ORACLE,
            ASE and MSSQL_DOMAIN_USER only).
          example: oracle-env
        hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Hashicorp vault key for the username in the key-value store
            (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          example: username
        hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Hashicorp vault key for the password in the key-value store
            (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          example: secret
        azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          example: azure_vault
        azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store (ORACLE,
            ASE and MSSQL_DOMAIN_USER only).
          example: username
        azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store (ORACLE,
            ASE and MSSQL_DOMAIN_USER only).
          example: secret
        cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault (ORACLE, ASE
            and MSSQL_DOMAIN_USER only).
          example: Safe=Test;Folder=Test;Object=Test
        environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the environment to which environment user belongs (MSSQL_ENVIRONMENT_USER
            only).
        environment_user:
          maxLength: 256
          minLength: 1
          type: string
          description: Reference to the environment user (MSSQL_ENVIRONMENT_USER only).
      description: Parameters to test JDBC connectivity to source configs.
    DatabaseTableMetadata:
      type: object
      properties:
        id:
          type: integer
          description: The id of this table metadata.
          format: int64
          example: 10
        table_name:
          type: string
          description: The name of the table.
          example: my table
        rule_set_id:
          type: string
          description: The id of the rule set that this table metadata belongs to.
          example: 4ed2357d-f1a7-410c-b951-90f0edc1a0f6
        rule_set_name:
          type: string
          description: The name of the rule set that this table metadata belongs to.
          example: my rule set
        custom_sql:
          type: string
          description: Custom SQL for the table.
        where_clause:
          type: string
          description: SQL where clause for the table.
        having_clause:
          type: string
          description: SQL having clause for the table.
        key_column:
          type: string
          description: Key Column for the table.
        is_sensitive:
          type: boolean
          description: This field indicates whether or not a table has sensitive data.
            This field is assigned by DCT to true or false based on whether the table
            is assigned an algorithm and domain.
        row_count:
          type: integer
          format: int64
        last_refresh_time:
          type: string
          format: date-time
        last_row_count_time:
          type: string
          format: date-time
        engine_id:
          type: string
          description: The id of the engine associated with this column.
          example: 5ff0dab4-368c-4d57-8b61-9a09b6e80f42
        engine_name:
          type: string
          description: The name of the engine associated with this column.
          example: my engine
      description: An object describe a database table of a rule set with some settings.
    DatabaseTemplate:
      required:
      - name
      - source_type
      type: object
      properties:
        id:
          type: string
          description: The DatabaseTemplate entity ID.
          readOnly: true
          example: 1-database-template-123
        name:
          minLength: 1
          type: string
          description: The DatabaseTemplate name.
          example: template-name
        description:
          type: string
          description: User provided description for this template.
          example: Config params for prod01
        source_type:
          type: string
          description: The type of the source associated with the template.
          example: OracleVirtualSource
          enum:
          - OracleVirtualSource
          - OracleLinkedSource
          - MSSqlVirtualSource
          - MSSqlLinkedSource
        parameters:
          type: object
          additionalProperties:
            type: string
          description: A name/value map of string configuration parameters.
          example:
            configName1: configValue1
            configName2: configValue2
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: A database template to use for provisioning and refresh. If set,
        configParams will be ignored on provision or refresh.
    DatabaseTemplateCreateParameters:
      required:
      - name
      - source_type
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The DatabaseTemplate name.
          example: template-name
        description:
          type: string
          description: User provided description for this template.
          example: Config params for prod01
        source_type:
          type: string
          description: The type of the source associated with the template.
          example: OracleVirtualSource
          enum:
          - OracleVirtualSource
          - OracleLinkedSource
          - MSSqlVirtualSource
          - MSSqlLinkedSource
        parameters:
          type: object
          additionalProperties:
            type: string
          description: A name/value map of string configuration parameters.
          example:
            confgName1: configValue1
            configName2: configValue2
        make_current_account_owner:
          type: boolean
          description: Whether the account creating this database template must be
            configured as owner of the database template.
          default: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: Parameters to create a database template.
    DatasetGroup:
      type: object
      properties:
        id:
          type: string
          description: The dataset group ID.
          example: 1-GROUP-1
        name:
          type: string
          description: The name of this dataset group.
          example: Untitled
        namespace_id:
          type: string
          description: The namespace id of this dataset group.
          example: 1-NAMESPACE-1
        namespace_name:
          type: string
          description: The namespace name of this dataset group.
          example: test-engine-1
        is_replica:
          type: boolean
          description: Is this a replicated object.
          example: true
        engine_id:
          type: string
          description: Id of the Engine that this dataset group belongs to.
          example: '1'
        engine_name:
          type: string
          description: Name of the Engine that this dataset group belongs to.
          example: Engine-1
        namespace:
          type: string
          description: The namespace of this dataset group.
          example: ns-1
      description: A Delphix engine dataset group.
    DeleteCDBParameters:
      type: object
      properties:
        force:
          type: boolean
          description: Whether to continue the operation upon failures.
          default: false
      description: Parameters to delete a CDB.
    DeleteDSourceRequest:
      required:
      - dsource_id
      properties:
        dsource_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the dSource to delete.
        force:
          type: boolean
          description: Flag indicating whether to continue the operation upon failures.
          default: false
        oracle_username:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the privileged user to run the delete operation
            as (Oracle only).
          example: oracle-username
        oracle_password:
          maxLength: 256
          minLength: 1
          type: string
          description: Password for privileged user (Oracle only).
          example: oracle-password
          x-dct-toolkit-credential-field: true
    DeleteDSourceResponse:
      allOf:
      - $ref: '#/components/schemas/Job'
      - type: object
        properties:
          job:
            $ref: '#/components/schemas/Job'
    DeleteScopeObjectTags:
      type: object
      properties:
        tags:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: List of scope tags to be deleted
          items:
            $ref: '#/components/schemas/ScopeTag'
    DeleteScopedObjectItem:
      required:
      - objects
      type: object
      properties:
        objects:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: List of scoped objects to be deleted
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
    DeleteTag:
      type: object
      properties:
        key:
          maxLength: 4000
          minLength: 1
          type: string
          description: Key of the tag
          example: key-1
        value:
          maxLength: 4000
          minLength: 1
          type: string
          description: Value of the tag
          example: value-1
        tags:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: List of tags to be deleted
          items:
            $ref: '#/components/schemas/Tag'
    DeleteVCDBParameters:
      type: object
      properties:
        force:
          type: boolean
          description: Whether to continue the operation upon failures.
          default: false
      description: Parameters to delete a vCDB.
    DeleteVDBParameters:
      type: object
      properties:
        force:
          type: boolean
          description: Whether to continue the operation upon failures.
          default: false
      description: Parameters to delete a VDB.
    Dependency:
      type: object
      properties:
        child_id:
          type: string
          description: The ID of the child entity.
          example: aec2d976-6b7e-43f4-9212-90f4dc6e324fff
        child_name:
          type: string
          description: The name of the child entity.
          example: My File
        child_type:
          type: string
          description: The type of the child entity.
          example: MASKING_FILE_UPLOAD
      description: A dependency relationship.
    DisableCDBParameters:
      type: object
      properties:
        attempt_cleanup:
          type: boolean
          description: Whether to attempt a cleanup of the CDB before the disable.
          default: true
      description: Parameters to disable a CDB.
    DisableDsourceParameters:
      type: object
      properties:
        attempt_cleanup:
          type: boolean
          description: Whether to attempt a cleanup of the database from the environment
            before the disable.
          default: true
    DisableVCDBParameters:
      type: object
      properties:
        attempt_cleanup:
          type: boolean
          description: Whether to attempt a cleanup of the vCDB before the disable.
          default: true
      description: Parameters to disable a vCDB.
    DisableVDBGroupParameters:
      type: object
      properties:
        vdb_disable_param_mappings:
          type: array
          items:
            $ref: '#/components/schemas/VDBDisableParametersMapping'
      description: Parameters to disable a VDB Group.
    DisableVDBParameters:
      type: object
      properties:
        attempt_cleanup:
          type: boolean
          description: Whether to attempt a cleanup of the VDB before the disable.
          default: true
      description: Parameters to disable a VDB.
    DiscoveryExpression:
      type: object
      properties:
        id:
          type: string
          description: The id of the discovery expression.
          example: 5ff0dab4-368c-4d57-8b61-9a09b6e80f42
        name:
          type: string
          description: The name of the discovery expression.
          example: my expression
        regular_expression:
          type: string
          description: The regular expression that will be used to match against column/field
            names or data values during the execution of a discovery job. Only applicable
            for SEARCH expressions.
          example: .*
        data_level_profiling:
          type: boolean
          description: This field determines whether the discovery expression will
            be targeted at the underlying data in a data source (e.g. row values in
            the database column / field values in the file), or whether the discovery
            expression will be targeted at the schema of the data source (e.g. column
            names in a database table or field names in a file). Data-Level profiling
            consumes more memory than Column-Name-Level/Field-Name-Level profiling
            due to the fact that the discovery expression must be checked against
            a larger number of data values (e.g. hundreds) than column/field names
            (i.e. one). Only applicable for SEARCH expressions.
          example: true
        min_data_length:
          type: integer
          description: Minimum length of the value for string types. Only applicable
            for TYPE expressions.
          example: 1
        engine_id:
          type: string
          description: The id of the engine associated with this discovery expression.
          example: 5ff0dab4-368c-4d57-8b61-9a09b6e80f42
        engine_name:
          type: string
          description: The name of the engine associated with this discovery expression.
          example: my engine
        data_class_id:
          type: string
          description: The id of the data class associated with this discovery expression.
          example: 6b5c4d3e-2a1b-4c3d-5e6f-7a8b9c0d1e2f
        data_class_name:
          type: string
          description: The name of the data class associated with this discovery expression.
          example: My Domain
        data_type:
          type: string
          description: Data type to apply a constraint to. Only applicable for TYPE
            expressions.
          example: String
          enum:
          - String
          - Number
          - Date
          - Binary
        expression_type:
          type: string
          description: The type of the discovery expression.
          example: SEARCH
          enum:
          - SEARCH
          - TYPE
        level:
          type: string
          description: The level of data sources this discovery expression will be
            targeted.
          example: DATA
          enum:
          - DATA
          - COLUMN
          - TYPE
        tags:
          type: array
          description: The tags of this discovery expression.
          items:
            $ref: '#/components/schemas/Tag'
    DiscoveryPolicy:
      type: object
      properties:
        id:
          type: string
          description: The discovery policy ID.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          type: string
          description: The name of this discovery policy.
          example: ASDD Standard
        description:
          type: string
          description: A description of this discovery policy.
          nullable: true
        discovery_method:
          type: string
          description: The method used to discover sensitive data.
          example: CLASSIFIERS
          enum:
          - CLASSIFIERS
          - EXPRESSIONS
        assignment_threshold:
          type: integer
          description: The confidence threshold that must be met or exceeded to make
            an assignment. This is an integer from 1-100.
          format: int32
          example: 80
        engine_id:
          type: string
          description: The ID of the engine that this discovery policy originated
            from.
          nullable: true
        engine_name:
          type: string
          description: The name of the engine that this discovery policy originated
            from.
          nullable: true
        tags:
          type: array
          description: The tags of this discovery policy.
          items:
            $ref: '#/components/schemas/Tag'
      description: A discovery policy.
    Domain:
      type: object
      properties:
        msad_domain_name:
          maxLength: 4000
          minLength: 1
          type: string
          description: This is used to get full DN for authentication and search.
            Provide this value only if server is microsoft AD.
          example: msad.domain.com
        username_pattern:
          maxLength: 4000
          minLength: 1
          type: string
          description: The username_patterns can be used to avoid providing full-dn
            during login. This will also be used for search of groups,email, first
            name and last name.
          example: uid={0},ou=Users
        search_base:
          maxLength: 4000
          minLength: 1
          type: string
          description: Search base used to search for ldap user groups. Leave this
            field empty if a full username_pattern is provided and server is non microsoft
            AD.
          example: DC=test,DC=delphix,DC=com
        group_attr:
          maxLength: 4000
          minLength: 1
          type: string
          description: Group mapped attribute on ldap side used for user group search.
          example: gidNumber
        email_attr:
          maxLength: 4000
          minLength: 1
          type: string
          description: Email mapped attribute on ldap side used for mapping on DCT
            side account.
          example: mail
        first_name_attr:
          maxLength: 4000
          minLength: 1
          type: string
          description: First name attribute mapped on ldap side used for mapping on
            DCT side account.
          example: cn
        last_name_attr:
          maxLength: 4000
          minLength: 1
          type: string
          description: Last name attribute mapped on ldap side used for mapping on
            DCT side account.
          example: sn
        object_class_attr:
          maxLength: 4000
          minLength: 1
          type: string
          description: The name of the objectClass on ldap side under which the user
            is mapped.This is used to search for the user details.
          example: person
        search_attr:
          maxLength: 4000
          minLength: 1
          type: string
          description: Search attribute mapped on ldap side using which search on
            ldap side will be made.
          example: uid
    EffectiveScope:
      properties:
        id:
          type: string
          description: Id of the access group scope.
        name:
          type: string
          description: Name of the access group scope.
    EnableCDBParameters:
      type: object
      properties:
        attempt_start:
          type: boolean
          description: Whether to attempt a startup of the CDB after the enable.
          default: true
      description: Parameters to enable a CDB.
    EnableDsourceParameters:
      type: object
      properties:
        attempt_start:
          type: boolean
          description: Whether to attempt a startup of the source after the enable.
          default: true
      description: The parameters to enable a dSource.
    EnableVCDBParameters:
      type: object
      properties:
        attempt_start:
          type: boolean
          description: Whether to attempt a startup of the vCDB after the enable.
          default: true
      description: Parameters to enable a vCDB.
    EnableVDBGroupParameters:
      type: object
      properties:
        vdb_enable_param_mappings:
          type: array
          items:
            $ref: '#/components/schemas/VDBEnableParametersMapping'
      description: Parameters to enable a VDB Group.
    EnableVDBParameters:
      type: object
      properties:
        attempt_start:
          type: boolean
          description: Whether to attempt a startup of the VDB after the enable.
          default: true
      description: Parameters to enable a VDB.
    Engine:
      properties:
        engine_id:
          maxLength: 4000
          minLength: 1
          type: string
        engine_name:
          maxLength: 4000
          minLength: 1
          type: string
    EngineAutoTaggingConfigUpdateParameters:
      title: EngineAutoTaggingConfigUpdateParameters
      type: object
      properties:
        enable_virtualization_dataset_groups:
          type: boolean
          description: Include dataset group names as tags for dSources, VDBs, and
            vCDBs (key 'dlpx-dataset-group').
          example: true
        enable_masking_environments:
          type: boolean
          description: Include masking environment names as tags for masking Jobs
            and Connectors (key 'dlpx-environment').
          example: true
        enable_masking_applications:
          type: boolean
          description: Include masking app names as tags for masking Jobs and Connectors
            (key 'dlpx-application').
          example: true
        enable_engine_name:
          type: boolean
          description: Include the engine name as a tag on discovered objects (key
            'dlpx-engine').
          example: true
        custom_tags_to_add:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: List of new custom tags to be added to discovered objects.
            These are appended to the AutoTaggingConfig's custom_tags list.
          items:
            $ref: '#/components/schemas/Tag'
        custom_tags_to_remove:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: List of tags to remove from the AutoTaggingConfig's custom_tags
            list (applied AFTER custom_tags_to_add).
          items:
            $ref: '#/components/schemas/Tag'
      description: Configuration settings for auto tagging.
    EngineGlobalObjectStateData:
      properties:
        engine_id:
          type: string
          description: The entity ID of the engine.
          example: 4ed2357d-f1a7-410c-b951-90f0edc1a0f6
        engine_name:
          type: string
          description: The name of the engine.
          example: My favorite engine
        jobs_count:
          type: integer
          description: The number of masking jobs present on the engine.
          format: int32
          example: 10
        connectors_count:
          type: integer
          description: The number of connectors present on the engine.
          format: int32
          example: 25
        rulesets_count:
          type: integer
          description: The number of rulesets present on the engine.
          format: int32
          example: 25
        global_object_revision_hash:
          type: string
          description: The revisionHash of the GLOBAL_OBJECT.
          example: dfb515e3d9727eebf499cb252b417efc926bad0b
    EngineHistoricalStorageSummary:
      properties:
        engine_id:
          type: string
        engine_name:
          type: string
        historical_data_points:
          type: array
          items:
            $ref: '#/components/schemas/StorageSummaryHistoricalDataPoint'
        projected_data_points:
          type: array
          items:
            $ref: '#/components/schemas/StorageSummaryProjectedDataPoint'
    EngineIdBody:
      type: object
      properties:
        engine_id:
          minLength: 1
          type: string
          example: '1'
      description: The ID of the registered engine.
    EnginePerformanceAnalytic:
      type: object
      properties:
        engine_name:
          type: string
          description: The engine name.
        engine_id:
          type: string
          description: The engine id.
        engine_type:
          type: string
          description: The engine type.
          enum:
          - VIRTUALIZATION
          - MASKING
          - UNSET
        aggregation_period:
          type: integer
          description: The time period by which engine performance analytics data
            is being aggregated, in hours.
        cpu_cores_count:
          type: integer
          description: The total number of CPU cores on this engine.
        cpu_utilization:
          type: number
          description: The total cpu utilization of this engine, in percentage.
          format: double
        total_memory:
          type: integer
          description: The total amount of memory on this engine, in bytes.
          format: int64
        average_disk_latency_read:
          type: integer
          description: The average I/O latency of disk for read operation, in nanoseconds.
          format: int64
        average_disk_latency_write:
          type: integer
          description: The average I/O latency of disk for write operation, in nanoseconds.
          format: int64
        average_disk_latency_total:
          type: integer
          description: The average I/O latency of disk for both (read and write) operations,
            in nanoseconds.
          format: int64
        average_disk_throughput_read:
          type: integer
          description: The average I/O throughput of disk for read operation, in bytes/s.
          format: int64
        average_disk_throughput_write:
          type: integer
          description: The average I/O throughput of disk for write operation, in
            bytes/s.
          format: int64
        average_disk_throughput_total:
          type: integer
          description: The average I/O throughput of disk for both (read and write)
            operations, in bytes/s.
          format: int64
        average_disk_iops_read:
          type: integer
          description: The average number of read I/O operations of disk per seconds.
          format: int64
        average_disk_iops_write:
          type: integer
          description: The average number of write I/O operations of disk per seconds.
          format: int64
        average_disk_iops_total:
          type: integer
          description: The average number of read and write I/O operations of disk
            per seconds.
          format: int64
        average_nfs_latency_read:
          type: integer
          description: The average I/O latency of nfs for read operation, in nanoseconds.
          format: int64
        average_nfs_latency_write:
          type: integer
          description: The average I/O latency of nfs for write operation, in nanoseconds.
          format: int64
        average_nfs_latency_total:
          type: integer
          description: The average I/O latency of nfs for both (read and write) operation,
            in nanoseconds.
          format: int64
        average_nfs_throughput_read:
          type: integer
          description: The average I/O throughput of disk for read operations, in
            bytes/s.
          format: int64
        average_nfs_throughput_write:
          type: integer
          description: The average I/O throughput of nfs for write operations, in
            bytes/s.
          format: int64
        average_nfs_throughput_total:
          type: integer
          description: The average I/O throughput of nfs for both (read and write)
            operations, in bytes/s.
          format: int64
        average_nfs_iops_read:
          type: integer
          description: The average number of read I/O operations of nfs per seconds.
          format: int64
        average_nfs_iops_write:
          type: integer
          description: The average number of write I/O operations of nfs per seconds.
          format: int64
        average_nfs_iops_total:
          type: integer
          description: The average number of read and write I/O operations of nfs
            per seconds.
          format: int64
        average_iscsi_latency_read:
          type: integer
          description: The average I/O latency of iSCSI for read operation, in nanoseconds.
          format: int64
        average_iscsi_latency_write:
          type: integer
          description: The average I/O latency of iSCSI for write operation, in nanoseconds.
          format: int64
        average_iscsi_latency_total:
          type: integer
          description: The average I/O latency of iSCSI for both (read and write)
            operation, in nanoseconds.
          format: int64
        average_iscsi_throughput_read:
          type: integer
          description: The average I/O throughput of iSCSI read operations, in bytes/s.
          format: int64
        average_iscsi_throughput_write:
          type: integer
          description: The average I/O throughput of iSCSI for write operations, in
            bytes/s.
          format: int64
        average_iscsi_throughput_total:
          type: integer
          description: The average I/O throughput of iSCSI for both (read and write)
            operations, in bytes/s.
          format: int64
        average_iscsi_iops_read:
          type: integer
          description: The average number of read I/O operations of iSCSI per seconds.
          format: int64
        average_iscsi_iops_write:
          type: integer
          description: The average number of write I/O operations of iSCSI per seconds.
          format: int64
        average_iscsi_iops_total:
          type: integer
          description: The average number of read and write I/O operations of iSCSI
            per seconds.
          format: int64
        average_network_throughput_transmit:
          type: integer
          description: The average bytes transmitted on the network interface, in
            bytes/s.
          format: int64
        average_network_throughput_receive:
          type: integer
          description: The average bytes received on the network interface, in bytes/s.
          format: int64
      description: Analytics Information of the engine.
    EnginePerformanceAnalyticTrend:
      type: object
      properties:
        trend_type:
          type: string
          example: CPU_UTILIZATION
          enum:
          - CPU_UTILIZATION
          - NETWORK_THROUGHPUT_TRANSMIT
          - NETWORK_THROUGHPUT_RECEIVE
          - DISK_LATENCY_WRITE
          - DISK_LATENCY_READ
          - DISK_LATENCY_TOTAL
          - DISK_THROUGHPUT_WRITE
          - DISK_THROUGHPUT_READ
          - DISK_THROUGHPUT_TOTAL
          - DISK_IOPS_READ
          - DISK_IOPS_WRITE
          - DISK_IOPS_TOTAL
          - NFS_LATENCY_WRITE
          - NFS_LATENCY_READ
          - NFS_LATENCY_TOTAL
          - NFS_THROUGHPUT_WRITE
          - NFS_THROUGHPUT_READ
          - NFS_THROUGHPUT_TOTAL
          - NFS_IOPS_WRITE
          - NFS_IOPS_READ
          - NFS_IOPS_TOTAL
          - iSCSI_LATENCY_WRITE
          - iSCSI_LATENCY_READ
          - iSCSI_LATENCY_TOTAL
          - iSCSI_THROUGHPUT_WRITE
          - iSCSI_THROUGHPUT_READ
          - iSCSI_THROUGHPUT_TOTAL
          - iSCSI_IOPS_WRITE
          - iSCSI_IOPS_READ
          - iSCSI_IOPS_TOTAL
        engine_id:
          type: string
          description: The engine id.
        aggregation_period:
          type: integer
          description: The time period by which engine performance analytics data
            is being aggregated, in hours.
          example: 6
        datapoint:
          type: array
          items:
            type: object
            properties:
              data:
                type: integer
                format: int64
              time:
                type: string
                format: date-time
    EngineRegistrationParameter:
      title: EngineRegistrationParameter
      required:
      - hostname
      - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
        hostname:
          maxLength: 256
          minLength: 1
          type: string
        username:
          maxLength: 256
          minLength: 1
          type: string
          description: The virtualization domain admin username.
          nullable: true
        password:
          maxLength: 4096
          minLength: 1
          type: string
          description: The virtualization domain admin password.
          nullable: true
          x-dct-toolkit-credential-field: true
        masking_username:
          maxLength: 256
          minLength: 1
          type: string
          description: The masking admin username.
          nullable: true
        masking_password:
          maxLength: 4096
          minLength: 1
          type: string
          description: The masking admin password.
          nullable: true
          x-dct-toolkit-credential-field: true
        hashicorp_vault_username_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: Arguments to pass to the Vault CLI tool to retrieve the virtualzation
            username for the engine.
          nullable: true
          example:
          - kv
          - get
          - -field=username
          - kv-v2/delphix-secrets/delphixUser
          items:
            maxLength: 4096
            minLength: 1
            type: string
        hashicorp_vault_masking_username_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: Arguments to pass to the Vault CLI tool to retrieve the masking
            username for the engine.
          nullable: true
          example:
          - - kv
            - get
            - -field=username
            - kv-v2/delphix-secrets/delphixUser
          items:
            maxLength: 4096
            minLength: 1
            type: string
        hashicorp_vault_password_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: Arguments to pass to the Vault CLI tool to retrieve the virtualization
            password for the engine.
          nullable: true
          example:
          - kv
          - get
          - -field=password
          - kv-v2/delphix-secrets/delphixUser
          items:
            maxLength: 4096
            minLength: 1
            type: string
        hashicorp_vault_masking_password_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: Arguments to pass to the Vault CLI tool to retrieve the masking
            password for the engine.
          nullable: true
          example:
          - - kv
            - get
            - -field=password
            - kv-v2/delphix-secrets/delphixUser
          items:
            maxLength: 4096
            minLength: 1
            type: string
        hashicorp_vault_id:
          type: integer
          description: Reference to the Hashicorp vault to use to retrieve virtualization
            engine credentials.
          format: int64
          nullable: true
        masking_hashicorp_vault_id:
          type: integer
          description: Reference to the Hashicorp vault to use to retrieve masking
            engine credentials.
          format: int64
          nullable: true
        insecure_ssl:
          type: boolean
          description: |
            Allow connections to the engine over HTTPs without validating the TLS certificate. Even though
            the connection to the engine might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the engine's certificate,
            and set the truststore_filename property.
          default: false
        unsafe_ssl_hostname_check:
          type: boolean
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs.
            Setting this value must only be done if the TLS certificate of the engine does not match the hostname,
            and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          default: false
        truststore_filename:
          maxLength: 1024
          minLength: 1
          pattern: ^[a-zA-Z0-9_\.\-]+$
          type: string
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          nullable: true
        truststore_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Password to read the truststore.
          nullable: true
          x-dct-toolkit-credential-field: true
        auto_tagging_config:
          $ref: '#/components/schemas/AutoTaggingConfig'
        tags:
          type: array
          description: The tags to be created for this engine.
          items:
            $ref: '#/components/schemas/Tag'
      description: Parameters to register and authenticate an engine.
    Environment:
      type: object
      properties:
        id:
          type: string
          description: The Environment object entity ID.
          example: environment-123
        name:
          type: string
          description: The name of this environment.
          example: Linux Test Host
        namespace_id:
          type: string
          description: The namespace id of this environment.
          example: 1-NAMESPACE-1
        namespace_name:
          type: string
          description: The namespace name of this environment.
          example: test-engine-1
        is_replica:
          type: boolean
          description: Is this a replicated object.
          example: true
        namespace:
          type: string
          description: The namespace of this environment for replicated and restored
            objects.
          nullable: true
          example: NAMESPACE-1
        engine_id:
          type: string
          description: A reference to the Engine that this Environment connection
            is associated with.
          example: engine-123
        enabled:
          type: boolean
          description: True if this environment is enabled.
          example: true
        is_cluster:
          type: boolean
          description: True if this environment is a cluster of hosts.
          example: false
        cluster_home:
          type: string
          description: Cluster home for RAC environment.
          example: /u01/app/12.2.0.1/grid
        is_windows_target:
          type: boolean
          description: True if this windows environment is a target environment.
          example: false
        staging_environment:
          type: string
          description: ID of the staging environment.
          example: 1-WINDOWS_HOST-8
        hosts:
          type: array
          description: The hosts that are part of this environment.
          items:
            $ref: '#/components/schemas/Host'
        tags:
          type: array
          description: The tags to be created for this environment.
          items:
            $ref: '#/components/schemas/Tag'
        repositories:
          type: array
          description: Repositories associated with this environment. A Repository
            typically corresponds to a database installation.
          items:
            $ref: '#/components/schemas/Repository'
        listeners:
          type: array
          description: Oracle listeners associated with this environment.
          items:
            $ref: '#/components/schemas/OracleListener'
        os_type:
          type: string
          description: The operating system type of this environment.
          enum:
          - UNIX
          - WINDOWS
      description: A grouping of a single host or a cluster of hosts.
    EnvironmentCreateParameters:
      required:
      - engine_id
      - hostname
      - os_name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the environment.
          example: oracle-environment
        engine_id:
          type: string
          description: The ID of the Engine onto which to create the environment.
          example: '12'
        os_name:
          type: string
          description: Operating system type of the environment.
          example: UNIX
          enum:
          - UNIX
          - WINDOWS
        is_cluster:
          type: boolean
          description: Whether the environment to be created is a cluster.
          example: true
          default: false
        cluster_home:
          maxLength: 256
          minLength: 1
          type: string
          description: Absolute path to cluster home drectory. This parameter is mandatory
            for UNIX cluster environments.
          example: /u01/app/19.0.0.0/grid
        hostname:
          maxLength: 256
          minLength: 1
          type: string
          description: host address of the machine.
          example: db.host.com
        staging_environment:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the connector environment which is used to connect to
            this source environment. This is mandatory parameter when creating Windows
            source environments.
          example: 1-WINDOWS_HOST-1
        connector_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: Specify port on which Delphix connector will run. This is mandatory
            parameter when creating Windows target environments.
          format: int32
          example: 9100
        connector_authentication_key:
          type: string
          description: Unique per Delphix key used to authenticate with the remote
            Delphix Connector.
          example: secret
        is_target:
          type: boolean
          description: Whether the environment to be created is a target cluster environment.
            This property is used only when creating Windows cluster environments.
          example: true
        ssh_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: ssh port of the host.
          format: int64
          example: 22
          default: 22
        toolkit_path:
          maxLength: 256
          minLength: 1
          type: string
          description: The path for the toolkit that resides on the host.
          example: /work
        username:
          maxLength: 256
          minLength: 1
          type: string
          description: Username of the OS.
          example: oracle
        password:
          maxLength: 256
          minLength: 1
          type: string
          description: Password of the OS.
          example: oracle
          x-dct-toolkit-credential-field: true
        vault:
          maxLength: 256
          minLength: 1
          type: string
          description: The name or reference of the vault from which to read the host
            credentials.
          example: my-vault
        vault_username:
          maxLength: 256
          minLength: 1
          type: string
          description: Delphix display name for the vault user
          example: my-vault-user
        hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
          example: kv
        hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
          example: oracle-env
        hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the username in the key-value store.
          example: username
        hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the password in the key-value store.
          example: secret
        cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
          example: Safe=Test;Folder=Test;Object=Test
        azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name.
          example: azure_vault
        azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store.
          example: username
        azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store.
          example: secret
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
        nfs_addresses:
          type: array
          description: array of ip address or hostnames
          example:
          - 192.168.10.2
          items:
            maxLength: 256
            minLength: 1
            type: string
        ase_db_vault_username:
          maxLength: 256
          minLength: 1
          type: string
          description: Delphix display name for the vault user
          example: user-123
        ase_db_username:
          maxLength: 256
          minLength: 1
          type: string
          description: username of the SAP ASE database.
          example: user-123
        ase_db_password:
          maxLength: 256
          minLength: 1
          type: string
          description: password of the SAP ASE database.
          example: test
          x-dct-toolkit-credential-field: true
        ase_db_vault:
          maxLength: 256
          minLength: 1
          type: string
          description: The name or reference of the vault from which to read the ASE
            database credentials.
          example: my-vault
        ase_db_hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
          example: kv
        ase_db_hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
          example: oracle-env
        ase_db_hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the username in the key-value store.
          example: username
        ase_db_hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the password in the key-value store.
          example: secret
        ase_db_cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
          example: Safe=Test;Folder=Test;Object=Test
        ase_db_use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication for ASE DB discovery.
          example: true
        ase_db_azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name.
          example: azure_vault
        ase_db_azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store.
          example: username
        ase_db_azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store.
          example: secret
        java_home:
          maxLength: 256
          minLength: 1
          type: string
          description: The path to the user managed Java Development Kit (JDK). If
            not specified, then the OpenJDK will be used.
          example: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
        dsp_keystore_path:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP keystore path.
          example: /tmp/keystore.keystore
        dsp_keystore_password:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP keystore password.
          example: temp123
          x-dct-toolkit-credential-field: true
        dsp_keystore_alias:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP keystore alias.
          example: oracle-src
        dsp_truststore_path:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP truststore path.
          example: /tmp/truststore.keystore
        dsp_truststore_password:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP truststore password.
          example: truststore123
          x-dct-toolkit-credential-field: true
        description:
          maxLength: 1024
          minLength: 1
          type: string
          description: The environment description.
          example: Unix Orcale source host
        tags:
          maxItems: 1000
          minItems: 1
          type: array
          description: The tags to be created for this environment.
          items:
            $ref: '#/components/schemas/Tag'
        make_current_account_owner:
          type: boolean
          description: Whether the account creating this environment must be configured
            as owner of the environment.
          default: true
    EnvironmentRepository:
      description: A repository corresponding to the environment.
      allOf:
      - $ref: '#/components/schemas/Repository'
      - type: object
        properties:
          environment_id:
            type: string
            description: The environment ID.
    EnvironmentUpdateParameters:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the environment.
          example: oracle-environment
        staging_environment:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the connector environment which is used to connect to
            this source environment.
          example: 1-WINDOWS_HOST-1
        cluster_address:
          maxLength: 256
          minLength: 1
          type: string
          description: Address of the cluster. This property can be modified for Windows
            cluster only.
          example: db.host.com
        cluster_home:
          maxLength: 256
          minLength: 1
          type: string
          description: Absolute path to cluster home directory. This parameter is
            for UNIX cluster environments.
          example: /u01/app/19.0.0.0/grid
        ase_db_username:
          maxLength: 256
          minLength: 1
          type: string
          description: username of the SAP ASE database.
          example: user-123
        ase_db_password:
          maxLength: 256
          minLength: 1
          type: string
          description: password of the SAP ASE database.
          example: test
          x-dct-toolkit-credential-field: true
        ase_db_vault:
          maxLength: 256
          minLength: 1
          type: string
          description: The name or reference of the vault from which to read the ASE
            database credentials.
          example: my-vault
        ase_db_vault_username:
          maxLength: 256
          minLength: 1
          type: string
          description: Delphix display name for the vault user
          example: user-123
        ase_db_hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
          example: kv
        ase_db_hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
          example: oracle-env
        ase_db_hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the username in the key-value store.
          example: username
        ase_db_hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the password in the key-value store.
          example: secret
        ase_db_cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
          example: Safe=Test;Folder=Test;Object=Test
        ase_db_azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name.
          example: azure_vault
        ase_db_azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store.
          example: username
        ase_db_azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store.
          example: secret
        ase_db_use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication for ASE DB discovery.
          example: true
        description:
          maxLength: 1024
          minLength: 1
          type: string
          description: The environment description.
          example: Unix Orcale source host
    EnvironmentUser:
      type: object
      properties:
        user_ref:
          maxLength: 4000
          minLength: 1
          type: string
          description: Environment user reference
          example: user-ref-1
        username:
          maxLength: 4000
          minLength: 1
          type: string
          description: Username of environment user
          example: username-1
        primary_user:
          type: boolean
          description: This indicates if this user is primary or not
          example: false
        auth_type:
          type: string
          description: Authentication type of this user. PasswordCredential indicates
            username and password are used, SystemKeyCredential indicates public key
            based security credential, KeyPairCredential indicates public key based
            security credential consisting of a user specified key pair, KerberosCredential
            indicates Kerberos authentication, CyberArkVaultCredential indicates CyberArk
            Vault is used and HashiCorpVaultCredential indicates that Hashicorp vault
            is used for authentication
          enum:
          - PasswordCredential
          - SystemKeyCredential
          - KeyPairCredential
          - KerberosCredential
          - CyberArkVaultCredential
          - HashiCorpVaultCredential
          - AzureVaultCredential
    EnvironmentUserParams:
      properties:
        username:
          maxLength: 256
          minLength: 1
          type: string
          description: Username of the OS.
          example: oracle
        password:
          maxLength: 256
          minLength: 1
          type: string
          description: Password of the OS.
          example: oracle
          x-dct-toolkit-credential-field: true
        vault:
          maxLength: 256
          minLength: 1
          type: string
          description: The name or reference of the vault from which to read the host
            credentials.
          example: my-vault
        vault_username:
          maxLength: 256
          minLength: 1
          type: string
          description: Delphix display name for the vault user
          example: my-vault-user
        hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
          example: kv
        hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
          example: oracle-env
        hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the username in the key-value store.
          example: username
        hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the password in the key-value store.
          example: secret
        cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
          example: Safe=Test;Folder=Test;Object=Test
        azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name.
          example: azure_vault
        azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store.
          example: username
        azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store.
          example: secret
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
    Error:
      type: object
      properties:
        message:
          type: string
          description: Message providing more detail about the error that occurred,
            if available.
          readOnly: true
        object_name:
          type: string
          description: Name of the object affected by the error.
          readOnly: true
    ErrorResponse:
      properties:
        error:
          maxLength: 1024
          minLength: 1
          type: string
          description: Error code for any failure
        error_description:
          maxLength: 1024
          minLength: 1
          type: string
          description: Error description for any failure
    Errors:
      type: array
      description: Sadly, sometimes requests to the API are not successful. Failures
        can occur for a wide range of reasons. The Errors object contains information
        about full or partial failures which might have occurred during the request.
      items:
        $ref: '#/components/schemas/Error'
    ExecuteComplianceJobRequest:
      type: object
      description: Parameters to execute a compliance job.
    ExecuteMaskingJobParameters:
      type: object
      properties:
        engine_id:
          minLength: 1
          type: string
          description: The ID of the Engine to execute this MaskingJob on (Standard
            job only).
          example: engine-123
      description: Parameters to execute a MaskingJob.
    Execution:
      type: object
      properties:
        id:
          type: string
          description: The Execution entity ID.
          example: 414ed52c-fa89-455d-9fb9-9c2fa5115f80
        engine_id:
          type: string
          description: The ID of the engine where this execution ran.
          example: '1'
        hyperscale_instance_id:
          type: string
        engine_name:
          type: string
          description: The name of the engine where this execution ran.
          example: prod01
        masking_job_id:
          type: string
          description: The ID of the masking job that is being executed.
          example: '2'
        masking_job_name:
          type: string
          description: The name of the masking job that is being executed.
          example: finance-masking-job
        source_connector_id:
          type: string
          description: The ID of the source connector. This field is only used for
            multi-tenant jobs that are also on-the-fly.
          example: 1-DATABASE-2
        target_connector_id:
          type: string
          description: The ID of the target connector. This field is only used for
            multi-tenant jobs.
          example: 1-DATABASE-3
        status:
          $ref: '#/components/schemas/ExecutionStatus'
        rows_masked:
          type: integer
          description: The number of rows masked or profiled so far by this execution.
            This is not applicable for JSON file type.
          format: int64
          example: 1000
        rows_total:
          type: integer
          description: The total number of rows that this execution should mask. This
            value is set to -1 while the total row count is being calculated. This
            is not applicable for JSON file type.
          format: int64
          example: 5000
        bytes_processed:
          type: integer
          description: The number of bytes masked so far by this execution. This is
            only applicable for JSON file type.
          format: int64
          example: 500
        bytes_total:
          type: integer
          description: The total number of bytes that this execution should mask.
            This value is set to -1 while the total byte count is being calculated.
            This is only applicable for JSON file type.
          format: int64
          example: 5000000
        start_time:
          type: string
          description: The date and time that this execution was started.
          format: date-time
          example: 2021-05-01T09:51:34.148Z
        submit_time:
          type: string
          description: The date and time that this execution was submitted.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        end_time:
          type: string
          description: The date and time that this execution completed.
          format: date-time
          example: 2021-05-01T11:51:34.148Z
        run_duration:
          type: integer
          description: The time this execution spent running, in milliseconds.
          format: int64
          example: 4000
        queue_duration:
          type: integer
          description: The time this execution spent in the queue, in milliseconds.
          format: int64
          example: 1000
        total_duration:
          type: integer
          description: The total time this execution took, in milliseconds.
          format: int64
          example: 5000
        account_id:
          type: integer
          description: The account id of the DCT user who started this execution.
          format: int64
          example: 3
        account_name:
          type: string
          description: The account name of the DCT user who started this execution.
          example: John Doe
        task_events:
          type: array
          description: The progression of steps or events performed by this execution.
            Only available for executions on masking engines that are version 6.0.14.0
            and higher.
          example:
          - event: Initializing
            status: SUCCEEDED
          - event: Job Completed
            status: FAILED
          items:
            $ref: '#/components/schemas/TaskEvent'
        hyperscale_task_events:
          type: array
          items:
            $ref: '#/components/schemas/HyperscaleTaskEvent'
        progress:
          type: number
          description: Progress of the task (value between 0 and 1, Hyperscale executions
            only)
          example: 0.34
        execution_components_total:
          type: integer
          description: The total number of execution components in this execution.
          format: int32
          example: 5
        execution_components_processed:
          type: integer
          description: The number of execution components processed so far in this
            execution.
          format: int32
          example: 3
      description: The execution of a masking or discovery job.
    ExecutionCancelParameters:
      type: object
      properties:
        expected_status:
          type: string
          description: The expected status of the execution to cancel to prevent cancelling
            a queued job that has transitioned to a running state since the request
            was issued (Standard Job only).
          example: QUEUED
          enum:
          - QUEUED
          - RUNNING
      description: Parameters to cancel an execution.
    ExecutionComponent:
      type: object
      properties:
        id:
          type: string
          description: The ID of the execution component
          example: '123'
        name:
          type: string
          description: The name of the execution component
          example: table_a
        execution_id:
          type: string
          description: The ID of the execution
          example: 414ed52c-fa89-455d-9fb9-9c2fa5115f80
        status:
          $ref: '#/components/schemas/ExecutionStatus'
        rows_masked:
          type: integer
          description: The number of rows masked or profiled so far in the execution
            component. This is not applicable for JSON file type.
          format: int64
          example: 1000
        rows_total:
          type: integer
          description: The total number of rows that should be masked or profiled
            in the execution component. This value is set to -1 while the total row
            count is being calculated. This is not applicable for JSON file type.
          format: int64
          example: 5000
        bytes_processed:
          type: integer
          description: The number of bytes masked or profiled so far in the component.
            This is only applicable to JSON files and ASDD profiling jobs on XML files.
          format: int64
          example: 500
        bytes_total:
          type: integer
          description: The total number of bytes that should be masked or profiled
            in the component. This value is set to -1 while the total byte count is
            being calculated. This is only applicable to JSON files and ASDD profiling
            jobs on XML files.
          format: int64
          example: 5000000
        start_time:
          type: string
          description: The date and time that the masking engine starts operating
            on the execution component.
          format: date-time
          example: 2021-05-01T09:51:34.148Z
        end_time:
          type: string
          description: The date and time that the execution component is placed in
            a final state.
          format: date-time
          example: 2021-05-01T11:51:34.148Z
        non_conforming_data_count:
          type: integer
          description: The non-conforming data count for this execution component.
          format: int64
          example: 10
      description: An execution component associated with a job execution
    ExecutionComponentLog:
      type: object
      properties:
        execution_component_id:
          type: string
          description: The ID of the execution component
          example: '123'
        log:
          type: string
          description: The execution component log contents
          example: 2024/08/29 22:22:52 - newtable-6f323503-9911-3ca0-8843-f7d9f56374de
            - Loading transformation from XML file
      description: A log containing information about an execution component
    ExecutionEvent:
      type: object
      properties:
        id:
          type: string
          description: The ExecutionEvent entity ID.
          example: 1-EVENT-1
        execution_id:
          type: string
          description: The ID of the execution.
          example: 414ed52c-fa89-455d-9fb9-9c2fa5115f80
        execution_component_id:
          type: string
          description: The ID of the execution component.
          example: '123'
        event_type:
          type: string
          description: The type of execution event.
          example: JOB_ABORTED
          enum:
          - JOB_ABORTED
          - UNMASKED_DATA
          - MASKING_FALLBACK
        severity:
          type: string
          description: The severity of the execution event.
          example: INFO
          enum:
          - INFO
          - WARNING
          - CRITICAL
        cause:
          type: string
          description: The cause of the execution event.
          example: UNHANDLED_EXCEPTION
          enum:
          - UNHANDLED_EXCEPTION
          - IGNORED_EXCEPTION
          - PATTERN_MATCH_FAILURE
          - PREMASK_TYPE_CONVERSION_FAILURE
          - POSTMASK_TYPE_CONVERSION_FAILURE
          - EXTENDED_ALGORITHM_FAILURE
          - DRIVER_SUPPORT_TASK_FAILURE
          - DATA_NOT_FOUND_FAILURE
        count:
          type: integer
          description: The number of times the execution event occurred.
          format: int64
          example: 1
        timestamp:
          type: string
          description: The date and time that this execution event first occurred.
          format: date-time
          example: 2023-03-20T08:51:34.148Z
        masked_object_name:
          type: string
          description: The name of the column, field, or other object being masked
            when this event occurred, if applicable.
          example: ssn
        algorithm_name:
          type: string
          description: The name of the masking algorithm running when this event occurred,
            if applicable.
          example: SsnTK
        exception_type:
          type: string
          description: The Java class of the exception that triggered this event,
            if applicable.
          example: SQLException
        exception_detail:
          type: string
          description: The details associated with the Java exception that triggered
            this event, if applicable.
          example: 'Listener refused the connection with the following error: ORA-12505,
            TNS:listener does not currently know of SID given in connect descriptor'
      description: Events, such as warnings or errors, associated with job executions.
    ExecutionLog:
      type: object
      properties:
        id:
          type: string
          description: The ExecutionLog entity ID.
          example: 1-LOG-1
        execution_id:
          type: string
          description: The ID of the execution.
          example: 414ed52c-fa89-455d-9fb9-9c2fa5115f80
        masking_job_id:
          type: string
          description: The ID of the masking job that is being executed.
          example: '2'
        status:
          $ref: '#/components/schemas/ExecutionStatus'
        log:
          type: string
          description: The log file contents.
          example: ORA-12505, TNS:listener does not currently know of SID given in
            connect descriptor
      description: A log containing warnings or errors associated with a job execution.
    ExecutionStatus:
      type: string
      description: The status of a masking or discovery job.
      example: RUNNING
      enum:
      - PENDING
      - QUEUED
      - RUNNING
      - CANCELLED
      - FAILED
      - SUCCEEDED
      - WARNING
      - WAITING
    FailoverNamespaceParameters:
      type: object
      properties:
        enable_failback:
          type: boolean
          description: Whether to enable failback for the datasets being failed over.
          default: false
      description: The parameters to failover a Namespace.
    GlobalProperties:
      title: GlobalProperties
      type: object
      properties:
        disable_username_password:
          type: boolean
          description: Property to define either username & password based authentication
            disabled or not.
          example: true
        phonehome_upload_cadence:
          maximum: 30
          minimum: 1
          type: integer
          description: Property to define the phonehome bundle upload cadence, in
            days, if Delphix services are reachable.
          example: 30
        phonehome_maximum_transfer_size:
          maximum: 1073741824
          minimum: 1048576
          type: integer
          description: Property to define the maximum uncompressed bundle transfer
            size, in bytes, for phonehome.
          example: 1073741824
        token_expiry_time:
          minimum: -1
          type: integer
          description: Property to define the expiry time for login token, in seconds.
            Specify -1 to indicate never expiry of token.
          example: 86400
        token_maximum_inactivity_time:
          minimum: -1
          type: integer
          description: Property to define the maximum user inactivity time for login
            token, in seconds. Specify -1 to indicate never invalidate of token due
            to inactivity.
          example: 3600
        feature_flags:
          type: array
          description: List of enabled features.
          example:
          - ENGINE_DEEP_LINK
          - DSOURCE_LINKING
          items:
            type: string
        api_key_expiry_time:
          minimum: -1
          type: integer
          description: Property to define the expiry time for API key, in seconds.
            Specify -1 to indicate never expiry of tapi key.
          example: 86400
        allowed_ip_ranges:
          type: array
          description: Restricts the IP ranges DCT will connect to when registering
            engines.
          example:
          - 192.0.0.0/8
          - 172.0.0.0/16
          items:
            type: string
      description: Global properties response.
    HashicorpVault:
      title: HashicorpVault
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: false
          readOnly: true
        env_variables:
          type: object
          additionalProperties:
            maxLength: 4096
            minLength: 1
            type: string
          description: |
            Environment variables to set when invoking the Vault CLI tool. The environment variables will be used both
            to login to the vault (if this step is required) and to retrieve engine username and passwords.
          example:
            VAULT_ADDR: https://vault.company.co:8200
            VAULT_TOKEN: token-to-retrieve-secrets
          x-dct-toolkit-credential-field: true
        login_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: |
            Arguments to the "vault" CLI tool to be used to fetch a client token (or "login").
            If supporting files, such as TLS certificates, must be used to authenticate, they can be
            mounted to the /etc/config directory.
            This property must not be set when using the TOKEN authentication method as login is not required.
          example:
          - login
          - -method=cert
          - -client-cert=/etc/config/cert.pem
          - -client-key=/etc/config/key.pem
          - write
          - auth/approle/login
          - role_id=123
          - secret_id=456
          items:
            maxLength: 4096
            minLength: 1
            type: string
          x-dct-toolkit-credential-field: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: Configuration required to connect and authenticate with an Hashicorp
        Vault which stores engines username and passwords.
    Hook:
      required:
      - command
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          example: Print the current user
        command:
          maxLength: 131072
          minLength: 1
          type: string
          example: whoami
        shell:
          type: string
          example: bash
          enum:
          - bash
          - shell
          - expect
          - ps
          - psd
        element_id:
          maxLength: 256
          minLength: 1
          type: string
          example: '0'
        has_credentials:
          type: boolean
          example: false
    Host:
      type: object
      properties:
        id:
          maxLength: 256
          minLength: 1
          type: string
          description: The entity ID of this Host.
          example: 3-UNIX_HOST-5
        hostname:
          type: string
          description: The hostname or IP address of this host.
          example: linux.dev.delphix.com
        os_name:
          type: string
          description: The name of the OS on this host.
          example: Linux
        os_version:
          type: string
          description: The version of the OS on this host.
          example: Red Hat Enterprise Linux Server release 7.3 (Maipo)
        memory_size:
          type: integer
          description: The total amount of memory on this host in bytes.
          format: int64
          example: 8382160896
        available:
          type: boolean
          description: True if the host is up and a connection can be established
            from the engine.
          example: false
        available_timestamp:
          type: string
          description: The last time the available property was updated.
          format: date-time
          example: 2022-06-02T17:49:11.457Z
        not_available_reason:
          type: string
          description: The reason why the host is not available.
          example: Failed to connect to host
        oracle_cluster_node_reference:
          type: string
          description: The reference to the associated OracleClusterNode.
          example: ORACLE_CLUSTER_NODE-1
        oracle_cluster_node_name:
          type: string
          description: The name of the associated OracleClusterNode.
          example: my-favorite-cluster-node
        oracle_cluster_node_enabled:
          type: boolean
          description: Whether the associated OracleClusterNode is enabled.
          example: true
        oracle_cluster_node_discovered:
          type: boolean
          description: Whether the associated OracleClusterNode was discovered.
          example: true
        oracle_cluster_node_virtual_ips:
          type: array
          description: The Virtual IP addresses associated with the OracleClusterNode.
          items:
            $ref: '#/components/schemas/OracleVirtualIP'
        oracle_cluster_node_instances:
          type: array
          description: The instances associated with the OracleClusterNode.
          items:
            $ref: '#/components/schemas/OracleClusterNodeInstance'
        windows_cluster_node_reference:
          type: string
          description: The reference to the associated WindowsClusterNode.
          example: WINDOWS_CLUSTER_NODE-1
        windows_cluster_node_name:
          type: string
          description: The name of the associated WindowsClusterNode.
          example: my-favorite-cluster-node
        windows_cluster_node_discovered:
          type: boolean
          description: Whether the associated Windows cluster node was discovered.
          example: true
        nfs_addresses:
          uniqueItems: true
          type: array
          description: The list of host/IP addresses to use for NFS export.
          example:
          - 192.168.10.2
          items:
            type: string
        dsp_keystore_alias:
          minLength: 1
          type: string
          description: The lowercase alias to use inside the user managed DSP keystore.
          example: oracle-env
        dsp_keystore_path:
          minLength: 1
          type: string
          description: The path to the user managed DSP keystore.
          example: /tmp/keystore.keystore
        dsp_truststore_path:
          minLength: 1
          type: string
          description: The path to the user managed DSP truststore.
          example: /tmp/truststore.keystore
        java_home:
          minLength: 1
          type: string
          description: The path to the user managed Java Development Kit (JDK). If
            not specified, then the OpenJDK will be used.
          example: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
        ssh_port:
          type: integer
          description: The port number used to connect to the host via SSH.
          example: 22
        toolkit_path:
          minLength: 1
          type: string
          description: The path for the toolkit that resides on the host.
          example: /work
        connector_port:
          type: integer
          description: The port that the Windows Connector connects on.
          example: 9100
        connector_version:
          type: string
          description: The Windows Connector version that is installed on the provided
            host.
          example: 1.17.0
        connector_dot_net_framework_version:
          type: string
          description: The .NET Framework version used for Windows Connector Service.
          example: '3.5'
        oracle_tde_keystores_root_path:
          minLength: 1
          type: string
          description: The path to the root of the Oracle TDE keystores artifact directories.
          example: /keystore/root/path
        processor_type:
          type: string
          description: The platform for the host machine.
          example: x86_64
        timezone:
          type: string
          description: The OS timezone.
          example: America/New_York,EST-0500
      description: A physical/virtual server.
    HostCreateParameters:
      required:
      - address
      properties:
        name:
          minLength: 1
          type: string
          description: The name to associate with the host.
        hostname:
          minLength: 1
          type: string
          description: The hostname or IP address of this host.
          example: db1.host.com
        nfs_addresses:
          type: array
          description: The list of host/IP addresses to use for NFS export.
          example:
          - 192.168.10.2
          items:
            minLength: 1
            type: string
        ssh_port:
          type: integer
          description: The port number used to connect to the host via SSH.
          example: 22
          default: 22
        privilege_elevation_profile_reference:
          minLength: 1
          type: string
          description: Reference to a profile for escalating user privileges.
        dsp_keystore_alias:
          minLength: 1
          type: string
          description: The lowercase alias to use inside the user managed DSP keystore.
        dsp_keystore_password:
          minLength: 1
          type: string
          description: The password for the user managed DSP keystore.
          format: password
          x-dct-toolkit-credential-field: true
        dsp_keystore_path:
          minLength: 1
          type: string
          description: The path to the user managed DSP keystore.
        dsp_truststore_password:
          minLength: 1
          type: string
          description: The password for the user managed DSP truststore.
          format: password
          x-dct-toolkit-credential-field: true
        dsp_truststore_path:
          minLength: 1
          type: string
          description: The path to the user managed DSP truststore.
        java_home:
          minLength: 1
          type: string
          description: The path to the user managed Java Development Kit (JDK). If
            not specified, then the OpenJDK will be used.
        toolkit_path:
          minLength: 1
          type: string
          description: The path for the toolkit that resides on the host.
        oracle_jdbc_keystore_password:
          minLength: 1
          type: string
          description: The password for the user managed Oracle JDBC keystore.
          format: password
          x-dct-toolkit-credential-field: true
        oracle_tde_keystores_root_path:
          minLength: 1
          type: string
          description: The path to the root of the Oracle TDE keystores artifact directories.
        ssh_verification_strategy:
          $ref: '#/components/schemas/SSHVerificationStrategy'
        oracle_cluster_node_virtual_ips:
          type: array
          description: The Virtual IP addresses associated with the OracleClusterNode.
          items:
            $ref: '#/components/schemas/OracleVirtualIP'
    HostUpdateParameters:
      type: object
      properties:
        hostname:
          maxLength: 256
          minLength: 1
          type: string
          description: host address of the machine.
          example: db.host.com
        oracle_cluster_node_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the associated OracleClusterNode.
          example: my-favorite-cluster-node
        oracle_cluster_node_enabled:
          type: boolean
          description: Whether the associated OracleClusterNode is enabled.
          example: true
        oracle_cluster_node_virtual_ips:
          type: array
          description: The Virtual IP addresses associated with the OracleClusterNode.
          items:
            $ref: '#/components/schemas/OracleVirtualIP'
        nfs_addresses:
          type: array
          description: array of ip addresses or hostnames
          example:
          - 192.168.10.2
          items:
            maxLength: 256
            minLength: 1
            type: string
        ssh_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: ssh port of the host.
          format: int64
          example: 22
        toolkit_path:
          maxLength: 256
          minLength: 1
          type: string
          description: The path for the toolkit that resides on the host.
          example: /work
        java_home:
          maxLength: 256
          minLength: 1
          type: string
          description: The path to the user managed Java Development Kit (JDK). If
            not specified, then the OpenJDK will be used.
          example: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
        dsp_keystore_path:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP keystore path.
          example: /tmp/keystore.keystore
        dsp_keystore_password:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP keystore password.
          example: temp123
          x-dct-toolkit-credential-field: true
        dsp_keystore_alias:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP keystore alias.
          example: oracle-src
        dsp_truststore_path:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP truststore path.
          example: /tmp/truststore.keystore
        dsp_truststore_password:
          maxLength: 256
          minLength: 1
          type: string
          description: DSP truststore password.
          example: truststore123
          x-dct-toolkit-credential-field: true
        connector_port:
          maximum: 65535
          minimum: 1
          type: integer
          description: Specify port on which Delphix connector will run.
          format: int32
          example: 9100
        oracle_jdbc_keystore_password:
          minLength: 1
          type: string
          description: The password for the user managed Oracle JDBC keystore.
          format: password
          x-dct-toolkit-credential-field: true
        oracle_tde_keystores_root_path:
          minLength: 1
          type: string
          description: The path to the root of the Oracle TDE keystores artifact directories.
        ssh_verification_strategy:
          $ref: '#/components/schemas/SSHVerificationStrategy'
        connector_authentication_key:
          type: string
          description: Unique per Delphix key used to authenticate with the remote
            Delphix Connector.
          example: secret
    HyperscaleConnector:
      title: HyperscaleConnector
      type: object
      properties:
        id:
          type: string
          description: The ID of the Hyperscale Connector.
          readOnly: true
        hyperscale_instance_id:
          type: string
          description: The ID of the Hyperscale instance of this Connector.
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        name:
          type: string
        source_username:
          type: string
          description: The username this Connector will use to connect to the source
            database.
        source_password:
          type: string
          description: The password this Connector will use to connect to the source
            database.
          x-dct-toolkit-credential-field: true
        source_jdbc_url:
          type: string
          description: The JDBC URL used to connect to the source database.
        source_mongo_url:
          type: string
          description: The MongoDB URL used to connect to the source database.
          example: mongodb://host:27017
        source_filesystem_path:
          type: string
          description: The path on the filesystem where source files must be read
            (Delimited files Only).
        source_connection_properties:
          type: object
          additionalProperties:
            type: string
        target_username:
          type: string
          description: The username this Connector will use to connect to the target
            database.
        target_password:
          type: string
          description: The username this Connector will use to connect to the target
            database.
          x-dct-toolkit-credential-field: true
        target_jdbc_url:
          type: string
          description: The JDBC URL used to connect to the target database.
        target_mongo_url:
          type: string
          description: The MongoDB URL used to connect to the target database.
          example: mongodb://host:27017
        target_filesystem_path:
          type: string
          description: The path on the filesystem where target files must be written
            (Delimited files Only).
        target_connection_properties:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: A Hyperscale connector to read/write data from/to a datasource.
    HyperscaleConnectorCreateParameters:
      title: HyperscaleConnectorCreateParameters
      type: object
      properties:
        hyperscale_instance_id:
          type: string
          description: The ID of the Hyperscale instance of this Connector.
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        name:
          type: string
        source_username:
          type: string
          description: The username this Connector will use to connect to the source
            database.
        source_password:
          type: string
          description: The password this Connector will use to connect to the source
            database.
          x-dct-toolkit-credential-field: true
        source_jdbc_url:
          type: string
          description: The JDBC URL used to connect to the source database.
        source_mongo_url:
          type: string
          description: The MongoDB URL used to connect to the source database.
          example: mongodb://host:27017
        source_filesystem_path:
          type: string
          description: The path on the filesystem where source files must be read
            (Delimited files Only).
        source_connection_properties:
          type: object
          additionalProperties:
            type: string
        target_username:
          type: string
          description: The username this Connector will use to connect to the target
            database.
        target_password:
          type: string
          description: The username this Connector will use to connect to the target
            database.
          x-dct-toolkit-credential-field: true
        target_jdbc_url:
          type: string
          description: The JDBC URL used to connect to the target database.
        target_mongo_url:
          type: string
          description: The MongoDB URL used to connect to the target database.
          example: mongodb://host:27017
        target_filesystem_path:
          type: string
          description: The path on the filesystem where target files must be written
            (Delimited files Only).
        target_connection_properties:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        make_current_account_owner:
          type: boolean
          description: Whether the account creating this Hyperscale Connector must
            be configured as owner of it.
          default: true
      description: Parameters to create a Hyperscale Connector.
    HyperscaleConnectorUpdateParameters:
      title: HyperscaleConnectorUpdateParameters
      type: object
      properties:
        name:
          type: string
        source_username:
          type: string
          description: The username this Connector will use to connect to the source
            database.
        source_password:
          type: string
          description: The password this Connector will use to connect to the source
            database.
          x-dct-toolkit-credential-field: true
        source_jdbc_url:
          type: string
          description: The JDBC URL used to connect to the source database.
        source_mongo_url:
          type: string
          description: The MongoDB URL used to connect to the source database.
          example: mongodb://host:27017
        source_filesystem_path:
          type: string
          description: The path on the filesystem where source files must be read
            (Delimited files Only).
        source_connection_properties:
          type: object
          additionalProperties:
            type: string
        target_username:
          type: string
          description: The username this Connector will use to connect to the target
            database.
        target_password:
          type: string
          description: The username this Connector will use to connect to the target
            database.
          x-dct-toolkit-credential-field: true
        target_jdbc_url:
          type: string
          description: The JDBC URL used to connect to the target database.
        target_mongo_url:
          type: string
          description: The MongoDB URL used to connect to the target database.
          example: mongodb://host:27017
        target_filesystem_path:
          type: string
          description: The path on the filesystem where target files must be written
            (Delimited files Only).
        target_connection_properties:
          type: object
          additionalProperties:
            type: string
      description: The updatable properties of a Hyperscale Connector.
    HyperscaleDataTypeEnum:
      type: string
      description: The data type designation for the hyperscale deployment.
      example: ORACLE
      enum:
      - ORACLE
      - MSSQL
      - DELIMITED_FILES
      - MONGO_DB
    HyperscaleDataset:
      title: HyperscaleDataset
      type: object
      properties:
        id:
          type: string
          description: The ID of the Hyperscale Dataset.
        hyperscale_instance_id:
          type: string
          description: The ID of the Hyperscale instance of this Dataset.
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        mount_point_id:
          type: string
          description: The Id of the Hyperscale Mount Point used for this Dataset.
        connector_id:
          type: string
          description: Id the Hyperscale Connector used to read sensitive data and
            write masked data.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: A Hyperscale Dataset.
    HyperscaleDatasetTableOrFile:
      title: HyperscaleDatasetTableOrFile
      type: object
      properties:
        id:
          type: string
          description: The ID of the Hyperscale Dataset table or file.
        schema_name:
          type: string
          description: Name of the table schema (Oracle/MSSql only).
        table_name:
          type: string
          description: Name of the table (Oracle/MSSql only).
        collection_name:
          type: string
          description: Name of the collection (MongoDB only).
        database_name:
          type: string
          description: Name of the database (MongoDB only).
        filter_key:
          type: string
          description: The unique database column field to filter the source data.
        column_array_rows:
          type: integer
          description: The number of column array rows to be used by the sqlldr oracle
            utility which determines the number of rows loaded before the stream buffer
            is built.
          format: int64
        unload_split:
          type: integer
          description: The number of unloaded files to be generated from the source
            database.
          format: int64
        stream_size:
          type: integer
          description: Long The stream size to be used by the sqlldr oracle utility
            which specifies the size (in bytes) of the data stream sent from the client
            to the server.
          format: int64
        end_of_record:
          type: string
          description: The end of line character. Support values are \n, \r  and \r\n
            (Delimited files only).
        delimiter:
          type: string
          description: The single character length delimiter used in source files
            (Delimited files only).
        enclosure:
          type: string
          description: The single character length quote character used in the source
            files (Delimited files only).
        enclosure_escape_character:
          type: string
          description: The escape character used to escape quote characters (Delimited
            files only).
        escape_enclosure_escape_character:
          type: boolean
          description: Whether to escape the enclosure escape character (Delimited
            files only).
        has_headers:
          type: boolean
          description: Whether source files have header column names or not (Delimited
            files only). If set to true, format files with the same column names are
            created and the same can be used for the masking inventory. If set to
            false, the column names of pattern f0, f1, f2, and so on are used to create
            the format files for delimited file masking.
        unique_source_files_identifier:
          type: string
          description: This is the source key that maps the load-service and masking-service
            data sets with the unload-service data set (Delimited files only). Please
            ensure that this value is different for each HyperscaleDatasetTableOrFile.
        source_files:
          type: array
          description: List of all source files that need to be masked (Delimited
            files only). All files should have the same delimiter character and other
            helper characters. All files should have the same number of columns and
            same column names if it has a header line.
          items:
            type: string
        perform_join:
          type: boolean
          description: Whether the split files must be joined (Delimited files only).
        masking_inventory:
          type: array
          description: DataSet information for masking inventory.
          items:
            title: HyperscaleColumnOrField
            type: object
            properties:
              field_name:
                type: string
                description: Name of the field.
              domain_name:
                type: string
                description: The name of the domain assigned to this field.
              algorithm_name:
                type: string
                description: The name of the algorithm assigned to this field.
              date_format:
                type: string
                description: The format of the date assigned to this field.
              algorithm_field_name:
                type: string
                description: The name of the algorithm field that is associated with
                  this algorithm.
              algorithm_group_no:
                type: integer
                description: The group number of the algorithm to identify a set of
                  columns associated with one instance of algorithm.
                format: int64
      description: A table or file which is part of a hyperscale dataset.
    HyperscaleDatasetTableOrFileUpdateParameters:
      title: HyperscaleDatasetTableOrFile
      type: object
      properties:
        filter_key:
          type: string
          description: The unique database column field to filter the source data.
            Set this property to an empty string to clear the value.
        column_array_rows:
          type: integer
          description: The number of column array rows to be used by the sqlldr oracle
            utility which determines the number of rows loaded before the stream buffer
            is built.
          format: int64
        unload_split:
          type: integer
          description: The number of unloaded files to be generated from the source
            database.
          format: int64
        stream_size:
          type: integer
          description: Long The stream size to be used by the sqlldr oracle utility
            which specifies the size (in bytes) of the data stream sent from the client
            to the server.
          format: int64
        end_of_record:
          type: string
          description: The end of line character. Support values are \n, \r  and \r\n
            (Delimited files only).
        delimiter:
          type: string
          description: The single character length delimiter used in source files
            (Delimited files only).
        enclosure:
          type: string
          description: The single character length quote character used in the source
            files (Delimited files only).
        enclosure_escape_character:
          type: string
          description: The escape character used to escape quote characters (Delimited
            files only).
        escape_enclosure_escape_character:
          type: boolean
          description: Whether to escape the enclosure escape character (Delimited
            files only).
        has_headers:
          type: boolean
          description: Whether source files have header column names or not (Delimited
            files only). If set to true, format files with the same column names are
            created and the same can be used for the masking inventory. If set to
            false, the column names of pattern f0, f1, f2, and so on are used to create
            the format files for delimited file masking.
        unique_source_files_identifier:
          type: string
          description: This is the source key that maps the load-service and masking-service
            data sets with the unload-service data set (Delimited files only). Please
            ensure that this value is different for each HyperscaleDatasetTableOrFile.
        source_files:
          type: array
          description: List of all source files that need to be masked (Delimited
            files only). All files should have the same delimiter character and other
            helper characters. All files should have the same number of columns and
            same column names if it has a header line.
          items:
            type: string
        perform_join:
          type: boolean
          description: Whether the split files must be joined (Delimited files only).
      description: The updatable properties of a table or file which is part of a
        hyperscale dataset.
    HyperscaleDatasetUpdateParameters:
      title: HyperscaleDatasetUpdateParameters
      type: object
      properties:
        mount_point_id:
          type: string
          description: The Id of the Hyperscale Mount Point used for this Dataset.
        connector_id:
          type: string
          description: Id the Hyperscale Connector used to read sensitive data and
            write masked data.
      description: The updatable properties of a Hyperscale Dataset.
    HyperscaleInstance:
      title: HyperscaleInstance
      required:
      - api_key
      - hostname
      - name
      type: object
      properties:
        id:
          type: string
          description: The Hyperscale instance entity ID.
          readOnly: true
        name:
          type: string
          description: The name of this hyperscale instance.
        hostname:
          type: string
          description: The hostname of this hyperscale instance.
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        creation_date:
          type: string
          description: The date this hyperscale instance was registered.
          format: date-time
        tags:
          type: array
          description: The tags to be created for this hyperscale instance.
          items:
            $ref: '#/components/schemas/Tag'
        api_key:
          type: string
          description: API key to connect to the hyperscale instance.
        insecure_ssl:
          type: boolean
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
          default: false
        unsafe_ssl_hostname_check:
          type: boolean
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this hyperscale instance.
            This is ignored if insecure_ssl is set.
          default: false
        truststore_filename:
          maxLength: 1024
          minLength: 1
          pattern: ^[a-zA-Z0-9_\.]+$
          type: string
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          nullable: true
        truststore_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Password to read the truststore.
          nullable: true
          x-dct-toolkit-credential-field: true
        status:
          type: string
          description: The status of this hyperscale instance.
          nullable: true
          readOnly: true
          enum:
          - CREATED
          - DELETING
        connection_status:
          type: string
          description: The status of the connection to the hyperscale instance.
          nullable: true
          readOnly: true
          enum:
          - ONLINE
          - CONNECTION_ERROR
          - BAD_CREDENTIALS
        connection_status_details:
          type: string
          description: If set, details about the status of the connection to the hyperscale
            instance.
          readOnly: true
      description: A registered Hyperscale instance's connection and authentication
        settings.
    HyperscaleInstanceRegistrationParameter:
      title: HyperscaleInstanceRegistrationParameter
      required:
      - api_key
      - data_type
      - hostname
      - name
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: Name in DCT of the Hyperscale instance.
        hostname:
          maxLength: 256
          minLength: 1
          type: string
          description: Hostname of the Hyperscale instance.
        api_key:
          maxLength: 4096
          minLength: 1
          type: string
          description: API key to connect to the Hyperscale instance.
          nullable: true
          x-dct-toolkit-credential-field: true
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        insecure_ssl:
          type: boolean
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
          default: false
        unsafe_ssl_hostname_check:
          type: boolean
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          default: false
        truststore_filename:
          maxLength: 1024
          minLength: 1
          pattern: ^[a-zA-Z0-9_\.]+$
          type: string
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          nullable: true
        truststore_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Password to read the truststore.
          nullable: true
          x-dct-toolkit-credential-field: true
        tags:
          type: array
          description: The tags to be created for this engine.
          items:
            $ref: '#/components/schemas/Tag'
        make_current_account_owner:
          type: boolean
          description: Whether the account creating this Hyperscale instance must
            be configured as owner of it.
          default: true
      description: Parameters to register and authenticate a Hyperscale instance
    HyperscaleInstanceUpdateParams:
      title: HyperscaleInstanceUpdateParams
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: Name in DCT of the Hyperscale instance.
        hostname:
          maxLength: 256
          minLength: 1
          type: string
          description: Hostname of the Hyperscale instance.
        api_key:
          maxLength: 4096
          minLength: 1
          type: string
          description: API key to connect to the Hyperscale instance.
          nullable: true
          x-dct-toolkit-credential-field: true
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        insecure_ssl:
          type: boolean
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
        unsafe_ssl_hostname_check:
          type: boolean
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
        truststore_filename:
          maxLength: 1024
          pattern: ^[a-zA-Z0-9_\.]*$
          type: string
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>.
            Set this property to an empty string to clear the value.
          nullable: true
        truststore_password:
          maxLength: 1024
          type: string
          description: |
            Password to read the truststore. Set this property to an empty string to clear the value.
          nullable: true
          x-dct-toolkit-credential-field: true
      description: Parameters to update a Hyperscale instances.
    HyperscaleMountPoint:
      title: HyperscaleMountPoint
      required:
      - hyperscale_instance_id
      type: object
      properties:
        id:
          type: string
          description: The ID of the Hyperscale Mount Point.
          readOnly: true
        hyperscale_instance_id:
          type: string
          description: The ID of the Hyperscale instance of this Mount Point.
        name:
          type: string
          description: Name of the mount, unique for a hyperscale instance. This name
            will be used as a directory name by the Hyperscale instance.
        hostname:
          type: string
          description: The host name of the server.
        mount_path:
          type: string
          description: The path to the directory on the filesystem to mount.
        mount_type:
          type: string
          description: The type of mount filesystem. Enum having values- CIFS, NFS3,
            NFS4.
          enum:
          - CIFS
          - NFS3
          - NFS4
        options:
          type: string
          description: The options for mount. The endpoint will return all default
            options and user specified options.
        staging_storage_type:
          type: string
          description: The type of staging storage.
          enum:
          - MOUNT
          - AWS_S3
        auth_mechanism:
          type: string
          description: The authentication mechanism for AWS_S3 storage.
          enum:
          - AWS_ROLE
          - AWS_SECRET
        aws_bucket_name:
          type: string
          description: The aws bucket name for AWS_S3 storage.
        aws_bucket_region:
          type: string
          description: The aws bucket region for AWS_S3 storage.
        aws_bucket_prefix:
          type: string
          description: The aws bucket prefix for AWS_S3 storage.
        aws_bucket_delimiter:
          type: string
          description: The aws bucket delimiter for AWS_S3 storage.
      description: A Mount Point for the Hyperscale instance to write to a staging
        area and engines to read from.
    HyperscaleMountPointUpdateParameters:
      title: HyperscaleMountPointUpdateParameters
      type: object
      properties:
        name:
          type: string
          description: Name of the mount, unique for a hyperscale instance.
        hostname:
          type: string
          description: The host name of the server.
        mount_path:
          type: string
          description: The path to the directory on the filesystem to mount.
        mount_type:
          type: string
          description: The type of filesystem.
          enum:
          - CIFS
          - NFS3
          - NFS4
        options:
          type: string
          description: The mount options.
      description: The updatable properties of a Hyperscale Mount Point.
    HyperscaleTaskError:
      properties:
        table_name:
          type: string
          description: the name of the table for which the error occurred, including
            the schema.
          example: public_schema.table_x
        error:
          type: string
          description: A textual description of the error.
    HyperscaleTaskEvent:
      properties:
        name:
          type: string
          description: Name of the task (Unload, Masking, Load, Post-Load)
          example: Unload
        progress:
          type: number
          description: progress of the task (between 0 and 1)
          example: 0.34
        status:
          type: string
          example: FAILED
          enum:
          - CANCELLED
          - CANCEL_INITIATED
          - FAILED
          - RUNNING
          - SUCCEEDED
        processed_objects:
          type: integer
          description: The number of objects (tables) already processed by this task.
          format: int64
        processed_rows:
          type: integer
          description: The number of rows already processed by this task.
          format: int64
        processed_constraints:
          type: integer
          description: The number of constraints processed by this task (Post-load
            task only)
          format: int64
        total_constraints:
          type: integer
          description: The total number of constraints to be processed by this task
            (Post-load task only)
          format: int64
        processed_indexes:
          type: integer
          description: The number of indexes processed by this task (Post-load task
            only)
          format: int64
        total_indexes:
          type: integer
          description: The total number of indexes to be processed by this task (Post-load
            task only)
          format: int64
        processed_triggers:
          type: integer
          description: The number of triggered processed by this task (Post-load task
            only)
          format: int64
        total_triggers:
          type: integer
          description: The total number of triggers to be processed by this task (Post-load
            task only)
          format: int64
        start_time:
          type: string
          description: The date and time that this task was started.
          format: date-time
          example: 2022-01-02T05:11:24.148Z
        end_time:
          type: string
          description: The date and time that this task completed.
          format: date-time
          example: 2022-01-02T05:13:24.148Z
        errors:
          type: array
          items:
            $ref: '#/components/schemas/HyperscaleTaskError'
    ImportEngineAccountRequest:
      type: object
      properties:
        data_layout_ids:
          type: array
          description: List of data-layout ids for which accounts should be imported
            to DCT. This is mutually exclusive with `engine_ids` and `import_all`.
          example:
          - data-layout-123
          - data-layout-456
          items:
            type: string
        engine_ids:
          type: array
          description: List of engine ids for which accounts should be imported to
            DCT. This is mutually exclusive with `data_layout_ids` and `import_all`.
          example:
          - engine-id-1
          - engine-id-2
          items:
            type: string
        import_all:
          type: boolean
          description: All self-service accounts across engines should imported to
            DCT. This is mutually exclusive with `data_layout_ids` and `engine_ids`.
          example: false
          default: false
    ImportEngineBookmarkResponse:
      type: object
      properties:
        job_id:
          type: string
          description: DCT job-id of the job that import the engine bookmarks to DCT.
          example: job-1
          deprecated: true
        job:
          $ref: '#/components/schemas/Job'
    Job:
      type: object
      properties:
        id:
          type: string
          description: The Job entity ID.
          example: job-123
        status:
          type: string
          description: The status of the job.
          example: RUNNING
          enum:
          - PENDING
          - STARTED
          - TIMEDOUT
          - RUNNING
          - CANCELED
          - FAILED
          - SUSPENDED
          - WAITING
          - COMPLETED
          - ABANDONED
        is_waiting_for_telemetry:
          type: boolean
          description: Indicates that the operations performed by this Job have completed
            successfully, but the object changes are not yet reflected. This is only
            set when when the JOB is in STARTED status, with the guarantee that the
            job will not transition to the FAILED status. Note that this flag will
            likely be replaced with a new status in future API versions and be deprecated.
        type:
          type: string
          description: The type of job being done.
          example: DB_REFRESH
          deprecated: true
        localized_type:
          type: string
          description: The i18n translated type of job being done.
          example: DB Refresh
        error_details:
          type: string
          description: Details about the failure for FAILED jobs.
          example: Unable to connect to the engine.
        warning_message:
          type: string
          description: Warnings for the job.
          example: 'Failed to remove local MaskingJob, engineId: 3 localMaskingJobId:
            7.'
        target_id:
          type: string
          description: A reference to the job's target.
          example: vdb-123
        target_name:
          type: string
          description: A reference to the job's target name.
          example: vdb
        start_time:
          type: string
          description: The time the job started executing.
          format: date-time
          example: 2022-01-02T05:11:24.148Z
        update_time:
          type: string
          description: The time the job was last updated.
          format: date-time
          example: 2022-01-02T06:11:24.148Z
        trace_id:
          type: string
          description: traceId of the request which created this Job
        engine_ids:
          type: array
          description: IDs of the engines this Job is executing on.
          deprecated: true
          items:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        engines:
          type: array
          items:
            $ref: '#/components/schemas/Engine'
        account_id:
          type: integer
          description: The ID of the account who initiated this job.
          example: 1
        account_name:
          type: string
          description: The account name which initiated this job. It can be either
            firstname and lastname combination or firstname or lastname or username
            or email address or Account-<id>.
          example: User 1
        percent_complete:
          maximum: 100
          minimum: 0
          type: integer
          description: Completion percentage of the Job.
          example: 50
        virtualization_tasks:
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/VirtualizationTask'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/JobTask'
        execution_id:
          type: string
          description: The ID of the associated masking execution, if any.
          nullable: true
      description: An asynchronous task.
    JobResultResponse:
      type: object
      properties:
        job_id:
          type: string
          description: The ID of the job.
        result_type:
          type: string
          description: The type of the job result. This is the type of the object
            present in the result.
        result:
          type: object
          description: The result of the job execution. This is JSON serialized string
            of the result object whose type is specified by result_type property.
      description: The result of a job.
    JobTask:
      properties:
        id:
          type: string
        parent_job_id:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        title:
          type: string
        percent_complete:
          maximum: 100
          minimum: 0
          type: integer
        events:
          type: array
          items:
            $ref: '#/components/schemas/JobTaskEvent'
        status:
          type: string
          enum:
          - PENDING
          - STARTED
          - TIMEDOUT
          - RUNNING
          - CANCELED
          - FAILED
          - SUSPENDED
          - WAITING
          - COMPLETED
          - ABANDONED
    JobTaskEvent:
      properties:
        message_details:
          type: string
    KDCServers:
      properties:
        hostname:
          type: string
          description: One of more KDC servers.
          example: kerberos-02.delphix.com
        port:
          type: integer
          description: One of more KDC servers.
          example: 88
    KerberosConfig:
      type: object
      properties:
        id:
          type: string
          description: The kerberos config ID.
          example: 1-KERBEROS_CONFIG-1
        name:
          type: string
          description: The name of the kerberos config object.
          example: Untitled
        namespace_id:
          type: string
          description: The namespace id of this kerberos config object.
          example: 1-NAMESPACE-1
        namespace_name:
          type: string
          description: The namespace name of this kerberos config object.
          example: test-engine-1
        is_replica:
          type: boolean
          description: Is this a replicated object.
          example: true
        engine_id:
          type: string
          description: Id of the Engine that this kerberos config object belongs to.
          example: '1'
        engine_name:
          type: string
          description: Name of the Engine that this kerberos config object belongs
            to.
          example: Engine-1
        realm:
          type: string
          description: Kerberos Realm name.
          example: DELPHIX.COM
        principal:
          type: string
          description: Kerberos principal name.
          example: sybase
        enabled:
          type: boolean
          description: The kerberos is enabled or not.
          nullable: true
        keytab:
          type: string
          description: Kerberos keytab.
          example: keytab
        kdc_servers:
          type: array
          description: One of more KDC servers.
          items:
            $ref: '#/components/schemas/KDCServers'
      description: A Kerberos config object.
    LDAPConfigParams:
      title: LDAPConfigParams
      type: object
      properties:
        enabled:
          type: boolean
          description: When set, these settings are enabled. True by default.
          example: true
          default: true
        auto_create_users:
          type: boolean
          description: When set, the system will automatically create new Accounts
            for those who have logged in using LDAP. This must be true if LDAP user
            is not already registered in system. True by default.
          example: true
          default: true
        hostname:
          type: string
          description: The hostname of the LDAP server.
          example: ldap.server.com
        port:
          maximum: 65535
          minimum: 0
          type: integer
          description: The port of the LDAP server. Default port is 389 for non-SSL
            and 636 for SSL.
          example: 389
        domains:
          minItems: 1
          type: array
          description: DCT will try to authenticate using each Domain given in this
            list.
          items:
            $ref: '#/components/schemas/Domain'
        enable_ssl:
          type: boolean
          description: True if LDAP should be used over SSL.
          example: false
          default: true
        truststore_filename:
          maxLength: 1024
          minLength: 1
          pattern: ^[a-zA-Z0-9_\.\-]+$
          type: string
          description: File name of a truststore which can be used to validate the
            TLS certificate of the LDAP server. The truststore must be available at
            /etc/config/certs/<truststore_filename>
        truststore_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: Password for reading trustStore file provided in 'truststore_filename'
            property
          x-dct-toolkit-credential-field: true
        insecure_ssl:
          type: boolean
          description: |
            Allow connections to the LDAP server over LDAPS without validating the TLS certificate. Even though
            the connection to the server might be performed over LDAPS, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this server. Instead,
            consider creating a truststore with a Certificate Authority to validate the server's certificate,
            and set the truststore_filename property.
          default: false
        unsafe_ssl_hostname_check:
          type: boolean
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the LDAP server over LDAPS.
            Setting this value must only be done if the TLS certificate of the server does not match the hostname,
            and the TLS configuration of the server cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this server.
            This is ignored if insecure_ssl is set.
          default: false
      description: Parameters to read or update LDAP Config
    LdapConfigValidateParameter:
      properties:
        username:
          maxLength: 1024
          minLength: 1
          type: string
          description: Username of the account to validate the ldap optional attributes.
        password:
          maxLength: 1024
          minLength: 1
          type: string
          description: Password of the account to validate the ldap optional attributes.
          x-dct-toolkit-credential-field: true
    LicenseInfo:
      title: LicenseInfo
      type: object
      properties:
        tier:
          $ref: '#/components/schemas/LicenseTier'
        virtualization_engine_count:
          minimum: 0
          type: integer
          description: The number of virtualization engines counting against the limit.
          format: int32
          nullable: true
          example: 1
        masking_engine_count:
          minimum: 0
          type: integer
          description: The number of masking engines counting against the limit. Masking
            engines added to a Hyperscale Instance's pool do not count against the
            limit.
          format: int32
          nullable: true
          example: 0
        virtualization_engine_count_limit:
          type: integer
          description: The maximum number of registered virtualization engines allowed
            for the current license tier.
          format: int32
          nullable: true
          example: 2
        masking_engine_count_limit:
          type: integer
          description: The maximum number of registered masking engines allowed for
            the current license tier. Masking engines added to a Hyperscale Instance's
            pool do not count against the limit.
          format: int32
          nullable: true
          example: 1
      description: Information about the current DCT license.
    LicenseTier:
      type: string
      description: The DCT license tiers.
      example: CORE
      enum:
      - CORE
      - SELF_SERVICE
      - ENTERPRISE
    LinkDSourceDefaultRequest:
      required:
      - source_id
      properties:
        source_id:
          type: string
          description: The ID of the source to be linked.
    LinkDSourceResponse:
      properties:
        job:
          $ref: '#/components/schemas/Job'
        dsource_id:
          type: string
          description: The ID of the dSource.
    LinkStagingPushDSourceDefaultRequest:
      required:
      - environment_id
      properties:
        environment_id:
          type: string
          description: The ID of the environment to be linked.
    ListEnvironmentUsers:
      type: object
      properties:
        users:
          type: array
          description: List of users
          items:
            $ref: '#/components/schemas/EnvironmentUser'
    ListSnapshotsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        response_metadata:
          $ref: '#/components/schemas/PaginatedResponseMetadata'
    LocationCompatibleRepositoryRequest:
      type: object
      properties:
        source_data_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the source object (dSource or VDB) to get the compatible
            repos. All other objects referenced by the parameters must live on the
            same engine as the source.
          example: source-123
        engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the Engine from where to get the compatible repos.
            If the source ID unambiguously identifies a source object, this parameter
            is unnecessary and ignored.
          example: engine-123
        location:
          maxLength: 256
          minLength: 1
          type: string
          description: location from where compatible repo to be fetched.
        timeflow_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the timeflow from which compatible repos need to be fetched.
          example: timeflow_123
        environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID or name of the target environment.
          example: 1-UNIX_HOST_ENVIRONMENT-1
    LoginToken:
      required:
      - access_token
      - expires_in
      - token_type
      properties:
        access_token:
          maxLength: 2048
          minLength: 1
          type: string
          description: |
            Opaque token that validates the successful account login and is used to authenticate subsequent api calls.
            This token needs to be sent as part of 'Authorization' header for all api calls prefixed with value contained in 'token_type' property.
            For example, if the 'access_token' value is "abc123" and 'token_type' is "Bearer" then HTTP requests should contain following header :
            "Authorization: Bearer abc123"
        token_type:
          maxLength: 1024
          minLength: 1
          type: string
          description: Type of the token returned in 'access_token' property.
        expires_in:
          type: integer
          description: Seconds duration after which the token will expire.
          format: int64
    MSSQLDSourceAttachSourceParameters:
      required:
      - ppt_repository
      - source_id
      type: object
      properties:
        source_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the source to link.
        ppt_repository:
          maxLength: 1024
          minLength: 1
          type: string
          description: Id of the SQL instance on the PPT environment that we want
            to use for pre-provisioning.
        sync_strategy_managed_type:
          type: string
          description: |
            MSSQL specific parameters for source based sync strategy.:
            * `external` - MSSQL specific parameters for externally managed source based sync strategy.
            * `delphix` - MSSQL specific parameters for delphix managed source based sync strategy.
          enum:
          - external
          - delphix
          default: external
        mssql_user_environment_reference:
          maxLength: 1024
          minLength: 1
          type: string
          description: Reference to the source environment user to use for linking.
        mssql_user_domain_username:
          maxLength: 1024
          minLength: 1
          type: string
          description: The username for the source DB user.
        mssql_user_domain_password:
          maxLength: 256
          minLength: 1
          type: string
          description: Password for the database user.
          x-dct-toolkit-credential-field: true
        mssql_user_domain_vault_username:
          maxLength: 256
          minLength: 1
          type: string
          description: Delphix display name for the vault user.
          example: my-vault
        mssql_user_domain_vault:
          maxLength: 256
          minLength: 1
          type: string
          description: The name or reference of the vault from which to read the database
            credentials.
        mssql_user_domain_hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
        mssql_user_domain_hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
        mssql_user_domain_hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Hashicorp vault key for the username in the key-value store.
        mssql_user_domain_hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Hashicorp vault key for the password in the key-value store.
        mssql_user_domain_azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name.
        mssql_user_domain_azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store.
        mssql_user_domain_azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store.
        mssql_user_domain_cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
        mssql_database_username:
          maxLength: 1024
          minLength: 1
          type: string
          description: The username for the source DB user.
        mssql_database_password:
          maxLength: 256
          minLength: 1
          type: string
          description: Password for the database user.
          x-dct-toolkit-credential-field: true
        delphix_managed_backup_compression_enabled:
          type: boolean
          description: Specify whether the backups taken should be compressed or uncompressed
            when Delphix managed option is selected.
          default: false
        delphix_managed_backup_policy:
          type: string
          description: |
            Specify which node of an availability group to run the copy-only full backup on:
            * `primary` - Backups only go to the primary node.
            * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
            * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
          enum:
          - primary
          - secondary_only
          - prefer_secondary
          default: primary
        external_managed_validate_sync_mode:
          type: string
          description: Specifies the backup types ValidatedSync will use to synchronize
            the dSource with the source database
          enum:
          - TRANSACTION_LOG
          - FULL_OR_DIFFERENTIAL
          - FULL
          - NONE
          default: TRANSACTION_LOG
        external_managed_shared_backup_locations:
          maxItems: 260
          type: array
          description: Shared source database backup locations.
          items:
            maxLength: 4096
            minLength: 1
            type: string
        external_netbackup_config_master_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The master server name of this NetBackup configuration.
        external_netbackup_config_source_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The source's client server name of this NetBackup configuration.
        external_netbackup_config_params:
          type: object
          additionalProperties: true
          description: NetBackup configuration parameter overrides.
        external_netbackup_config_templates:
          type: string
          description: Optional config template selection for NetBackup configurations.
            If set, external_netbackup_config_params will be ignored.
        external_commserve_host_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The commserve host name of this Commvault configuration.
        external_commvault_config_source_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The source client name of this Commvault configuration.
        external_commvault_config_staging_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The staging client name of this Commvault configuration.
        external_commvault_config_params:
          type: object
          additionalProperties: true
          description: Commvault configuration parameter overrides.
        external_commvault_config_templates:
          type: string
          description: Optional config template selection for Commvault configurations.
            If set, configParams will be ignored.
        encryption_key:
          type: string
          description: The encryption key to use when restoring encrypted backups.
        source_host_user:
          maxLength: 1024
          minLength: 1
          type: string
          description: ID or user reference of the host OS user to use for linking.
        ppt_host_user:
          maxLength: 1024
          minLength: 1
          type: string
          description: Reference of the host OS user on the PPT host to use for linking.
        staging_pre_script:
          maxLength: 1024
          minLength: 1
          type: string
          description: A user-provided PowerShell script or executable to run prior
            to restoring from a backup during pre-provisioning.
        staging_post_script:
          maxLength: 1024
          minLength: 1
          type: string
          description: A user-provided PowerShell script or executable to run after
            restoring from a backup during pre-provisioning.
        ops_pre_sync:
          type: array
          description: Operations to perform before syncing the created dSource. These
            operations can quiesce any data prior to syncing.
          items:
            $ref: '#/components/schemas/SourceOperation'
        ops_post_sync:
          type: array
          description: Operations to perform after syncing a created dSource.
          items:
            $ref: '#/components/schemas/SourceOperation'
    MSSQLDSourceLinkSourceParameters:
      required:
      - source_id
      allOf:
      - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
      - type: object
        properties:
          encryption_key:
            type: string
            description: The encryption key to use when restoring encrypted backups.
          sync_strategy:
            type: string
            description: |
              Determines how the Delphix Engine will take a backup:
              * `latest_backup` - Use the most recent backup.
              * `new_backup` - Delphix will take a new backup of your source database.
              * `specific_backup` - Use a specific backup. Using this option requires setting `ase_backup_files`.
              * `no_backup` - Use as input to sync MSSQL databases without a backup.
              Default is `new_backup`.
            enum:
            - latest_backup
            - new_backup
            - specific_backup
            - no_backup
            default: new_backup
          mssql_backup_uuid:
            maxLength: 4096
            minLength: 1
            type: string
            description: When using the `specific_backup` sync_strategy, determines
              the Backup Set UUID.
          compression_enabled:
            type: boolean
            description: When using the `new_backup` sync_strategy, determines if
              compression must be enabled. Defaults to the configuration of the ingestion
              strategy configured on the Delphix Engine for this dSource.
            default: false
          availability_group_backup_policy:
            type: string
            description: |
              When using the `new_backup` sync_strategy for an MSSql Availability Group, determines the backup policy:
              * `primary` - Backups only go to the primary node.
              * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
              * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
            enum:
            - primary
            - secondary_only
            - prefer_secondary
            default: primary
          source_host_user:
            maxLength: 1024
            minLength: 1
            type: string
            description: ID or user reference of the host OS user to use for linking.
          ppt_repository:
            maxLength: 1024
            minLength: 1
            type: string
            description: Reference of the SQL instance on the PPT environment that
              we want to use for pre-provisioning.
          ppt_host_user:
            maxLength: 1024
            minLength: 1
            type: string
            description: Reference of the host OS user on the PPT host to use for
              linking.
          staging_pre_script:
            maxLength: 1024
            minLength: 1
            type: string
            description: A user-provided PowerShell script or executable to run prior
              to restoring from a backup during pre-provisioning.
          staging_post_script:
            maxLength: 1024
            minLength: 1
            type: string
            description: A user-provided PowerShell script or executable to run after
              restoring from a backup during pre-provisioning.
          sync_strategy_managed_type:
            type: string
            description: |
              MSSQL specific parameters for source based sync strategy.:
              * `external` - MSSQL specific parameters for externally managed source based sync strategy.
              * `delphix` - MSSQL specific parameters for delphix managed source based sync strategy.
              * `staging_push` - MSSQL specific parameters for staging push based sync strategy.
            enum:
            - external
            - delphix
            - staging_push
            default: external
          mssql_user_environment_reference:
            maxLength: 1024
            minLength: 1
            type: string
            description: Reference to the source environment user to use for linking.
          mssql_user_domain_username:
            maxLength: 1024
            minLength: 1
            type: string
            description: The username for the source DB user.
          mssql_user_domain_password:
            maxLength: 256
            minLength: 1
            type: string
            description: Password for the database user.
            x-dct-toolkit-credential-field: true
          mssql_user_domain_vault_username:
            maxLength: 256
            minLength: 1
            type: string
            description: Delphix display name for the vault user.
            example: my-vault
          mssql_user_domain_vault:
            maxLength: 256
            minLength: 1
            type: string
            description: The name or reference of the vault from which to read the
              database credentials.
          mssql_user_domain_hashicorp_vault_engine:
            maxLength: 256
            minLength: 1
            type: string
            description: Vault engine name where the credential is stored.
          mssql_user_domain_hashicorp_vault_secret_path:
            maxLength: 256
            minLength: 1
            type: string
            description: Path in the vault engine where the credential is stored.
          mssql_user_domain_hashicorp_vault_username_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Hashicorp vault key for the username in the key-value store.
          mssql_user_domain_hashicorp_vault_secret_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Hashicorp vault key for the password in the key-value store.
          mssql_user_domain_azure_vault_name:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure key vault name.
          mssql_user_domain_azure_vault_username_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure vault key for the username in the key-value store.
          mssql_user_domain_azure_vault_secret_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure vault key for the password in the key-value store.
          mssql_user_domain_cyberark_vault_query_string:
            maxLength: 256
            minLength: 1
            type: string
            description: Query to find a credential in the CyberArk vault.
          mssql_database_username:
            maxLength: 1024
            minLength: 1
            type: string
            description: The username for the source DB user.
          mssql_database_password:
            maxLength: 256
            minLength: 1
            type: string
            description: Password for the database user.
            x-dct-toolkit-credential-field: true
          delphix_managed_backup_compression_enabled:
            type: boolean
            description: Specify whether the backups taken should be compressed or
              uncompressed when Delphix managed option is selected.
            default: false
          delphix_managed_backup_policy:
            type: string
            description: |
              Specify which node of an availability group to run the copy-only full backup on:
              * `primary` - Backups only go to the primary node.
              * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
              * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
            enum:
            - primary
            - secondary_only
            - prefer_secondary
            default: primary
          external_managed_validate_sync_mode:
            type: string
            description: Specifies the backup types ValidatedSync will use to synchronize
              the dSource with the source database
            enum:
            - TRANSACTION_LOG
            - FULL_OR_DIFFERENTIAL
            - FULL
            - NONE
            default: TRANSACTION_LOG
          external_managed_shared_backup_locations:
            maxItems: 260
            type: array
            description: Shared source database backup locations.
            items:
              maxLength: 4096
              minLength: 1
              type: string
          external_netbackup_config_master_name:
            maxLength: 256
            minLength: 1
            type: string
            description: The master server name of this NetBackup configuration.
          external_netbackup_config_source_client_name:
            maxLength: 256
            minLength: 1
            type: string
            description: The source's client server name of this NetBackup configuration.
          external_netbackup_config_params:
            type: object
            additionalProperties: true
            description: NetBackup configuration parameter overrides.
          external_netbackup_config_templates:
            type: string
            description: Optional config template selection for NetBackup configurations.
              If set, external_netbackup_config_params will be ignored.
          external_commserve_host_name:
            maxLength: 256
            minLength: 1
            type: string
            description: The commserve host name of this Commvault configuration.
          external_commvault_config_source_client_name:
            maxLength: 256
            minLength: 1
            type: string
            description: The source client name of this Commvault configuration.
          external_commvault_config_staging_client_name:
            maxLength: 256
            minLength: 1
            type: string
            description: The staging client name of this Commvault configuration.
          external_commvault_config_params:
            type: object
            additionalProperties: true
            description: Commvault configuration parameter overrides.
          external_commvault_config_templates:
            type: string
            description: Optional config template selection for Commvault configurations.
              If set, configParams will be ignored.
    MSSQLDSourceStagingPushAttachSourceParameters:
      required:
      - ppt_repository
      - staging_database_name
      type: object
      properties:
        encryption_key:
          type: string
          description: The encryption key to use when restoring encrypted backups.
        ppt_repository:
          maxLength: 1024
          minLength: 1
          type: string
          description: Reference of the SQL instance on the PPT environment that we
            want to use for pre-provisioning.
        ppt_host_user:
          maxLength: 1024
          minLength: 1
          type: string
          description: Reference of the host OS user on the PPT host to use for linking.
        staging_pre_script:
          maxLength: 1024
          minLength: 1
          type: string
          description: A user-provided PowerShell script or executable to run prior
            to restoring from a backup during pre-provisioning.
        staging_post_script:
          maxLength: 1024
          minLength: 1
          type: string
          description: A user-provided PowerShell script or executable to run after
            restoring from a backup during pre-provisioning.
        staging_database_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: The name of the database to create on the staging environment.
            This property is mutually exclusive to sync_strategy_managed_type
        db_state:
          type: string
          description: User provided db state that will be used to create staging
            push db. Default is RESTORING
          enum:
          - RESTORING
          - ONLINE
          default: RESTORING
        ops_pre_sync:
          type: array
          description: Operations to perform before syncing the created dSource. These
            operations can quiesce any data prior to syncing.
          items:
            $ref: '#/components/schemas/SourceOperation'
        ops_post_sync:
          type: array
          description: Operations to perform after syncing a created dSource.
          items:
            $ref: '#/components/schemas/SourceOperation'
    MSSQLDSourceStagingPushLinkSourceParameters:
      required:
      - engine_id
      - name
      - ppt_host_user
      - ppt_repository
      - staging_database_name
      allOf:
      - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
      - type: object
        properties:
          engine_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the engine to link staging push database on.
          encryption_key:
            type: string
            description: The encryption key to use when restoring encrypted backups.
          ppt_repository:
            maxLength: 1024
            minLength: 1
            type: string
            description: Reference of the SQL instance on the PPT environment that
              we want to use for pre-provisioning.
          ppt_host_user:
            maxLength: 1024
            minLength: 1
            type: string
            description: Reference of the host OS user on the PPT host to use for
              linking.
          staging_pre_script:
            maxLength: 1024
            minLength: 1
            type: string
            description: A user-provided PowerShell script or executable to run prior
              to restoring from a backup during pre-provisioning.
          staging_post_script:
            maxLength: 1024
            minLength: 1
            type: string
            description: A user-provided PowerShell script or executable to run after
              restoring from a backup during pre-provisioning.
          staging_database_name:
            maxLength: 1024
            minLength: 1
            type: string
            description: The name of the database to create on the staging environment.
              This property is mutually exclusive to sync_strategy_managed_type
          db_state:
            type: string
            description: User provided db state that will be used to create staging
              push db. Default is RESTORING
            enum:
            - RESTORING
            - ONLINE
            default: RESTORING
    MaskingEnvironment:
      properties:
        id:
          type: string
          description: The MaskingEnvironment entity ID.
          example: masking-environment-1
        engine_id:
          type: string
          description: The ID of the Engine where this MaskingEnvironment resides.
          example: engine-123
        engine_name:
          type: string
          description: The name of the Engine where this MaskingEnvironment resides.
          example: engine-xyz
        name:
          type: string
          description: The name of this MaskingEnvironment.
          example: MyAppEnvironment
        purpose:
          type: string
          description: The purpose of this MaskingEnvironment. MaskingEnvironments
            with a 'MASK' purpose will have access to Masking and Profiling jobs,
            whereas Environments with a 'TOKENIZE' purpose will have access to Tokenization
            and Re-Identification jobs. Note that any custom purposes created through
            the UI will be represented as 'MASK' purposes, due to the jobs that they
            have access to.
          enum:
          - MASK
          - TOKENIZE
        is_workflow_enabled:
          type: boolean
    MaskingExecutionMetrics:
      type: object
      properties:
        id:
          type: string
          description: The MaskingJob entity ID.
          example: masking-job-1
        masking_job_name:
          type: string
          description: The name of the MaskingJob.
          example: My favorite MaskingJob
        masking_job_type:
          type: string
          description: The type of the Masking job.
          example: STANDARD
          enum:
          - STANDARD
          - HYPERSCALE
        connector_type:
          type: string
          description: The type of data being masked by this Job. If the Masking Job
            is masking a database this is the type of the database, otherwise "FILE"
            or "MAINFRAME_DATASET".
          example: MARIADB
        ruleset_name:
          type: string
          description: Name of the ruleset for the Masking job.
          example: my-ruleset
        rows_masked:
          type: integer
          description: The number of rows masked. This is not applicable for JSON
            file type.
          format: int64
          example: 1000
        rows_total:
          type: integer
          description: The total number of rows. This is not applicable for JSON file
            type.
          format: int64
          example: 5000
        bytes_masked:
          type: integer
          description: The number of bytes masked. This is only applicable for JSON
            file type.
          format: int64
          example: 500
        bytes_total:
          type: integer
          description: The total number of bytes. This is only applicable for JSON
            file type.
          format: int64
          example: 5000000
        duration:
          type: integer
          description: The time taken by the execution in ms.
          format: int64
          example: 5000000
        tables_files_count:
          type: integer
          description: The number of tables or files in the ruleset associated to
            the Masking job.
          format: int64
          example: 5000000
        masked_tables_files_count:
          type: integer
          description: The number of tables or files in the ruleset associated to
            the Masking job for which at least one column or field is masked.
          format: int64
          example: 5000000
        columns_fields_count:
          type: integer
          description: The number of columns or fields across all tables or files
            in the ruleset associated to the Masking job.
          format: int64
          example: 5000000
        masked_columns_fields_count:
          type: integer
          description: The number of columns or fields across all tables or files
            in the ruleset associated to the Masking job which are masked.
          format: int64
          example: 5000000
      description: Metrics for a masking job.
    MaskingFileUpload:
      type: object
      properties:
        id:
          type: string
          description: ID of file.
        description:
          type: string
          description: A description of this file.
        filename:
          type: string
          description: Name of this file.
        file_checksum:
          type: string
          description: Checksum of this file.
        file_size:
          type: integer
          description: Size of this file in bytes.
          format: int64
        created_date:
          type: string
          description: Date that this file was created.
          format: date-time
        file_reference_id:
          type: string
          description: A reference to this file.
        engine_file_uuid:
          type: string
          description: file uuid of the corresponding file on the source masking engine.
        engine_name:
          type: string
          description: The name of the origin engine that this file belongs to.
          example: Compliance Engine 1
        engine_id:
          type: string
          description: The id of the origin engine that this file belongs to.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        tags:
          type: array
          description: Tags of this file.
          items:
            $ref: '#/components/schemas/Tag'
      description: An uploaded file.
    MaskingFileUploadUpdateParameters:
      required:
      - description
      type: object
      properties:
        description:
          type: string
          description: A description for this masking file.
      description: Parameters to update a masking engine
    MaskingJob:
      type: object
      properties:
        id:
          type: string
          description: The Masking Job entity ID.
          readOnly: true
          example: masking-job-1
        name:
          type: string
          description: The name of this Masking Job.
          example: My favorite MaskingJob
        rule_set_id:
          type: string
          description: The ID of the Rule Set used by this Masking Job (Standard Job
            only). For hyperscale jobs, see dataset_id.
          example: uuid
        rule_set_name:
          type: string
          description: The name of the Rule Set used by this Masking Job (Standard
            Job only). For hyperscale jobs, see dataset_id.
          example: my rule set
        ruleset:
          $ref: '#/components/schemas/MaskingRuleset'
        connector_type:
          type: string
          description: The type of data being masked by this Job. If the Masking Job
            is masking a database this is the type of the database (Standard Job only).
          example: MARIADB
        is_on_the_fly_masking:
          type: boolean
          description: Whether this is an on-the-fly masking job (Standard Job only).
          example: true
        creation_date:
          type: string
          description: The date this MaskingJob was created (Standard Job only).
          format: date-time
          example: 2022-11-30T08:51:34.148Z
        last_completed_execution_date:
          type: string
          description: The date this MaskingJob was last executed to completion.
          format: date-time
          example: 2022-11-30T09:51:34.148Z
        last_execution_status:
          $ref: '#/components/schemas/ExecutionStatus'
        last_execution_id:
          type: string
          description: The ID of this MaskingJob's last execution.
          example: 00e38996-7da2-4827-8f3e-0503234de537
        connector_username:
          type: string
          description: The username of the Connector used by the MaskingJob (Standard
            Job only). For hyperscale jobs, see the connector of the dataset.
          nullable: true
          example: user123
        connector_password:
          type: string
          description: The password of the Connector used by the MaskingJob (Standard
            Job only). For hyperscale jobs, see the connector of the dataset.
          nullable: true
          example: '*****'
          x-dct-toolkit-credential-field: true
        on_the_fly_source_connector_username:
          type: string
          description: The username of the source Connector used by the on-the-fly
            MaskingJob (Standard Job only).
          nullable: true
          example: user123
        on_the_fly_source_connector_password:
          type: string
          description: The password of the source Connector used by the on-the-fly
            MaskingJob (Standard Job only).
          nullable: true
          example: '*****'
          x-dct-toolkit-credential-field: true
        job_type:
          type: string
          description: The engine type of this Job. This field is present for API
            backward compatibility.
          example: STANDARD
          deprecated: true
          enum:
          - STANDARD
          - HYPERSCALE
        hyperscale_instance_id:
          type: string
          description: The ID of the Hyperscale instance of this Job (Hyperscale Job
            only).
          example: abc
        description:
          type: string
          description: Description of the Job (Hyperscale Job only).
          example: Job for app finance
        dataset_id:
          type: string
          description: Dataset of the Hyperscale Job (Hyperscale Job only).
          example: dataset-123
        retain_execution_data:
          type: string
          description: Defines whether execution data will be stored after execution
            is complete (Hyperscale Job only).
          example: 'false'
          enum:
          - 'NO'
          - ON_ERROR
          - ALWAYS
        max_memory:
          type: integer
          description: Maximum memory to be allocated for each Masking job (Hyperscale
            Job only).
          format: int32
          example: 1024
        min_memory:
          type: integer
          description: Minimum memory to be allocated for each Masking job (Hyperscale
            Job only).
          format: int32
          example: 1024
        feedback_size:
          type: integer
          description: Feedback Size for each Masking job (Hyperscale Job only).
          format: int32
          example: 32
        stream_row_limit:
          type: integer
          description: Stream Row Limit for each Masking job (Hyperscale Job only).
          format: int32
          example: 4
        num_input_streams:
          type: integer
          description: Number of input streams to be configured for Masking Job (Hyperscale
            Job only).
          format: int32
          example: 4
        max_concurrent_source_connections:
          type: integer
          description: Maximum number of parallel connection that the Hyperscale instance
            can have with the source datasource (Hyperscale Job only).
          format: int32
          example: 32
        max_concurrent_target_connections:
          type: integer
          description: Maximum number of parallel connection that the Hyperscale instance
            can have with the target datasource (Hyperscale Job only).
          format: int32
          example: 32
        parallelism_degree:
          type: integer
          description: The degree of parallelism (DOP) per Oracle job to recreate
            the index in the post-load process (Hyperscale Job only).
          format: int32
          example: 4
        source_masking_job_id:
          type: string
          description: The ID of the MaskingJob that was used as the source to create
            this job (Hyperscale Job only).
          example: masking-job-0
        engine_ids:
          type: array
          description: List of engines that this job can run on (Hyperscale Job only).
          items:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: A masking job.
    MaskingJobConnectorsResponse:
      type: object
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        on_the_fly_connector:
          $ref: '#/components/schemas/Connector'
      description: Connector(s) for a masking job.
    MaskingJobSourceEngine:
      type: object
      properties:
        masking_job_id:
          type: string
          description: The MaskingJob entity ID.
          example: masking-job-1
        source_engine_id:
          type: string
          description: The ID of the Engine serving as the source for the MaskingJob.
          example: engine-123
      description: A masking job's source engine.
    MaskingJobWithConnectorRole:
      type: object
      properties:
        id:
          type: string
          description: The Job entity ID.
          example: job-123
        name:
          type: string
          description: The name of this Masking Job.
          example: My favorite MaskingJob
        creation_date:
          type: string
          description: The date this MaskingJob was created.
          format: date-time
          example: 2022-11-30T08:51:34.148Z
        is_on_the_fly_masking:
          type: boolean
          description: Whether the job is an on-the-fly masking job
        last_execution_time:
          type: string
          description: The start time of the most recent execution of this job, if
            available
          format: date-time
        last_execution_status:
          $ref: '#/components/schemas/ExecutionStatus'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        connector_id:
          type: string
          description: The ID of the connector this job is related to
          nullable: true
        connector_role:
          type: string
          description: The role of the connector in the job
          nullable: false
          enum:
          - SOURCE
          - TARGET
      description: A simplified job object combined with a connector ID and the connector's
        role in that job
    MaskingRuleset:
      type: object
      properties:
        type:
          type: string
          description: The Ruleset type.
          nullable: true
          enum:
          - FILE
          - DATABASE
          - MAINFRAME_DATASET
        name:
          type: string
          description: The name of this Ruleset.
        refresh_drops_tables:
          type: boolean
          description: Whether refresh drops tables. Only applicable to database ruleset
            type.
          nullable: true
        algorithms:
          type: array
          description: The list of algorithms for this Ruleset.
          items:
            minLength: 1
            type: string
      description: A masking ruleset.
      example:
        type: DATABASE
        name: The best Ruleset
        refresh_drops_tables: true
    MetadataDbInfo:
      title: MetadataDbInfo
      type: object
      properties:
        external:
          type: boolean
          description: True if an external database, i.e a database running outside
            of the application cluster, is in use.
          example: false
        version:
          type: string
          description: The full database version in String format
          example: TODO
        database_product_name:
          type: string
          description: The database product name as reported by the database itself.
          example: TODO
        major_version:
          type: integer
          description: The database major version.
        minor_version:
          type: integer
          description: The database minor version
        min_supported_major_version:
          type: integer
          description: The minimum supported major version of PostgreSQL.
        min_supported_minor_version:
          type: integer
          description: The minimum supported minor version of PostgreSQL.
        max_supported_major_version:
          type: integer
          description: The maximum supported major version of PostgreSQL.
        max_supported_minor_version:
          type: integer
          description: The maximum supported minor version of PostgreSQL.
        compatible:
          type: boolean
          description: Whether the database is recognized as valid for this product.
            In order to be compatible, the database product name must be a recognized
            PostgreSQL and the database version must be greater than or equal to the
            minimum minor version and smaller than or equal to the maximum support
            version.
      description: Information about the product's metadata database.
    MigrateMaskingJobParameters:
      required:
      - target_engine_id
      type: object
      properties:
        target_engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the engine to migrate the job to.
          example: '1'
        source_environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID or name of the source environment on the target engine.
            This only applies to On-The-Fly jobs.
          example: test-on-the-fly-mask1
        target_environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID or name of the target environment on the target engine
            to migrate the job into.
          example: prod-in-place-mask1
        force_overwrite:
          type: boolean
          description: Whether to overwrite objects that already exist on the target
            engine.
          default: false
      description: Parameters to migrate a masking job.
    NameValuePair:
      required:
      - var_name
      - var_value
      type: object
      properties:
        var_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the environment variable.
          example: env-var-name-1
        var_value:
          maxLength: 256
          minLength: 1
          type: string
          description: The value of the environment variable.
          example: env-var-value-1
    Namespace:
      type: object
      properties:
        id:
          type: string
          description: The Namespace ID.
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The Namespace name.
        tag:
          type: string
          description: This is the tag of the Replication profile that created this
            namespace.
        engine_id:
          type: string
          description: The ID of the engine that the Namespace belongs to.
        description:
          maxLength: 4096
          minLength: 1
          type: string
          description: A description of the namespace.
        secure_namespace:
          type: boolean
          description: True if the source data stream was generated from a ReplicationProfile
            with mode CONTINUOUS_VAULT.
        failed_over:
          type: boolean
          description: True if the namespace has been failed over into the live environment.
        failover_report:
          type: string
          description: If the namespace has been failed over, this contains a report
            about objects affected by the failover.
        locked:
          type: boolean
          description: True if the namespace is locked.
        failback_possible:
          type: boolean
          description: True if the namespace can be failed back.
        failback_capability:
          type: string
          description: Whether the namespace is capable of failback
          enum:
          - FAILBACK_READY
          - FAILBACK_COMPATIBLE
          - FAILBACK_INCOMPATIBLE
          - FAILBACK_UNSUPPORTED
          - FAILOVER_COMMITED_CANNOT_FAILBACK
        failback_incapability_reason:
          type: string
          description: When incapable, the reason why the namespace is incompatible
            with failback.
        replication_mode:
          type: string
          description: The replication mode of the associated ReplicationProfile that
            created the Namespace.
          enum:
          - ENGINE_DATA_REPLICATION
          - MASKED_DATA_DISTRIBUTION
          - CONTINUOUS_VAULT
        last_execution_status:
          type: string
          description: The status of the last execution of the ReplicationProfile
            associated with the Namespace.
          enum:
          - RUNNING
          - COMPLETED
          - SUSPENDED
          - CANCELED
          - FAILED
        last_execution_status_timestamp:
          type: string
          description: The timestamp of the last execution status of the ReplicationProfile
            associated with the Namespace.
          format: date-time
        source_engine_id:
          type: string
          description: The ID of the source engine that the ReplicationProfile that
            created the Namespace belongs to.
        source_engine_name:
          type: string
          description: The name of the source engine that the ReplicationProfile that
            created the Namespace belongs to.
      description: A namespace represents an alternative namespace for objects and
        data within a Delphix engine.
    NetbackupConnectivityCheckParameters:
      title: NetbackupConnectivityCheckParameters
      required:
      - environment_id
      - environment_user_id
      - master_server_name
      - source_client_name
      type: object
      properties:
        environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the target environment to test NetBackup connectivity
            from.
          example: 1-ENVIRONMENT-1
        environment_user_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the environment user.
          example: USER-1
        master_server_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the NetBackup master server to attempt to connect
            to.
          example: master_server.delphix.com
        source_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the NetBackup client to attempt to connect with.
          example: source_client.delphix.com
      description: Parameters to test NetBackup master server and client connectivity
        on an environment.
    ObjectPermissionAccessGroups:
      type: object
      properties:
        id:
          type: string
          description: ID of the access group.
        name:
          type: string
          description: Name of the access group.
        permissions:
          type: array
          description: Permissions for the object in this access group.
          items:
            type: string
      description: The account groups for object permission account.
    ObjectPermissionAccount:
      type: object
      properties:
        id:
          type: integer
          description: Numeric ID of the Account.
          format: int64
        first_name:
          type: string
          description: First name of the Account.
        last_name:
          type: string
          description: Last name of the Account.
        email:
          type: string
          description: Email of the Account.
        access_groups:
          type: array
          description: Access groups of the Account.
          items:
            $ref: '#/components/schemas/ObjectPermissionAccessGroups'
      description: The account details for object permission.
    ObjectPermissionsResponse:
      type: object
      properties:
        accounts:
          type: array
          description: The Accounts permitted for this object.
          items:
            $ref: '#/components/schemas/ObjectPermissionAccount'
      description: The object permissions for a given object in DCT based on object
        type and object id.
    ObjectTypeEnum:
      type: string
      description: Type of the DCT object.
      example: VDB
      enum:
      - ALGORITHM
      - ACCESS_GROUP
      - ACCOUNT
      - ROLE
      - BOOKMARK
      - CDB
      - CLASSIFIER
      - DATA_CLASS
      - DATABASE_TEMPLATE
      - DISCOVERY_EXPRESSION
      - DISCOVERY_POLICY
      - DSOURCE
      - ENGINE
      - ENVIRONMENT
      - MASKING_ENVIRONMENT
      - MASKING_FILE_UPLOAD
      - MASKING_JOB
      - MASKING_JOB_SET
      - REPORT_SCHEDULE
      - RULE_SET
      - SOURCE
      - VAULT
      - VCDB
      - VDB
      - VDB_GROUP
      - CONNECTOR
      - VIRTUALIZATION_POLICY
      - DATASET_GROUP
      - ENGINE_VAULT
      - KERBEROS_CONFIG
      - TIMEFLOW
      - MASKING_PLUGIN
      - HYPERSCALE_INSTANCE
      - HYPERSCALE_CONNECTOR
      - HYPERSCALE_DATASET
      - TOOLKIT
      - REPLICATION_PROFILE
      - NAMESPACE
      - STAGING_SOURCE
      - DATA_LAYOUT
      - SNAPSHOT
      - JOB
    ObjectTypeProperty:
      required:
      - object_type
      type: object
      properties:
        object_type:
          type: string
          description: Object type.
          example: VDB
          enum:
          - ALGORITHM
          - ACCESS_GROUP
          - ACCOUNT
          - AUDIT_LOGS_SUMMARY_REPORT
          - ROLE
          - API_USAGE_REPORT
          - BOOKMARK
          - CDB
          - CLASSIFIER
          - DATA_CLASS
          - DATABASE_TEMPLATE
          - DISCOVERY_EXPRESSION
          - DISCOVERY_POLICY
          - DSOURCE
          - ENGINE
          - ENVIRONMENT
          - MASKING_JOB
          - MASKING_ENVIRONMENT
          - MASKING_FILE_UPLOAD
          - MASKING_JOB_SET
          - REPORT_SCHEDULE
          - RULE_SET
          - SOURCE
          - VAULT
          - VCDB
          - VDB
          - VDB_GROUP
          - CONNECTOR
          - CONNECTIVITY_CHECK
          - DSOURCE_USAGE_REPORT
          - DSOURCE_CONSUMPTION_REPORT
          - JOB
          - PHONEHOME_BUNDLE
          - PRODUCT_INFO
          - PRODUCT_REGISTRATION
          - PROXY_CONFIGURATION
          - SMTP_CONFIG
          - MASKING_EXECUTION_METRICS_REPORT
          - STORAGE_SUMMARY_REPORT
          - STORAGE_SAVINGS_SUMMARY_REPORT
          - VDB_INVENTORY_REPORT
          - LDAP
          - SAML
          - PASSWORD_POLICY
          - GLOBAL_PROPERTIES
          - SYSTEM
          - API_CLASSIFICATION
          - VIRTUALIZATION_POLICY
          - DATASET_GROUP
          - METADATA_DATABASE
          - ENGINE_VAULT
          - KERBEROS_CONFIG
          - TIMEFLOW
          - HYPERSCALE_INSTANCE
          - HYPERSCALE_CONNECTOR
          - HYPERSCALE_DATASET
          - TOOLKIT
          - MASKING_PLUGIN
          - REPLICATION_PROFILE
          - NAMESPACE
          - ENGINE_PERFORMANCE_ANALYTIC_REPORT
          - STAGING_SOURCE
          - DATA_RISK_REPORT
          - ENGINE_GLOBAL_OBJECT_STATE_REPORT
          - DATA_LAYOUT
          - VIRTUALIZATION_JOB
          - GLOBAL_TAG
          - VIRTUALIZATION_ACTION
          - VIRTUALIZATION_ALERT
          - VIRTUALIZATION_FAULT
          - LICENSE
      description: A DCT object type.
    OracleAttachCdbParameters:
      required:
      - dsource_id
      properties:
        dsource_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the dsource to attach.
      allOf:
      - $ref: '#/components/schemas/OracleAttachParameters'
      - type: object
    OracleAttachDSourceParameters:
      required:
      - source_id
      properties:
        source_id:
          maxLength: 256
          minLength: 1
          type: string
          description: Id of the source to attach.
      allOf:
      - $ref: '#/components/schemas/OracleAttachParameters'
      - type: object
    OracleAttachParameters:
      type: object
      properties:
        backup_level_enabled:
          type: boolean
          description: Boolean value indicates whether LEVEL-based incremental backups
            can be used on the source database.
        bandwidth_limit:
          type: integer
          description: Bandwidth limit (MB/s) for SnapSync and LogSync network traffic.
            A value of 0 means no limit.
          default: 0
        check_logical:
          type: boolean
          description: True if extended block checking should be used for this linked
            database.
          default: false
        compressed_linking_enabled:
          type: boolean
          description: True if SnapSync data from the source should be compressed
            over the network. Enabling this feature will reduce network bandwidth
            consumption and may significantly improve throughput, especially over
            slow network.
          default: true
        double_sync:
          type: boolean
          description: True if two SnapSyncs should be performed in immediate succession
            to reduce the number of logs required to provision the snapshot. This
            may significantly reduce the time necessary to provision from a snapshot.
          default: false
        encrypted_linking_enabled:
          type: boolean
          description: True if SnapSync data from the source should be retrieved through
            an encrypted connection. Enabling this feature can decrease the performance
            of SnapSync from the source but has no impact on the performance of VDBs
            created from the retrieved data.
          default: false
        environment_user:
          type: string
          description: Reference to the user that should be used in the host.
        external_file_path:
          maxLength: 1024
          minLength: 1
          type: string
          description: External file path.
        files_per_set:
          maximum: 64
          minimum: 1
          type: integer
          description: Number of data files to include in each RMAN backup set.
          default: 5
        force:
          type: boolean
          description: If true, attach will succeed even if the resetlogs of the new
            database does not match the resetlogs information of the original database.
          default: false
        link_now:
          type: boolean
          description: True if initial load should be done immediately.
          default: false
        number_of_connections:
          type: integer
          description: Total number of transport connections to use during SnapSync.
          default: 1
        operations:
          type: array
          description: Operations to perform after syncing a created dSource and before
            running the LogSync.
          items:
            $ref: '#/components/schemas/SourceOperation'
        oracle_fallback_user:
          maxLength: 256
          minLength: 1
          type: string
          description: The database fallback username. Optional if bequeath connections
            are enabled (to be used in case of bequeath connection failures). Only
            required for username-password auth.
          example: oracle
        oracle_fallback_credentials:
          maxLength: 256
          minLength: 1
          type: string
          description: Password for fallback username.
          example: oracle
          x-dct-toolkit-credential-field: true
        rman_channels:
          maximum: 32
          minimum: 1
          type: integer
          description: Number of parallel channels to use.
          default: 2
    OracleClusterNodeInstance:
      type: object
      properties:
        instance_name:
          type: string
          description: The name of this instance.
        instance_number:
          type: integer
          description: The number of this instance.
        source_id:
          type: string
          description: The id of Source this instance belongs to.
      description: An oracle cluster node instance.
    OracleConfigTypeEnum:
      type: string
      example: OracleSIConfig
      enum:
      - OracleRACConfig
      - OracleSIConfig
      - OraclePDBConfig
    OracleDSourceLinkSourceParameters:
      required:
      - source_id
      allOf:
      - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
      - type: object
        properties:
          external_file_path:
            maxLength: 1024
            minLength: 1
            type: string
            description: External file path.
          environment_user_id:
            maxLength: 256
            minLength: 1
            type: string
            description: Id of the environment user to use for linking.
          backup_level_enabled:
            type: boolean
            description: Boolean value indicates whether LEVEL-based incremental backups
              can be used on the source database.
          rman_channels:
            maximum: 32
            minimum: 1
            type: integer
            description: Number of parallel channels to use.
            default: 2
          files_per_set:
            maximum: 64
            minimum: 1
            type: integer
            description: Number of data files to include in each RMAN backup set.
            default: 5
          check_logical:
            type: boolean
            description: True if extended block checking should be used for this linked
              database.
            default: false
          encrypted_linking_enabled:
            type: boolean
            description: True if SnapSync data from the source should be retrieved
              through an encrypted connection. Enabling this feature can decrease
              the performance of SnapSync from the source but has no impact on the
              performance of VDBs created from the retrieved data.
            default: false
          compressed_linking_enabled:
            type: boolean
            description: True if SnapSync data from the source should be compressed
              over the network. Enabling this feature will reduce network bandwidth
              consumption and may significantly improve throughput, especially over
              slow network.
            default: true
          bandwidth_limit:
            type: integer
            description: Bandwidth limit (MB/s) for SnapSync and LogSync network traffic.
              A value of 0 means no limit.
            default: 0
          number_of_connections:
            type: integer
            description: Total number of transport connections to use during SnapSync.
            default: 1
          diagnose_no_logging_faults:
            type: boolean
            description: If true, NOLOGGING operations on this container are treated
              as faults and cannot be resolved manually.
            default: true
          pre_provisioning_enabled:
            type: boolean
            description: If true, pre-provisioning will be performed after every sync.
            default: false
          link_now:
            type: boolean
            description: True if initial load should be done immediately.
            default: false
          force_full_backup:
            type: boolean
            description: Whether or not to take another full backup of the source
              database.
            default: false
          double_sync:
            type: boolean
            description: True if two SnapSyncs should be performed in immediate succession
              to reduce the number of logs required to provision the snapshot. This
              may significantly reduce the time necessary to provision from a snapshot.
            default: false
          skip_space_check:
            type: boolean
            description: Skip check that tests if there is enough space available
              to store the database in the Delphix Engine. The Delphix Engine estimates
              how much space a database will occupy after compression and prevents
              SnapSync if insufficient space is available. This safeguard can be overridden
              using this option. This may be useful when linking highly compressible
              databases.
            default: false
          do_not_resume:
            type: boolean
            description: Indicates whether a fresh SnapSync must be started regardless
              if it was possible to resume the current SnapSync. If true, we will
              not resume but instead ignore previous progress and backup all datafiles
              even if already completed from previous failed SnapSync. This does not
              force a full backup, if an incremental was in progress this will start
              a new incremental snapshot.
            default: false
          files_for_full_backup:
            type: array
            description: List of datafiles to take a full backup of. This would be
              useful in situations where certain datafiles could not be backed up
              during previous SnapSync due to corruption or because they went offline.
            items:
              type: integer
          log_sync_mode:
            type: string
            description: LogSync operation mode for this database.
            enum:
            - ARCHIVE_ONLY_MODE
            - ARCHIVE_REDO_MODE
            - UNDEFINED
            default: UNDEFINED
          log_sync_interval:
            type: integer
            description: Interval between LogSync requests, in seconds.
            default: 5
          non_sys_username:
            maxLength: 256
            minLength: 1
            type: string
            description: Non-SYS database user to access this database. Only required
              for username-password auth (Single tenant only).
            example: oracle
          non_sys_password:
            maxLength: 256
            minLength: 1
            type: string
            description: Password for non sys user authentication (Single tenant only).
            example: oracle
            x-dct-toolkit-credential-field: true
          non_sys_vault_username:
            maxLength: 256
            minLength: 1
            type: string
            description: Delphix display name for the non sys vault user(Single tenant
              only).
            example: my-vault
          non_sys_vault:
            maxLength: 256
            minLength: 1
            type: string
            description: The name or reference of the vault from which to read the
              database credentials (Single tenant only).
            example: my-vault
          non_sys_hashicorp_vault_engine:
            maxLength: 256
            minLength: 1
            type: string
            description: Vault engine name where the credential is stored (Single
              tenant only).
            example: kv
          non_sys_hashicorp_vault_secret_path:
            maxLength: 256
            minLength: 1
            type: string
            description: Path in the vault engine where the credential is stored (Single
              tenant only).
            example: oracle-env
          non_sys_hashicorp_vault_username_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Hashicorp vault key for the username in the key-value store
              (Single tenant only).
            example: username
          non_sys_hashicorp_vault_secret_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Hashicorp vault key for the password in the key-value store
              (Single tenant only).
            example: secret
          non_sys_azure_vault_name:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure key vault name (Single tenant only).
            example: azure_vault
          non_sys_azure_vault_username_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure vault key for the username in the key-value store (Single
              tenant only).
            example: username
          non_sys_azure_vault_secret_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure vault key for the password in the key-value store (Single
              tenant only).
            example: secret
          non_sys_cyberark_vault_query_string:
            maxLength: 256
            minLength: 1
            type: string
            description: Query to find a credential in the CyberArk vault (Single
              tenant only).
            example: Safe=Test;Folder=Test;Object=Test
          fallback_username:
            maxLength: 256
            minLength: 1
            type: string
            description: The database fallback username. Optional if bequeath connections
              are enabled (to be used in case of bequeath connection failures). Only
              required for username-password auth.
            example: oracle
          fallback_password:
            maxLength: 256
            minLength: 1
            type: string
            description: Password for fallback username.
            example: oracle
            x-dct-toolkit-credential-field: true
          fallback_vault_username:
            maxLength: 256
            minLength: 1
            type: string
            description: Delphix display name for the fallback vault user.
            example: my-vault
          fallback_vault:
            maxLength: 256
            minLength: 1
            type: string
            description: The name or reference of the vault from which to read the
              database credentials.
            example: my-vault
          fallback_hashicorp_vault_engine:
            maxLength: 256
            minLength: 1
            type: string
            description: Vault engine name where the credential is stored.
            example: kv
          fallback_hashicorp_vault_secret_path:
            maxLength: 256
            minLength: 1
            type: string
            description: Path in the vault engine where the credential is stored.
            example: oracle-env
          fallback_hashicorp_vault_username_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Hashicorp vault key for the username in the key-value store.
            example: username
          fallback_hashicorp_vault_secret_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Hashicorp vault key for the password in the key-value store.
            example: secret
          fallback_azure_vault_name:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure key vault name.
            example: azure_vault
          fallback_azure_vault_username_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure vault key for the username in the key-value store.
            example: username
          fallback_azure_vault_secret_key:
            maxLength: 256
            minLength: 1
            type: string
            description: Azure vault key for the password in the key-value store.
            example: secret
          fallback_cyberark_vault_query_string:
            maxLength: 256
            minLength: 1
            type: string
            description: Query to find a credential in the CyberArk vault.
            example: Safe=Test;Folder=Test;Object=Test
          ops_pre_log_sync:
            type: array
            description: Operations to perform after syncing a created dSource and
              before running the LogSync.
            items:
              $ref: '#/components/schemas/SourceOperation'
    OracleLinkStagingPushDSourceDefaultRequest:
      required:
      - environment_id
      properties:
        environment_id:
          type: string
          description: The ID of the environment to be linked.
        container_type:
          type: string
          description: The container type of this database.If not provided the request
            would be considered for a PDB database.
          enum:
          - ROOT_CDB
          - NON_CDB
    OracleListener:
      properties:
        id:
          type: string
          description: Id of this listener.
          example: 1-ORACLE_NODE_LISTENER-11
        name:
          type: string
          description: Name of this listener.
          example: my-listener
        type:
          $ref: '#/components/schemas/OracleListenerTypeEnum'
        protocol_addresses:
          type: array
          description: The list of protocol addresses for this listener.
          example:
          - (ADDRESS=(PROTOCOL=tcp)(HOST=10.75.59.184)(PORT=4567))
          - (ADDRESS=(PROTOCOL=ipc)(KEY=LISTENER))
          items:
            type: string
        client_endpoints:
          type: array
          description: The list of client endpoints for this listener.
          example:
          - (ADDRESS=(PROTOCOL=tcp)(HOST=10.75.59.184)(PORT=4567))
          items:
            type: string
        is_discovered:
          type: boolean
          description: Whether this listener was automatically discovered or not.
        host_id:
          type: string
          description: Id to the host this listener is associated with.
          example: 1-UNIX_HOST-14
    OracleListenerTypeEnum:
      type: string
      example: NODE
      enum:
      - NODE
      - SCAN
    OracleRACDatabaseInstance:
      type: object
      properties:
        instance_name:
          type: string
          description: The name of this instance.
        instance_number:
          minimum: 1
          type: integer
          description: The number of this instance.
        node_reference:
          type: string
          description: The reference to the cluster node which the instance is running
            on.
    OracleRacCustomEnvFile:
      type: object
      properties:
        node_id:
          maxLength: 256
          minLength: 1
          type: string
        path_parameters:
          type: string
    OracleRacCustomEnvVar:
      type: object
      properties:
        node_id:
          maxLength: 256
          minLength: 1
          type: string
        name:
          maxLength: 4096
          minLength: 1
          type: string
        value:
          maxLength: 4096
          minLength: 1
          type: string
    OracleService:
      properties:
        discovered:
          type: boolean
          description: Represents whether this jdbc connection string is auto discovered
            or not.
        jdbc_connection_string:
          type: string
          description: The jdbc connection string used to connect with the database.
          example: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.110.230.197)(PORT=1521))(CONNECT_DATA=(UR=A)(SERVICE_NAME=VDBOMSRBBDC6C_UJG)))
    OracleSourceCreateParameters:
      required:
      - oracle_config_type
      - repository_id
      type: object
      properties:
        oracle_config_type:
          $ref: '#/components/schemas/OracleConfigTypeEnum'
        engine_id:
          type: string
          description: The ID of the engine to create the source on.
        environment_id:
          type: string
          description: The ID of the environment to create the source on.
        database_name:
          type: string
          description: The name of the database.
        repository_id:
          type: string
          description: The id of the containing repository where this database is
            created.
        instances:
          type: array
          description: The instances of this RAC database.
          items:
            $ref: '#/components/schemas/OracleRACDatabaseInstance'
        unique_name:
          type: string
          description: The unique name of this database.
        instance_name:
          type: string
          description: The instance name of this single instance database.
    OracleStagingPushDSourceLinkSourceParameters:
      required:
      - database_name
      - engine_id
      allOf:
      - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
      - type: object
        properties:
          engine_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the engine to link staging push database on.
          container_type:
            type: string
            description: The container type of this database.If not provided the request
              would be considered as a PDB database.
            enum:
            - ROOT_CDB
            - NON_CDB
          environment_user_id:
            maxLength: 256
            minLength: 1
            type: string
            description: Id of the environment user to use for linking.
          repository:
            maxLength: 1024
            minLength: 1
            type: string
            description: The repository reference to link.
          database_name:
            maxLength: 1024
            minLength: 1
            type: string
            description: The name of the database.
          database_unique_name:
            maxLength: 1024
            minLength: 1
            type: string
            description: The unique name of the database.
          sid:
            maxLength: 1024
            minLength: 1
            type: string
            description: The name (sid) of the instance.
          mount_base:
            maxLength: 1024
            minLength: 1
            type: string
            description: The base mount point to use for the NFS mounts.
          custom_env_variables_pairs:
            type: array
            description: An array of name value pair of environment variables.
            items:
              $ref: '#/components/schemas/NameValuePair'
          custom_env_variables_paths:
            type: array
            description: An array of strings of whitespace-separated parameters to
              be passed to the source command. The first parameter must be an absolute
              path to a file that exists on the target environment. Every subsequent
              parameter will be treated as an argument interpreted by the environment
              file.
            items:
              type: string
          auto_staging_restart:
            type: boolean
            description: Boolean value indicates whether this staging database should
              automatically be restarted when staging host reboot is detected.
            default: false
          physical_standby:
            type: boolean
            description: Boolean value indicates whether this staging database will
              be configured as a physical standby.
            default: false
          validate_snapshot_in_readonly:
            type: boolean
            description: Boolean value indicates whether this staging database snapshot
              will be validated by opening it in read-only.
            default: false
          staging_database_templates:
            type: array
            description: An array of name value pair of Oracle database configuration
              parameter overrides. This property is deprecated. Use staging_database_config_params
              instead.
            deprecated: true
            items:
              $ref: '#/components/schemas/NameValuePair'
          staging_database_config_params:
            type: object
            additionalProperties:
              type: string
            description: Oracle database configuration parameter overrides. If both
              staging_database_templates and staging_database_config_params are specified,
              staging_database_config_params will be used.
            nullable: true
            example:
              processes: '150'
          staging_container_database_reference:
            maxLength: 1024
            minLength: 1
            type: string
            description: Reference of the CDB source config.
          ops_pre_log_sync:
            type: array
            description: Operations to perform after syncing a created dSource and
              before running the LogSync.
            items:
              $ref: '#/components/schemas/SourceOperation'
          tde_keystore_config_type:
            type: string
            description: The type of TDE keystore configuration to use for the staging
              database.
            enum:
            - FILE
            - OKV
            - HSM
          template_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The template ID of the target Oracle Staging Push dSource.
            example: 70096a7-6655-4973-8464-682c41c932da
    OracleVirtualIP:
      type: object
      properties:
        domain_name:
          minLength: 1
          type: string
          description: The domain name for the VirtualIP.
          example: virtual.domain.com
        ip:
          type: string
          description: The IP address for this VirtualIP.
          format: ipv4
          example: 192.168.0.1
        discovered:
          type: boolean
          description: Whether this VirtualIP was discovered.
          example: true
      description: A virtual IP address.
    PaginatedResponseMetadata:
      type: object
      properties:
        prev_cursor:
          type: string
          description: Pointer to the previous page of results. Use this value as
            a cursor query parameter in a subsequent request, along with limit, to
            navigate through the collection by virtual page.
        next_cursor:
          type: string
          description: Pointer to the next page of results. Use this value as a cursor
            query parameter in a subsequent request, along with limit, to navigate
            through the collection by virtual page.
        total:
          type: integer
          description: The total number of results. This value may not be provided.
          format: int_64
    PasswordPoliciesParams:
      title: PasswordPoliciesParameters
      type: object
      properties:
        enabled:
          type: boolean
          description: True if password policies are enforced/enabled.
          example: false
          default: true
        min_length:
          minimum: 0
          type: integer
          description: Minimum length for password.
          example: 8
          default: 15
        reuse_disallow_limit:
          maximum: 20
          minimum: 0
          type: integer
          description: The password can not be the same as any of the previous n passwords.
          example: 3
          default: 2
        digit:
          type: boolean
          description: Mandate at least one digit in password.
          example: false
          default: true
        uppercase_letter:
          type: boolean
          description: Mandate at least one uppercase letter in password.
          example: false
          default: true
        lowercase_letter:
          type: boolean
          description: Mandate at least one lower letter in password.
          example: false
          default: true
        special_character:
          type: boolean
          description: Mandate at least one special character in password.
          example: false
          default: true
        disallow_username_as_password:
          type: boolean
          description: Disallows password containing case-insensitive user name or
            reversed user name.
          example: false
          default: true
        maximum_password_attempts:
          maximum: 100
          minimum: 0
          type: integer
          description: The number of allowed attempts for incorrect password, after
            which the account gets locked.
          example: 3
          default: 5
      description: Parameters to read or update password policies
    PasswordVault:
      type: object
      properties:
        id:
          type: string
          description: The password vault ID.
          example: 1-PASSWORD-VAULT-1
        name:
          type: string
          description: The name of this password vault.
          example: Untitled
        namespace_id:
          type: string
          description: The namespace id of this password vault.
          example: 1-NAMESPACE-1
        namespace_name:
          type: string
          description: The namespace name of this password vault.
          example: test-engine-1
        is_replica:
          type: boolean
          description: Is this a replicated object.
          example: true
        engine_id:
          type: string
          description: Id of the Engine that this password vault belongs to.
          example: '1'
        engine_name:
          type: string
          description: Name of the Engine that this password vault belongs to.
          example: Engine-1
        type:
          type: string
          description: The type of this password vault.
          example: HASHICORPVAULT
          enum:
          - HASHICORPVAULT
          - CYBERARKPASSWORDVAULT
          - AZUREVAULT
          - UNKNOWN
        host:
          type: string
          description: Host name or IP address of this password vault server.
          example: 10.119.132.43
        port:
          type: integer
          description: Port of this password vault server.
          format: int64
          example: 8200
        enabled:
          type: boolean
          description: The vault is enabled or not.
          nullable: true
        namespace:
          type: string
          description: The namespace of this password vault.
          example: ns-1
      description: A Delphix engine password vault.
    PermissionEnum:
      type: string
      description: Type of the permission on DCT object.
      example: READ
      enum:
      - READ
      - UPDATE
      - DELETE
      - EXECUTE
      - CANCEL
      - MIGRATE
      - REFRESH
      - DISABLE
      - ENABLE
      - ABANDON
      - VALIDATE
      - START
      - STOP
      - SNAPSHOT
      - COPY
      - REMOVE_JOB
      - PASSWORD_RESET
      - UNDO_IMPORT
      - IMPORT
      - PROVISION_FROM_BOOKMARK
      - PROVISION
      - REFRESH_FROM_BOOKMARK
      - REFRESH_FROM_SNAPSHOT
      - REFRESH_FROM_TIMESTAMP
      - REFRESH_FROM_LOCATION
      - CREATE_ENVIRONMENT
      - CREATE_BOOKMARK
      - CREATE_VDBGROUP
      - MANAGE_TAGS
      - LINK
      - REPLICATE
      - REPLICATE_TO
      - CONVERT_AND_DROP
      - IMPORT_BOOKMARKS
      - FAILOVER
      - COMMIT_FAILOVER
      - FAILBACK
      - DISCARD
      - LOCK
      - UNLOCK
      - FORCE_UNLOCK
      - LOCK_FOR_OTHER_ACCOUNT
      - UPDATE_TIMEFLOW
      - SNAPSHOT_DELETE
      - SWITCH_TIMEFLOW
      - DELETE_TIMEFLOW
      - SNAPSHOT_UPDATE
      - IMPORT_ACCOUNTS
      - DETACH_SOURCE
      - ATTACH_SOURCE
      - RESOLVE
      - RESOLVE_ALL
      - RESOLVE_OR_IGNORE
      - API_KEY_RESET
      - API_KEY_DELETE
      - DELETE_BOOKMARK
      - UPDATE_BOOKMARK
      - READ_BOOKMARK
      - UPLOAD_MASKING_FILE
      - GLOBAL_SYNC_ENGINES
      - ADD_ENGINE_TO_HYPERSCALE
      - CONFIGURE_CUSTOM_AUTO_TAGGING
      - CONFIGURE_PREDEFINED_AUTO_TAGGING
      - APPLY
      - UNAPPLY
      - UNDO_REFRESH
      - CONVERT
    PermissionObject:
      description: A Permission Object which is mapping between object type and its
        permissions.
      allOf:
      - $ref: '#/components/schemas/ObjectTypeProperty'
      - $ref: '#/components/schemas/PermissionProperty'
    PermissionProperty:
      required:
      - permissions
      type: object
      properties:
        permissions:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: List of permissions.
          items:
            type: string
            enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - EXECUTE
            - CANCEL
            - MIGRATE
            - REFRESH
            - DISABLE
            - ENABLE
            - GLOBAL_SYNC_ENGINES
            - ABANDON
            - VALIDATE
            - START
            - STOP
            - SNAPSHOT
            - COPY
            - REMOVE_JOB
            - PASSWORD_RESET
            - UNDO_IMPORT
            - IMPORT
            - PROVISION_FROM_BOOKMARK
            - PROVISION
            - REFRESH_FROM_BOOKMARK
            - REFRESH_FROM_SNAPSHOT
            - REFRESH_FROM_TIMESTAMP
            - REFRESH_FROM_LOCATION
            - CREATE_ENVIRONMENT
            - CREATE_BOOKMARK
            - CREATE_VDBGROUP
            - MANAGE_TAGS
            - SET_TAGS_AT_OBJECT_CREATION
            - SNAPSHOT_UPDATE
            - SNAPSHOT_DELETE
            - SWITCH_TIMEFLOW
            - UPDATE_TIMEFLOW
            - DELETE_TIMEFLOW
            - LINK
            - LOCK
            - UNLOCK
            - LOCK_FOR_OTHER_ACCOUNT
            - FORCE_UNLOCK
            - ADD_ENGINE_TO_HYPERSCALE
            - UPLOAD_MASKING_FILE
            - DELETE_BOOKMARK
            - UPDATE_BOOKMARK
            - READ_BOOKMARK
            - REPLICATE
            - REPLICATE_TO
            - CONFIGURE_PREDEFINED_AUTO_TAGGING
            - CONFIGURE_PREDEFINED_AUTO_TAGGING_AT_REGISTRATION
            - CONVERT_AND_DROP
            - CONFIGURE_CUSTOM_AUTO_TAGGING
            - CONFIGURE_CUSTOM_AUTO_TAGGING_AT_REGISTRATION
            - IMPORT_BOOKMARKS
            - FAILOVER
            - COMMIT_FAILOVER
            - FAILBACK
            - DISCARD
            - IMPORT_ACCOUNTS
            - DETACH_SOURCE
            - ATTACH_SOURCE
            - RESOLVE
            - RESOLVE_ALL
            - RESOLVE_OR_IGNORE
            - API_KEY_RESET
            - API_KEY_DELETE
            - APPLY
            - UNAPPLY
            - UNDO_REFRESH
            - CONVERT
      description: A Permission object.
    PermissionsRequest:
      required:
      - permission_objects
      type: object
      properties:
        permission_objects:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: Array of permissions with object type and their permission.
          items:
            $ref: '#/components/schemas/PermissionObject'
    PhoneHomeBundle:
      required:
      - api_telemetry
      - bundle_generation_time
      - dates
      - product_info
      - registered_engines
      type: object
      properties:
        product_info:
          $ref: '#/components/schemas/PhoneHomeBundleProductInfo'
        registered_engines:
          type: array
          description: A list of Delphix Engines registered with this instance of
            Data Control Tower.
          items:
            $ref: '#/components/schemas/PhoneHomeBundleRegisteredEngine'
        api_telemetry:
          type: array
          description: A list of API telemetry records."
          items:
            $ref: '#/components/schemas/PhoneHomeBundleApiTelemetry'
        dates:
          type: array
          description: A list of dates for which telemetry data is included in this
            bundle.
          items:
            type: string
            format: date
        bundle_generation_time:
          type: string
          description: The UTC time at bundle generation (ISO 8601 format).
          format: date-time
      description: A bundle containing product identification, configuration information
        and API telemetry records.
    PhoneHomeBundleApiTelemetry:
      required:
      - account_id
      - api_endpoint
      - api_method
      - client_name
      - dct_version
      - end_time
      - id
      - is_automation
      - response_status
      - start_time
      - user_agent
      type: object
      properties:
        id:
          type: integer
          description: A programmatically-generated and auto-incrementing ID number
            for the API call.
          format: int64
          nullable: true
        api_endpoint:
          type: string
          description: The API endpoint path that was called. Note that all identifiable
            parameters are removed.
          example: /management/engines/{engineId}
        api_method:
          type: string
          description: The HTTP method used to call the API endpoint.
          example: GET
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
        start_time:
          type: string
          description: The UTC time the API call was initiated (ISO 8601 format).
        end_time:
          type: string
          description: The UTC time the API call returned a response (ISO 8601 format).
        response_status:
          type: integer
          description: The HTTP status code of the response.
        user_agent:
          type: string
          description: The value of the "User-Agent" header in the request, if present.
          example: '["Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
            (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36","curl/7.55.1","PostmanRuntime/7.26.8","node"]'
        client_name:
          type: string
          description: The Data Control Tower client name (X-Dct-Client-Name HTTP
            header). This is used by Delphix-built integrations, like the Terraform
            Provider.
        is_automation:
          type: boolean
          description: True if the API is classified as an automation API which is
            the basis of how API calls are charged.
        dct_version:
          type: string
          description: The version of this Data Control Tower instance at the time
            the API was called.
        account_id:
          type: integer
          description: A number to identify the user account or API key that performed
            this API call.
          format: int64
      description: Telemetry data for an HTTP API call.
    PhoneHomeBundleProductHistory:
      required:
      - installed_on
      - version
      type: object
      properties:
        version:
          type: string
          description: The product version.
          example: 15.0.0
        installed_on:
          type: string
          description: The UTC time when the version was installed (ISO 8601 format)
          example: 2024-03-05T17:17:39.513Z
      description: The product history data included in the phonehome bundle's product
        information.
    PhoneHomeBundleProductInfo:
      required:
      - api_version
      - product_upgrade_history
      - product_version
      - system_uuid
      type: object
      properties:
        system_uuid:
          type: string
          description: A unique identifier for this Data Control Tower instance.
          example: c67a008d-68fe-2bac-61ec-651c0720f8b1
        product_version:
          type: string
          description: The currently running version of this instance of Data Control
            Tower.
          example: 15.0.0
        api_version:
          type: string
          description: The API version in use for this instance of Data Control Tower.
          example: 3.9.0
        product_upgrade_history:
          type: array
          description: The upgrade history of this instance of Data Control Tower.
          items:
            $ref: '#/components/schemas/PhoneHomeBundleProductHistory'
      description: Information to identify this Data Control Tower instance.
    PhoneHomeBundleRegisteredEngine:
      required:
      - id
      - type
      - uuid
      - version
      type: object
      properties:
        id:
          type: integer
          description: A programmatically-generated and auto-incrementing ID for the
            registered Delphix Engine.
          format: int64
        uuid:
          type: string
          description: The UUID of the registered Delphix Engine.
          nullable: true
        type:
          type: string
          description: The type of registered Delphix Engine.
          nullable: true
          example: VIRTUALIZATION
          enum:
          - VIRTUALIZATION
          - MASKING
          - BOTH
          - UNSET
        version:
          type: string
          description: The running version registered Delphix Engine.
          nullable: true
      description: Identification data for a Delphix Engine registered with this instance
        of Data Control Tower.
    PolicyTargetObject:
      type: object
      properties:
        object_type:
          $ref: '#/components/schemas/TargetPolicyObjectType'
        object_id:
          type: string
          description: The ID of the object, the policy to be applied to.
      description: A policy target object to apply policy to.This contains values
        for which translation logic is in place and for which users can query virtualization-jobs
        history.
    PostgresSourceCreateParameters:
      required:
      - name
      - repository
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the source.
          example: postgres-test
        repository_id:
          minLength: 1
          type: string
          description: The ID of the Repository onto which the source will be created.
          example: 1-APPDATA_REPOSITORY-10
        engine_id:
          type: string
          description: The ID of the engine to create the source on.
          example: '1'
        environment_id:
          type: string
          description: The ID of the environment to create the source on.
          example: 7-UNIX_HOST_ENVIRONMENT-3
    PostgresSourceUpdateParameters:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the source.
          example: postgres_test_update
    ProductHistory:
      properties:
        version:
          type: string
          description: Product Version.
          example: 1.0.0
        installed_on:
          type: string
          description: This version installed on date.
          format: date-time
          example: 2022-05-22T09:15:30Z
    ProductInfo:
      title: ProductInfoResponse
      type: object
      properties:
        api_version:
          type: string
          description: Current API version.
          example: 1.0.0
        product_version:
          type: string
          description: Current installed product version.
          example: 1.0.0
        system_uuid:
          type: string
          description: System UUID
        product_upgrade_history:
          type: array
          description: Product upgrade history.
          items:
            $ref: '#/components/schemas/ProductHistory'
        supported_api_versions:
          type: array
          description: All the supported API versions.
          items:
            type: string
        deployment_mode:
          type: string
          description: The deployment mode of this DCT instance.
      description: Product Information Response
    ProductRegistrationOfflinePayload:
      required:
      - authentication_token
      - data_key
      type: object
      properties:
        data_key:
          type: string
          x-dct-toolkit-credential-field: true
        authentication_token:
          type: string
          x-dct-toolkit-credential-field: true
      description: Product registration object for a manually generated payload.
    ProductRegistrationOnlinePayload:
      required:
      - token
      type: object
      properties:
        token:
          type: string
          x-dct-toolkit-credential-field: true
      description: Product registration object for a manually generated payload.
    ProvisionVDBByLocationDefaultsRequest:
      type: object
      properties:
        source_data_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the source object (dSource or VDB) to provision from.
            All other objects referenced by the parameters must live on the same engine
            as the source.
          example: source-123
        engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the Engine onto which to provision. If the source
            ID unambiguously identifies a source object, this parameter is unnecessary
            and ignored.
          example: engine-123
        location:
          maxLength: 256
          minLength: 1
          type: string
          description: The location to get the defaults from.
          example: '112233'
        timeflow_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the timeflow to provision from.
          example: timeflow_123
    ProvisionVDBByLocationParameters:
      allOf:
      - $ref: '#/components/schemas/BaseProvisionVDBParameters'
      - $ref: '#/components/schemas/DataPointByLocationParameters'
      - type: object
        properties:
          engine_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the Engine onto which to provision. If the source
              ID unambiguously identifies a source object, this parameter is unnecessary
              and ignored.
            example: engine-123
          source_data_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the source object (dSource or VDB) to provision
              from. All other objects referenced by the parameters must live on the
              same engine as the source.
            example: source-123
          make_current_account_owner:
            type: boolean
            description: Whether the account provisioning this VDB must be configured
              as owner of the VDB.
            default: true
    ProvisionVDBBySnapshotDefaultsRequest:
      type: object
      properties:
        snapshot_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the snapshot from which to execute the operation.
          example: snapshot-123
        engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the Engine onto which to provision. If the source
            ID unambiguously identifies a source object, this parameter is unnecessary
            and ignored.
          example: engine-123
        source_data_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the source object (dSource or VDB) to provision from.
            If this property is not set, the data_source of the snapshot_id will be
            used.
          example: source-123
    ProvisionVDBBySnapshotParameters:
      allOf:
      - $ref: '#/components/schemas/BaseProvisionVDBParameters'
      - $ref: '#/components/schemas/DataPointBySnapshotParameters'
      - type: object
        properties:
          engine_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the Engine onto which to provision. If the source
              ID unambiguously identifies a source object, this parameter is unnecessary
              and ignored.
            example: engine-123
          source_data_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the source object (dSource or VDB) to provision
              from. All other objects referenced by the parameters must live on the
              same engine as the source. If this property is not set, the data_source
              of the snapshot_id will be used.
            example: source-123
          make_current_account_owner:
            type: boolean
            description: Whether the account provisioning this VDB must be configured
              as owner of the VDB.
            default: true
    ProvisionVDBByTimestampDefaultsRequest:
      required:
      - source_data_id
      type: object
      properties:
        timestamp:
          type: string
          description: The point in time from which to execute the operation. Mutually
            exclusive with timestamp_in_database_timezone. If the timestamp is not
            set, selects the latest point.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        timestamp_in_database_timezone:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{0,3})?'
          type: string
          description: The point in time from which to execute the operation, expressed
            as a date-time in the timezone of the source database. Mutually exclusive
            with timestamp.
          example: 2021-08-14T14:55:20.507Z
        engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the Engine onto which to provision. If the source
            ID unambiguously identifies a source object, this parameter is unnecessary
            and ignored.
          example: engine-123
        source_data_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the source object (dSource or VDB) to provision from.
            All other objects referenced by the parameters must live on the same engine
            as the source.
          example: source-123
        timeflow_id:
          type: string
          description: The Timeflow ID.
          example: timeflow-123
    ProvisionVDBByTimestampParameters:
      allOf:
      - $ref: '#/components/schemas/BaseProvisionVDBParameters'
      - $ref: '#/components/schemas/DataPointByTimestampParameters'
      - required:
        - source_data_id
        type: object
        properties:
          engine_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the Engine onto which to provision. If the source
              ID unambiguously identifies a source object, this parameter is unnecessary
              and ignored.
            example: engine-123
          source_data_id:
            maxLength: 256
            minLength: 1
            type: string
            description: The ID of the source object (dSource or VDB) to provision
              from. All other objects referenced by the parameters must live on the
              same engine as the source.
            example: source-123
          make_current_account_owner:
            type: boolean
            description: Whether the account provisioning this VDB must be configured
              as owner of the VDB.
            default: true
    ProvisionVDBFromBookmarkDefaultsRequest:
      required:
      - bookmark_id
      type: object
      properties:
        bookmark_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the bookmark from which to execute the operation.
            The bookmark must contain only one VDB.
    ProvisionVDBFromBookmarkParameters:
      allOf:
      - $ref: '#/components/schemas/BaseProvisionVDBParameters'
      - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
      - type: object
        properties:
          make_current_account_owner:
            type: boolean
            description: Whether the account provisioning this VDB must be configured
              as owner of the VDB.
            default: true
    ProvisionVDBGroupFromBookmarkParameters:
      required:
      - bookmark_id
      - name
      - provision_parameters
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: Name of the created VDB group name.
        bookmark_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of a bookmark to provision this VDB Group from.
        provision_parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BaseProvisionVDBParameters'
          description: Provision parameters for each of the VDBs which will need to
            be provisioned. The key must be the vdb_id of the corresponding entry
            from the bookmark, and the value the provision parameters for the VDB
            which will be cloned from the bookmark.
          example:
            vdb_id1:
              auto_select_repository: true
            vdb_id2:
              auto_select_repository: true
        tags:
          maxItems: 1000
          minItems: 1
          type: array
          description: The tags to be created for VDB Group.
          items:
            $ref: '#/components/schemas/Tag'
        make_current_account_owner:
          type: boolean
          description: Whether the account provisioning this VDB group must be configured
            as owner of the VDB group.
          default: true
    ProvisionVDBResponse:
      properties:
        job:
          $ref: '#/components/schemas/Job'
        vdb_id:
          type: string
          description: The ID of the provisioned vdb.
    ProxyConfiguration:
      required:
      - enabled
      - host
      - port
      type: object
      properties:
        host:
          type: string
          description: The host name or IP address of the proxy server.
          example: proxy.server.com
        port:
          type: integer
          description: The port number of the proxy server.
          example: 3128
        username:
          type: string
          description: The username to use when authenticating with the proxy server.
          example: proxy-user
        password:
          type: string
          description: The password to use when authenticating with the proxy server.
          example: proxy-password
          x-dct-toolkit-credential-field: true
        enabled:
          type: boolean
          description: When set, these settings are enabled. True by default.
          example: true
        truststore_filename:
          maxLength: 1024
          pattern: ^$|^[a-zA-Z0-9_\.\-]+$
          type: string
          description: File name of a truststore which can be used to validate the
            TLS certificate of the proxy server. The truststore must be available
            at /etc/config/certs/<truststore_filename>
        truststore_password:
          maxLength: 1024
          type: string
          description: Password for reading trustStore file provided in 'truststore_filename'
            property
          x-dct-toolkit-credential-field: true
      description: Web proxy configuration that is used to communicate with Delphix
        Corp. for support, troubleshooting, upgrades, updates, and patches.
    RefreshVDBByLocationParameters:
      type: object
      properties:
        location:
          maxLength: 256
          minLength: 1
          type: string
          description: The database specific identifier for tracking transactions
            (SCN, LSN, etc).
          example: '1234567'
        dataset_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the dataset to refresh to, mutually exclusive with timeflow_id.
          example: 123-CONTAINER_1
        timeflow_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the timeflow to refresh to, mutually exclusive with dataset_id.
          example: timeflow_123
      description: Parameters to refresh by a database-specific identifier (SCN, LSN,
        etc).
    RefreshVDBBySnapshotParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointBySnapshotParameters'
    RefreshVDBByTimestampParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointByTimestampParameters'
      - type: object
        properties:
          dataset_id:
            maxLength: 256
            minLength: 1
            type: string
            description: ID of the dataset to refresh to, mutually exclusive with
              timeflow_id.
            example: 123-CONTAINER_1
          timeflow_id:
            maxLength: 256
            minLength: 1
            type: string
            description: ID of the timeflow to refresh to, mutually exclusive with
              dataset_id.
            example: timeflow_123
    RefreshVDBFromBookmarkParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
    RefreshVDBGroupBySnapshotParameters:
      type: object
      properties:
        vdb_snapshot_mappings:
          maxItems: 256
          minItems: 1
          type: array
          description: List of the pair of VDB and snapshot to refresh from. If this
            is not set, all VDBs will be refreshed from latest snapshot of their parent.
          items:
            $ref: '#/components/schemas/VDBGroupRefreshBySnapshot'
      description: Parameters to refresh a VDB Group by snapshot.
    RefreshVDBGroupByTimestampParameters:
      type: object
      properties:
        vdb_timestamp_mappings:
          maxItems: 256
          minItems: 1
          type: array
          description: List of the pair of VDB and timestamp to refresh from. If this
            is not set, all VDBs will be refreshed from latest timestamp of their
            parent.
          items:
            $ref: '#/components/schemas/VDBGroupRefreshByTimestamp'
      description: Parameters to refresh a VDB Group by timestamp.
    RefreshVDBGroupParameters:
      required:
      - bookmark_id
      type: object
      properties:
        bookmark_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of a bookmark to refresh this VDB Group to.
      description: Parameters to refresh a VDB Group.
    RegisteredEngine:
      title: RegisteredEngine
      type: object
      properties:
        id:
          type: string
          description: The Engine object entity ID.
          readOnly: true
        uuid:
          type: string
          description: The unique identifier generated by this engine.
          nullable: true
        type:
          type: string
          description: The type of this engine.
          nullable: true
          enum:
          - VIRTUALIZATION
          - MASKING
          - BOTH
          - UNSET
        version:
          type: string
          description: The engine version.
          nullable: true
        name:
          type: string
          description: The name of this engine.
        ssh_public_key:
          type: string
          description: The ssh public key of this engine.
        hostname:
          type: string
          description: The hostname of this engine.
        cpu_core_count:
          type: integer
          description: The total number of CPU cores on this engine.
          format: int32
          nullable: true
        memory_size:
          type: integer
          description: The total amount of memory on this engine, in bytes.
          format: int64
          nullable: true
        data_storage_capacity:
          type: integer
          description: The total amount of storage allocated for engine objects and
            system metadata, in bytes.
          format: int64
          nullable: true
        data_storage_used:
          type: integer
          description: The amount of storage used by engine objects and system metadata,
            in bytes.
          format: int64
          nullable: true
        insecure_ssl:
          type: boolean
          description: |
            Allow connections to the engine over HTTPs without validating the TLS certificate. Even though
            the connection to the engine might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the engine's certificate,
            and set the truststore_filename property.
        unsafe_ssl_hostname_check:
          type: boolean
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs.
            Setting this value must only be done if the TLS certificate of the engine does not match the hostname,
            and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
        truststore_filename:
          maxLength: 1024
          minLength: 1
          pattern: ^[a-zA-Z0-9_\.]+$
          type: string
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          nullable: true
        truststore_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Password to read the truststore.
          nullable: true
          x-dct-toolkit-credential-field: true
        status:
          type: string
          description: |
            the status of the engine
          nullable: true
          readOnly: true
          enum:
          - CREATED
          - DELETING
        connection_status:
          type: string
          description: The status of the connection to the engine. Deprecated; use
            "engine_connection_status" instead.
          nullable: true
          readOnly: true
          deprecated: true
          enum:
          - ONLINE
          - OFFLINE
        engine_connection_status:
          type: string
          description: The state of the connection to the engine.
          readOnly: true
          enum:
          - ONLINE
          - CONNECTION_ERROR
          - MISSING_CREDENTIALS
          - BAD_CREDENTIALS
        connection_status_details:
          type: string
          description: If set, details about the status of the connection to the engine.
            Deprecated; use "engine_connection_status_details" instead.
          nullable: true
          readOnly: true
          deprecated: true
        engine_connection_status_details:
          type: string
          description: If set, details about the state of the connection to the engine.
          readOnly: true
        username:
          maxLength: 256
          minLength: 1
          type: string
          description: The virtualization domain admin username.
          nullable: true
        password:
          maxLength: 4096
          minLength: 1
          type: string
          description: The virtualization domain admin password.
          nullable: true
          x-dct-toolkit-credential-field: true
        masking_username:
          maxLength: 256
          minLength: 1
          type: string
          description: The masking admin username.
          nullable: true
        masking_password:
          maxLength: 4096
          minLength: 1
          type: string
          description: The masking admin password.
          nullable: true
          x-dct-toolkit-credential-field: true
        hashicorp_vault_username_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: Arguments to pass to the Vault CLI tool to retrieve the virtualization
            username for the engine.
          nullable: true
          example:
          - - kv
            - get
            - -field=username
            - kv-v2/delphix-secrets/delphixUser
          items:
            maxLength: 4096
            minLength: 1
            type: string
        hashicorp_vault_masking_username_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: Arguments to pass to the Vault CLI tool to retrieve the masking
            username for the engine.
          nullable: true
          example:
          - - kv
            - get
            - -field=username
            - kv-v2/delphix-secrets/delphixUser
          items:
            maxLength: 4096
            minLength: 1
            type: string
        hashicorp_vault_password_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: Arguments to pass to the Vault CLI tool to retrieve the virtualization
            password for the engine.
          nullable: true
          example:
          - - kv
            - get
            - -field=password
            - kv-v2/delphix-secrets/delphixUser
          items:
            maxLength: 4096
            minLength: 1
            type: string
        hashicorp_vault_masking_password_command_args:
          maxItems: 100
          minItems: 1
          type: array
          description: Arguments to pass to the Vault CLI tool to retrieve the masking
            password for the engine.
          nullable: true
          example:
          - - kv
            - get
            - -field=password
            - kv-v2/delphix-secrets/delphixUser
          items:
            maxLength: 4096
            minLength: 1
            type: string
        masking_hashicorp_vault_id:
          type: integer
          description: Reference to the Hashicorp vault to use to retrieve masking
            engine credentials.
          format: int64
          nullable: true
        hashicorp_vault_id:
          type: integer
          description: Reference to the Hashicorp vault to use to retrieve virtualization
            engine credentials.
          format: int64
          nullable: true
        tags:
          type: array
          description: The tags to be created for this engine.
          items:
            $ref: '#/components/schemas/Tag'
        masking_memory_used:
          type: integer
          description: The current amount of memory used by running masking jobs in
            bytes.
          format: int64
          nullable: true
        masking_allocated_memory:
          type: integer
          description: The maximum amount of memory available for running masking
            jobs in bytes.
          format: int64
          nullable: true
        masking_jobs_running:
          type: integer
          description: The number of masking jobs currently running.
          nullable: true
        masking_max_concurrent_jobs:
          type: integer
          description: The maximum number of masking jobs that can be running at the
            same time.
          nullable: true
        masking_available_cores:
          type: integer
          description: The number of CPU cores available to the masking engine.
          nullable: true
        hyperscale_instance_ids:
          type: array
          description: List of Hyperscale Instances that this engine is connected
            to.
          nullable: true
          items:
            type: string
        hyperscale_truststore_filename:
          maxLength: 1024
          minLength: 1
          pattern: ^[a-zA-Z0-9_\.]+$
          type: string
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine as expected by associated hyperscale instances.
          nullable: true
        hyperscale_truststore_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: |
            Password to read the truststore as expected by associated hyperscale instances.
          nullable: true
          x-dct-toolkit-credential-field: true
      description: A registered engine's connection and authentication settings.
      example:
        id: engine-123
        uuid: 54290b71-58cd-463d-bd62-7219d4c4d2d5
        type: VIRTUALIZATION
        version: 6.0.7.0
        name: My Favorite Engine
        hostname: eng09.dev.delphix.com
        cpu_core_count: 4
        memory_size: 16000000000
        data_storage_capacity: 100000000000
        data_storage_used: 85000000000
        tags:
        - key: key1
          value: value1
        - key: key2
          value: value2
        connection_status: OFFLINE
        connection_status_details: Unable to authenticate with engine
        hyperscale_instance_ids:
        - hyperscale-1
        hyperscale_truststore_filename: trustfile1
        hyperscale_truststore_password: '*****'
    RemoveMaskingJobParameters:
      required:
      - engine_id
      type: object
      properties:
        engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the engine to remove the masking job from.
          example: '1'
      description: Parameters to remove a masking job from a masking job set.
    Replica:
      properties:
        replica_id:
          type: string
          description: The ID of the replicated object.
          example: replica-1
        replica_engine_id:
          type: string
          description: The ID of the replicated object's engine.
          example: '1'
        replica_engine_name:
          type: string
          description: The name of the replicated object's engine.
          example: replica-e1
        replica_namespace_id:
          type: string
          description: The namespace id of the replicated object.
          example: namespace-1
    ReplicationProfile:
      type: object
      properties:
        id:
          type: string
          description: The ReplicationProfile ID.
        name:
          type: string
          description: The ReplicationProfile name.
        replication_mode:
          type: string
          description: The ReplicationProfile mode.
          enum:
          - ENGINE_DATA_REPLICATION
          - MASKED_DATA_DISTRIBUTION
          - CONTINUOUS_VAULT
        engine_id:
          type: string
          description: The ID of the engine that the ReplicationProfile belongs to.
        target_engine_id:
          type: string
          description: The ID of the replication target engine.
        target_host:
          type: string
          description: Hostname of the replication target engine.
        target_port:
          maximum: 65535
          minimum: 0
          type: integer
          description: Target TCP port number for the Delphix Session Protocol.
          default: 8415
        type:
          type: string
          description: The ReplicationProfile type.
          deprecated: true
        description:
          maxLength: 4096
          type: string
          description: The ReplicationProfile description.
        last_execution_status:
          type: string
          description: The status of the last execution of the ReplicationProfile.
          readOnly: true
          enum:
          - RUNNING
          - COMPLETED
          - SUSPENDED
          - CANCELED
          - FAILED
        last_execution_status_timestamp:
          type: string
          description: The timestamp of the last execution status.
          format: date-time
          readOnly: true
        schedule:
          maxLength: 256
          minLength: 1
          type: string
          description: Replication schedule in the form of a quartz-formatted string.
        replication_tag:
          type: string
          description: Globally unique identifier for this ReplicationProfile.
        replication_objects:
          type: array
          description: The objects that are replicated by this ReplicationProfile.
          deprecated: true
          items:
            type: string
        tags:
          type: array
          description: The tags that are applied to this ReplicationProfile.
          items:
            $ref: '#/components/schemas/Tag'
        enable_tag_replication:
          type: boolean
          description: Indicates whether tag replication from primary object to replica
            object is enabled or disabled for this ReplicationProfile.
        bandwidth_limit:
          minimum: 0
          type: integer
          description: Bandwidth limit (MB/s) for replication network traffic. A value
            of 0 means no limit.
          default: 0
        number_of_connections:
          maximum: 16
          minimum: 1
          type: integer
          description: Total number of transport connections to use.
          default: 1
        encrypted:
          type: boolean
          description: Encrypt replication network traffic.
          default: false
        automatic_replication:
          type: boolean
          description: Indication whether the replication spec schedule is enabled
            or not.
          default: false
        use_system_socks_setting:
          type: boolean
          description: Connect to the replication target host via the system-wide
            SOCKS proxy.
          default: false
        vdb_ids:
          type: array
          description: The VDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        dsource_ids:
          type: array
          description: The dSources that are replicated by this ReplicationProfile.
          items:
            type: string
        cdb_ids:
          type: array
          description: The CDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        vcdb_ids:
          type: array
          description: The vCDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        group_ids:
          type: array
          description: The groups that are replicated by this ReplicationProfile.
          items:
            type: string
        replicate_entire_engine:
          type: boolean
          description: Whether to replicate the entire engine. This is mutually exclusive
            with the vdb_ids, dsource_ids, cdb_ids, vcdb_ids, and group_ids properties.
        data_layout_ids:
          type: array
          description: The data-layouts that are replicated by this ReplicationProfile.
          readOnly: true
          items:
            type: string
      description: A set of rules that define what data is replicated from a source
        to a target.
    ReportingSchedule:
      required:
      - cron_expression
      - enabled
      - file_format
      - message
      - recipients
      - report_type
      properties:
        report_id:
          type: integer
          readOnly: true
          example: 123
        report_type:
          type: string
          example: VIRTUALIZATION_STORAGE_SUMMARY
          enum:
          - VIRTUALIZATION_STORAGE_SUMMARY
          - ENGINE_PERFORMANCE_ANALYTIC
          - VDB_INVENTORY_DATA
          - DSOURCE_USAGE_DATA
          - DSOURCE_CONSUMPTION_DATA
          - MASKING_EXECUTION_METRICS
          - AUDIT_LOGS_SUMMARY
          - STORAGE_SAVINGS_SUMMARY
          - DATA_RISK_SUMMARY
        cron_expression:
          type: string
          description: Standard cron expressions are supported e.g. 0 15 10 L * ?  -
            Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri
            - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday.
            For more details kindly refer- "http://www.quartz-scheduler.org/documentation/"
          example: 0 0 2 ? * Mon-Fri
        time_zone:
          type: string
          description: Timezones are specified according to the Olson tzinfo database
            - "https://en.wikipedia.org/wiki/List_of_tz_database_time_zones".
          example: America/Los_Angeles
        message:
          type: string
          example: sample message
        file_format:
          type: string
          example: CSV
          enum:
          - CSV
        enabled:
          type: boolean
          example: true
          default: true
        recipients:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
            format: email
            example: user@example.com
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        sort_column:
          type: string
          example: engine_name
          enum:
          - engine_id
          - engine_name
          - engine_hostname
          - total_capacity
          - free_storage
          - used_storage
          - used_percentage
          - dsource_count
          - vdb_count
          - total_object_count
          - name
          - unvirtualized_space
          - actual_space
          - dependant_vdbs
          - type
          - version
          - parent_id
          - parent_name
          - creation_date
          - parent_timeflow_location
          - parent_timeflow_timestamp
          - parent_timeflow_timezone
          - enabled
          - status
          - connector_id
          - connector_name
          - connector_type
          - last_profiled_date
          - last_masked_date
          - is_profiled
          - is_sensitive_data
          - is_masked
          - is_at_risk
          - data_elements_total
          - data_elements_not_sensitive
          - data_elements_sensitive_masked
          - data_elements_sensitive_unmasked
          - records_total
          - records_not_sensitive
          - records_sensitive_masked
          - records_sensitive_unmasked
          - -engine_id
          - -engine_name
          - -engine_hostname
          - -total_capacity
          - -free_storage
          - -used_storage
          - -used_percentage
          - -dsource_count
          - -vdb_count
          - -total_object_count
          - -unvirtualized_space
          - -actual_space
          - -dependant_vdbs
          - -name
          - -type
          - -version
          - -parent_id
          - -parent_name
          - -creation_date
          - -parent_timeflow_location
          - -parent_timeflow_timestamp
          - -parent_timeflow_timezone
          - -enabled
          - -status
          - -connector_id
          - -connector_name
          - -connector_type
          - -last_profiled_date
          - -last_masked_date
          - -is_profiled
          - -is_sensitive_data
          - -is_masked
          - -is_at_risk
          - -data_elements_total
          - -data_elements_not_sensitive
          - -data_elements_sensitive_masked
          - -data_elements_sensitive_unmasked
          - -records_total
          - -records_not_sensitive
          - -records_sensitive_masked
          - -records_sensitive_unmasked
        row_count:
          minimum: 1
          type: integer
          example: 1
    ReportingScheduleCreateParameters:
      required:
      - cron_expression
      - enabled
      - file_format
      - message
      - recipients
      - report_type
      type: object
      properties:
        report_type:
          type: string
          example: VIRTUALIZATION_STORAGE_SUMMARY
          enum:
          - VIRTUALIZATION_STORAGE_SUMMARY
          - ENGINE_PERFORMANCE_ANALYTIC
          - VDB_INVENTORY_DATA
          - DSOURCE_USAGE_DATA
          - DSOURCE_CONSUMPTION_DATA
          - MASKING_EXECUTION_METRICS
          - AUDIT_LOGS_SUMMARY
          - STORAGE_SAVINGS_SUMMARY
          - DATA_RISK_SUMMARY
        cron_expression:
          type: string
          description: Standard cron expressions are supported e.g. 0 15 10 L * ?  -
            Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri
            - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday.
            For more details kindly refer- "http://www.quartz-scheduler.org/documentation/"
          example: 0 0 2 ? * Mon-Fri
        time_zone:
          type: string
          description: Timezones are specified according to the Olson tzinfo database
            - "https://en.wikipedia.org/wiki/List_of_tz_database_time_zones".
          example: America/Los_Angeles
        message:
          type: string
          example: sample message
        file_format:
          type: string
          example: CSV
          enum:
          - CSV
        enabled:
          type: boolean
          example: true
          default: true
        recipients:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
            format: email
            example: user@example.com
        sort_column:
          type: string
          example: engine_name
          enum:
          - engine_id
          - engine_name
          - engine_hostname
          - total_capacity
          - free_storage
          - used_storage
          - used_percentage
          - dsource_count
          - vdb_count
          - total_object_count
          - name
          - unvirtualized_space
          - actual_space
          - dependant_vdbs
          - type
          - version
          - parent_id
          - parent_name
          - creation_date
          - parent_timeflow_location
          - parent_timeflow_timestamp
          - parent_timeflow_timezone
          - enabled
          - status
          - connector_id
          - connector_name
          - connector_type
          - last_profiled_date
          - last_masked_date
          - is_profiled
          - is_sensitive_data
          - is_masked
          - is_at_risk
          - data_elements_total
          - data_elements_not_sensitive
          - data_elements_sensitive_masked
          - data_elements_sensitive_unmasked
          - records_total
          - records_not_sensitive
          - records_sensitive_masked
          - records_sensitive_unmasked
          - -engine_id
          - -engine_name
          - -engine_hostname
          - -total_capacity
          - -free_storage
          - -used_storage
          - -used_percentage
          - -dsource_count
          - -vdb_count
          - -total_object_count
          - -unvirtualized_space
          - -actual_space
          - -dependant_vdbs
          - -name
          - -type
          - -version
          - -parent_id
          - -parent_name
          - -creation_date
          - -parent_timeflow_location
          - -parent_timeflow_timestamp
          - -parent_timeflow_timezone
          - -enabled
          - -status
          - -connector_id
          - -connector_name
          - -connector_type
          - -last_profiled_date
          - -last_masked_date
          - -is_profiled
          - -is_sensitive_data
          - -is_masked
          - -is_at_risk
          - -data_elements_total
          - -data_elements_not_sensitive
          - -data_elements_sensitive_masked
          - -data_elements_sensitive_unmasked
          - -records_total
          - -records_not_sensitive
          - -records_sensitive_masked
          - -records_sensitive_unmasked
        row_count:
          minimum: 1
          type: integer
          example: 1
        make_current_account_owner:
          type: boolean
          description: Whether the account creating this reporting schedule must be
            configured as owner of the reporting schedule.
          default: true
    Repository:
      properties:
        id:
          type: string
          description: Entity id of the repository.
        name:
          type: string
          description: Name of the repository.
        database_type:
          type: string
          description: The database type of this repository.
        allow_provisioning:
          type: boolean
          description: Flag indicating whether the repository should be used for provisioning.
        is_staging:
          type: boolean
          description: Flag indicating whether this repository can be used by the
            Delphix Engine for internal processing.
        oracle_base:
          type: string
          description: The Oracle base where database binaries are located.
        version:
          type: string
          description: Version of the repository.
        bits:
          type: integer
          description: 32 or 64 bits.
        install_group:
          type: string
          description: Group name of the user that owns the install.
        install_user:
          type: string
          description: User name of the user that owns the install.
        rac:
          type: boolean
          description: Flag indicating whether the install supports Oracle RAC.
        ports:
          type: array
          description: The network ports for connecting to the database instance.
          items:
            type: integer
            format: int64
        port:
          type: integer
          description: The network port for connecting to the SQL Server instance.
          format: int64
        dump_history_file:
          type: string
          description: Fully qualified name of the dump history file.
        page_size:
          type: integer
          description: Database page size for the SAP ASE instance.
          format: int64
        owner:
          type: string
          description: Account the database server instance is running as.
        installation_path:
          type: string
          description: Directory path where the installation is located.
        fulltext_installed:
          type: boolean
          description: This property determines if the full-text search and semantic
            search is installed or not.
        internal_version:
          type: integer
          description: The internal version is tied to the data format of a database
            and is used to detect compatibility.
          format: int64
        mssql_cluster_instances_name:
          type: array
          description: MSSQL cluster instances name.
          items:
            type: string
        mssql_cluster_instances_version:
          type: array
          description: MSSQL cluster instances version.
          items:
            type: string
        installation_home:
          type: string
          description: Directory where the installation home is located.
        drive_letter:
          type: array
          description: MSSQL failover cluster drive letter.
          items:
            type: string
        discovered:
          type: boolean
          description: Flag indicating whether the repository was automatically discovered.
          readOnly: true
    ResetPasswordParameter:
      properties:
        new_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: New password that needs to be set for the Account. Set this
            to null for unsetting the current password. Not including this property
            also results in unsetting of the current password.
          x-dct-toolkit-credential-field: true
    Role:
      description: A role is a named collection of permissions on DCT objects.
      allOf:
      - $ref: '#/components/schemas/CreateRole'
      - type: object
        properties:
          id:
            type: string
            description: The Role ID.
          system_role:
            type: boolean
            description: System role are pre defined roles. System roles cannot be
              modified.
    RoleUpdateParameters:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The role name
        description:
          maxLength: 512
          minLength: 1
          type: string
          description: The role description
    RollbackVDBBySnapshotParameters:
      deprecated: true
      allOf:
      - $ref: '#/components/schemas/DataPointBySnapshotParameters'
    RollbackVDBByTimestampParameters:
      deprecated: true
      allOf:
      - $ref: '#/components/schemas/DataPointByTimestampParameters'
    RollbackVDBFromBookmarkParameters:
      deprecated: true
      allOf:
      - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
    RollbackVDBGroupParameters:
      required:
      - bookmark_id
      type: object
      properties:
        bookmark_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of a bookmark to rollback this VDB Group to.
      description: Parameters to rollback a VDB Group.
    RuleSet:
      type: object
      properties:
        id:
          type: string
          description: The rule set ID.
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          type: string
          description: The name of this rule set.
        type:
          $ref: '#/components/schemas/ConnectorTypeEnum'
        platform:
          type: string
          description: The rule set connector platform.
          nullable: true
          example: Oracle
        connector_id:
          type: string
          description: The ID of the connector this rule set uses.
          nullable: true
        connector_name:
          type: string
          description: The name of the connector this rule set uses.
          nullable: true
        engine_id:
          type: string
          description: The ID of the engine this rule set originated from.
          nullable: true
        engine_name:
          type: string
          description: The name of the engine this rule set originated from.
          nullable: true
        data_elements_total:
          type: integer
          description: The total number of data elements in this rule set.
          format: int64
          nullable: true
        data_elements_sensitive:
          type: integer
          description: The number of sensitive data elements in this rule set.
          format: int64
          nullable: true
        records_total:
          type: integer
          description: The total number of records in this rule set.
          format: int64
          nullable: true
        records_sensitive:
          type: integer
          description: The number of sensitive records in this rule set.
          format: int64
          nullable: true
        tags:
          type: array
          description: The tags of this rule set.
          items:
            $ref: '#/components/schemas/Tag'
      description: A masking rule set.
    SAMLConfigParams:
      title: SAMLConfigParams
      type: object
      properties:
        enabled:
          type: boolean
          description: When set, SAML settings are enabled. False by default.
          example: true
          default: false
        auto_create_users:
          type: boolean
          description: When set, the system will automatically create new Accounts
            for those who have logged in using SAML. This must be true if SAML user
            is not already registered in system. True by default.
          example: true
          default: true
        metadata:
          minLength: 1
          type: string
          description: IdP metadata for this service provider. This is a required
            property for successful SAML authentication.
        entity_id:
          maxLength: 4096
          minLength: 1
          type: string
          description: Unique identifier of this instance as a SAML/SSO service provider.
          example: https://dct.delphix.com
        response_skew:
          type: integer
          description: Maximum time difference allowed between a SAML response and
            the DCT's current time, in seconds. If not set, it defaults to 120 seconds.
          example: 120
          default: 120
        group_attr:
          maxLength: 4096
          minLength: 1
          type: string
          description: Group mapped attribute on SAML to create account tags in DCT.
          example: groups
          default: groups
        first_name_attr:
          maxLength: 4096
          minLength: 1
          type: string
          description: First name attribute mapped on SAML used for mapping on DCT
            account.
          example: firstName
          default: firstName
        last_name_attr:
          maxLength: 4096
          minLength: 1
          type: string
          description: Last name attribute mapped on SAML used for mapping on DCT
            account.
          example: lastName
          default: lastName
      description: Parameters to read or update SAML Config
    SAMLValidationResponse:
      type: object
      properties:
        enabled:
          type: boolean
          description: true if SAML is enabled, false otherwise.
          example: true
          default: false
      description: The response of SAML validation.
    SMTPConfigParams:
      title: SMTPConfigParameters
      type: object
      properties:
        enabled:
          type: boolean
          description: True if outbound email is enabled.
          example: false
          default: false
        server:
          maxLength: 1000
          minLength: 1
          type: string
          description: IP address or hostname of SMTP relay server.
          nullable: true
          example: smtp.host.com
        port:
          maximum: 65535
          minimum: 1
          type: integer
          description: Port number to use. A value of -1 indicates the default (25
            or 587 for TLS).
          nullable: true
          example: 25
        authentication_enabled:
          type: boolean
          description: True if username/password authentication should be used.
          example: false
          default: false
        tls_enabled:
          type: boolean
          description: True if TLS (transport layer security) should be used.
          example: false
          default: false
        username:
          maxLength: 256
          minLength: 1
          type: string
          description: If authentication is enabled, username to use when authenticating
            to the server.
          nullable: true
          example: username
        password:
          maxLength: 4096
          minLength: 1
          type: string
          description: If authentication is enabled, password to use when authenticating
            to the server.
          nullable: true
          example: password
          x-dct-toolkit-credential-field: true
        from_address:
          maxLength: 256
          minLength: 1
          type: string
          description: From address to use when sending mail. If unspecified, 'noreply@delphix.com'
            is used.
          format: email
          nullable: true
          example: sender@example.com
        send_timeout:
          maximum: 300
          minimum: 0
          type: integer
          description: Maximum timeout to wait, in seconds, when sending mail.
          nullable: true
      description: Parameters to read or update SMTP Config
    SMTPConfigValidate:
      title: SMTPValidationParams
      required:
      - to_address
      type: object
      properties:
        to_address:
          maxLength: 256
          minLength: 1
          type: string
      description: Parameters to validate SMTP Config
    SSHVerificationStrategy:
      required:
      - name
      properties:
        name:
          type: string
          description: The name of the verification strategy.
          enum:
          - RAW_KEY
          - FINGERPRINT
          - ACCEPT_ALWAYS
        key_type:
          type: string
          description: The type of SSH key.
          enum:
          - RSA
          - DSA
          - ECDSA
          - ED25519
        raw_key:
          minLength: 1
          type: string
          description: Base64-encoded ssh key of the host for RAW_KEY verification.
        fingerprint_type:
          type: string
          description: Hash function for the fingerprint for FINGERPRINT verification.
          enum:
          - SHA256
          - SHA512
        fingerprint:
          minLength: 1
          type: string
          description: Base-64 encoded fingerprint of the ssh key of the host for
            FINGERPRINT verification.
      description: Mechanism to use for ssh host verification.
    ScopeTag:
      required:
      - key
      - value
      type: object
      properties:
        key:
          maxLength: 4000
          minLength: 1
          type: string
          description: Key of the tag
          example: key-1
        value:
          maxLength: 4000
          minLength: 1
          type: string
          description: Value of the tag
          example: value-1
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    ScopeTagsRequest:
      required:
      - tags
      type: object
      properties:
        tags:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: Array of tags with key value pairs along with optional object_type
            and permissions
          items:
            $ref: '#/components/schemas/ScopeTag'
    ScopeTagsResponse:
      type: object
      properties:
        tags:
          type: array
          description: Array of tags with key value pairs along with optional object_type
            and permissions
          items:
            $ref: '#/components/schemas/ScopeTag'
    ScopedObjectItem:
      required:
      - object_id
      - object_type
      type: object
      properties:
        object_id:
          maxLength: 4000
          minLength: 1
          type: string
          description: ID of the object
          example: 1-VDB-OBJECT-ID
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    ScopedObjectItemsResponse:
      type: object
      properties:
        objects:
          type: array
          description: Array of access group scope objects with object id and object
            type
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
    ScopedObjectsRequest:
      required:
      - objects
      type: object
      properties:
        objects:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: An array of scoped objects
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
    SearchBody:
      type: object
      properties:
        filter_expression:
          maxLength: 2000
          minLength: 5
          type: string
          example: string_field CONTAINS "over" AND numberic_field GT 9000 OR string_field2
            EQ "Goku"
      description: Search body.
    Snapshot:
      type: object
      properties:
        id:
          type: string
          description: The Snapshot ID.
          example: snapshot-123
        engine_id:
          type: string
          description: The id of the engine the snapshot belongs to.
          example: '1'
        namespace:
          type: string
          description: Alternate namespace for this object, for replicated and restored
            snapshots.
          nullable: true
          example: NAMESPACE-1
        name:
          type: string
          description: The snapshot's name.
          example: '@2023-02-02T14:30:00.589'
        namespace_id:
          type: string
          description: The namespace id of this snapshot.
          example: 1-NAMESPACE-1
        namespace_name:
          type: string
          description: The namespace name of this snapshot.
          example: test-engine-1
        is_replica:
          type: boolean
          description: Is this a replicated object.
          example: true
        consistency:
          type: string
          description: Indicates what type of recovery strategies must be invoked
            when provisioning from this snapshot.
          example: CONSISTENT
          enum:
          - CONSISTENT
          - INCONSISTENT
          - CRASH_CONSISTENT
          - PLUGGABLE
        missing_non_logged_data:
          type: boolean
          description: Indicates if a virtual database provisioned from this snapshot
            will be missing nologging changes.
          example: false
        dataset_id:
          type: string
          description: The ID of the Snapshot's dSource or VDB.
          example: dataset-123
        creation_time:
          type: string
          description: The time when the snapshot was created.
          format: date-time
          example: 2023-02-02T19:30:00.589Z
        start_timestamp:
          type: string
          description: |
            The timestamp within the parent TimeFlow at which this snapshot was initiated. \
            No recovery earlier than this point needs to be applied in order to provision a database from \
            this snapshot. If start_timestamp equals timestamp, then no recovery needs to be \
            applied in order to provision a database.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        start_location:
          type: string
          description: |
            The database specific indentifier within the parent TimeFlow at which this snapshot was initiated. \
            No recovery earlier than this point needs to be applied in order to provision a database from \
            this snapshot. If start_location equals location, then no recovery needs to be \
            applied in order to provision a database.
          example: '1178883'
        timestamp:
          type: string
          description: The logical time of the data contained in this Snapshot.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        location:
          type: string
          description: Database specific identifier for the data contained in this
            Snapshot, such as the Log Sequence Number (LSN) for MSsql databases, System
            Change Number (SCN) for Oracle databases.
          example: '1178883'
        retention:
          type: integer
          description: Retention policy, in days. A value of -1 indicates the snapshot
            should be kept forever. Deprecated in favor of expiration and retain_forever.
          format: int64
          example: -1
          deprecated: true
        expiration:
          type: string
          description: The expiration date of this snapshot. If this is unset and
            retain_forever is false, and the snapshot is not included in a Bookmark,
            the snapshot is subject to the retention policy of its dataset.
          format: date
          example: 2021-07-04T00:00:00Z
        retain_forever:
          type: boolean
          description: Indicates that the snapshot is protected from retention, i.e
            it will be kept forever. If false, see expiration.
          example: false
        effective_expiration:
          type: string
          description: The effective expiration is that max of the snapshot expiration
            and the expiration of any Bookmark which includes this snapshot.
          format: date
          example: 2021-07-04T00:00:00Z
        effective_retain_forever:
          type: boolean
          description: True if retain_forever is set or a Bookmark retains this snapshot
            forever.
          example: false
        timeflow_id:
          type: string
          description: The TimeFlow this snapshot was taken on.
          example: 1-ORACLE_TIMEFLOW-1
        timezone:
          type: string
          description: Time zone of the source database at the time the snapshot was
            taken.
          example: America/New_York,EST-0500
        version:
          type: string
          description: Version of database source repository at the time the snapshot
            was taken.
          nullable: true
          example: 11.2.0.4.0
        temporary:
          type: boolean
          description: Indicates that this snapshot is in a transient state and should
            not be user visible.
          example: false
        appdata_toolkit:
          type: string
          description: The toolkit associated with this snapshot.
          example: APPDATA_TOOLKIT-1
        appdata_metadata:
          type: string
          description: The JSON payload conforming to the DraftV4 schema based on
            the type of application data being manipulated.
          example: '{}'
        ase_db_encryption_key:
          type: string
          description: Database encryption key present for this snapshot.
          example: keyname
        mssql_internal_version:
          type: integer
          description: Internal version of the source database at the time the snapshot
            was taken.
          format: int32
          example: 706
        mssql_backup_set_uuid:
          type: string
          description: UUID of the source database backup that was restored for this
            snapshot.
          example: 54290b71-58cd-463d-bd62-7219d4c4d2d5
        mssql_backup_software_type:
          type: string
          description: Backup software used to restore the source database backup
            for this snapshot
          example: NATIVE
          enum:
          - AZURE_NATIVE
          - NATIVE
          - LITESPEED
          - REDGATE
          - NETBACKUP
          - COMMVAULT
        mssql_backup_location_type:
          type: string
          description: Backup software used to restore the source database backup
            for this snapshot
          example: BACKUP_SERVER
          enum:
          - DISK
          - AZURE
          - BACKUP_SERVER
        mssql_empty_snapshot:
          type: boolean
          description: True if the staging push dSource snapshot is empty.
          example: true
        oracle_from_physical_standby_vdb:
          type: boolean
          description: True if this snapshot was taken of a standby database.
          example: false
        oracle_redo_log_size_in_bytes:
          type: integer
          description: Online redo log size in bytes when this snapshot was taken.
          format: int64
          example: 314572800
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: Virtualization Engine Snapshot of a dSource or VDB.
    SnapshotCompatibleRepositoryRequest:
      type: object
      properties:
        source_data_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the source object (dSource or VDB) to get the compatible
            repos. All other objects referenced by the parameters must live on the
            same engine as the source.
          example: source-123
        engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the Engine from where to get the compatible repos.
            If the source ID unambiguously identifies a source object, this parameter
            is unnecessary and ignored.
          example: engine-123
        snapshot_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the snapshot from which to execute the operation.
          example: snapshot-123
        environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID or name of the target environment.
          example: 1-UNIX_HOST_ENVIRONMENT-1
    SnapshotDayRange:
      type: object
      properties:
        count:
          type: integer
          description: Number of TimeFlow snapshots on that day.
          format: int64
          example: 1
        date:
          type: string
          description: Date for which TimeFlow snapshots have been aggregated.
          format: date
          example: 2019-09-20T00:00:00Z
        start_of_day:
          type: string
          description: Start of day of this range in the time zone used for computation.
          format: date-time
          example: 2019-09-20T07:00:00Z
        end_of_day:
          type: string
          description: End of day of this range in the time zone used for computation.
          format: date-time
          example: 2019-09-21T07:00:00Z
      description: Count of TimeFlow snapshots aggregated by day.
    SnapshotsDayRangesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotDayRange'
    Source:
      type: object
      properties:
        id:
          type: string
          description: The Source object entity ID.
        database_type:
          type: string
          description: The type of this source database.
          nullable: true
        name:
          type: string
          description: The name of this source database.
          nullable: true
        namespace_id:
          type: string
          description: The namespace id of this source database.
          nullable: true
        namespace_name:
          type: string
          description: The namespace name of this source database.
          nullable: true
        is_replica:
          type: boolean
          description: Is this a replicated object.
          nullable: true
        database_version:
          type: string
          description: The version of this source database.
          nullable: true
        environment_id:
          type: string
          description: A reference to the Environment that hosts this source database.
          nullable: true
        data_uuid:
          type: string
          description: A universal ID that uniquely identifies this source database.
          nullable: true
        ip_address:
          type: string
          description: The IP address of the source's host.
          nullable: true
        fqdn:
          type: string
          description: The FQDN of the source's host.
          nullable: true
        size:
          type: integer
          description: The total size of this source database, in bytes.
          format: int64
          nullable: true
        jdbc_connection_string:
          type: string
          description: The JDBC connection URL for this source database.
          nullable: true
          deprecated: true
        plugin_version:
          type: string
          description: The version of the plugin associated with this source database.
          nullable: true
        toolkit_id:
          type: string
          description: The ID of the toolkit associated with this source database(AppData
            only).
        is_dsource:
          type: boolean
        repository:
          type: string
          description: The repository id for this source
        recovery_model:
          type: string
          description: Recovery model of the source database (MSSql Only).
          nullable: true
          example: FULL
        mssql_source_type:
          type: string
          description: The type of this mssql source database (MSSql Only).
          nullable: true
          example: MSSqlSIConfig
        appdata_source_type:
          type: string
          description: The type of this appdata source database (Appdata Only).
          nullable: true
        is_pdb:
          type: boolean
          description: If this source is of PDB type (Oracle Only).
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        instance_name:
          type: string
          description: The instance name of this single instance database source.
        instance_number:
          type: integer
          description: The instance number of this single instance database source.
        instances:
          type: array
          items:
            $ref: '#/components/schemas/OracleRACDatabaseInstance'
        oracle_services:
          type: array
          items:
            $ref: '#/components/schemas/OracleService'
        user:
          type: string
          description: The username of the database user.
        non_sys_user:
          type: string
          description: The username of a database user that does not have administrative
            privileges.
        discovered:
          type: boolean
          description: Whether this source was discovered.
        linking_enabled:
          type: boolean
          description: Whether this source should be used for linking.
      description: The Delphix representation of the source database (not typically
        managed by Delphix).
      example:
        id: source-123
        database_type: Oracle
        name: production01
        database_version: 11.1.0.7.0
        environment_id: environment-123
        data_uuid: 1734315df891991101eb96963535afa0
        ip_address: 192.0.2.0
        fqdn: prod01.myhost.com
        size: 856981504
        jdbc_connection_string: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.43.47.94)(PORT=1521))(CONNECT_DATA=(UR=A)(SID=production01)))
        plugin_version: '1.0'
        repository: 1-REPOSITORY-1
        appdata_source_type: AppDataDirectSourceConfig
        is_pdb: false
        tags:
        - key: key1
          value: value1
        - key: key2
          value: value2
        oracle_services:
        - discovered: 'true'
          jdbc_connection_string: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.110.230.197)(PORT=1521))(CONNECT_DATA=(UR=A)(SERVICE_NAME=VDBOMSRBBDC6C_UJG)))
        - discovered: 'false'
          jdbc_connection_string: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.110.230.197)(PORT=1522))(CONNECT_DATA=(UR=A)(SERVICE_NAME=VDBOMSRBBDC6C_UJG)))
        instance_name: DBSID
        instance_number: 1
        user: ORACLE
        non_sys_user: TESTER
        discovered: true
        linking_enabled: true
    SourceOperation:
      required:
      - command
      - name
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
        command:
          maxLength: 131072
          minLength: 1
          type: string
        shell:
          type: string
          enum:
          - bash
          - shell
          - expect
          - ps
          - psd
          default: bash
        credentials_env_vars:
          type: array
          description: List of environment variables that will contain credentials
            for this operation.
          items:
            $ref: '#/components/schemas/CredentialsEnvVariable'
    StagingSource:
      type: object
      properties:
        id:
          type: string
          description: The Staging Source object entity ID.
        name:
          type: string
          description: The name of this staging source database.
          nullable: true
        database_type:
          type: string
          description: The type of this staging source database.
          nullable: true
        database_name:
          type: string
          description: The name of container database of associated with this staging
            source database.
          nullable: true
        database_version:
          type: string
          description: The version of container database associated with this staging
            source database.
          nullable: true
        environment_id:
          type: string
          description: A reference to the Environment that hosts this staging source
            database.
          nullable: true
        data_uuid:
          type: string
          description: A universal ID that uniquely identifies this staging source
            database.
          nullable: true
        ip_address:
          type: string
          description: The IP address of the staging source's host.
          nullable: true
        fqdn:
          type: string
          description: The FQDN of the staging source's host.
          nullable: true
        repository:
          type: string
          description: The repository id for this staging source.
        type:
          type: string
          description: The type of source configuration for this staging source.
        oracle_config_type:
          $ref: '#/components/schemas/OracleConfigTypeEnum'
        cdb_type:
          type: string
          description: The cdb type for this staging source. (Oracle only)
        dsource_id:
          type: string
          description: The dsource_id associated with this staging source.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        oracle_services:
          type: array
          items:
            $ref: '#/components/schemas/OracleService'
      description: The Delphix representation of the staging source database (not
        typically managed by Delphix).
      example:
        id: staging-source-123
        name: production01
        database_type: Oracle
        database_name: CDOM-EX1
        database_version: 11.1.0.7.0
        environment_id: environment-123
        data_uuid: 1734315df891991101eb96963535afa0
        ip_address: 192.0.2.0
        fqdn: prod01.myhost.com
        repository: 1-REPO-1
        type: OracleSIConfig
        oracle_config_type: OraclePDBConfig
        cdb_type: ROOT_CDB
        dsource_id: 1-CONTAINER-1
        tags:
        - key: key1
          value: value1
        - key: key2
          value: value2
        oracle_services:
        - discovered: 'true'
          jdbc_connection_string: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.110.230.197)(PORT=1521))(CONNECT_DATA=(UR=A)(SERVICE_NAME=VDBOMSRBBDC6C_UJG)))
        - discovered: 'false'
          jdbc_connection_string: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.110.230.197)(PORT=1522))(CONNECT_DATA=(UR=A)(SERVICE_NAME=VDBOMSRBBDC6C_UJG)))
    StartVCDBParameters:
      type: object
      properties:
        instances:
          type: array
          description: List of specific Virtual Container Database Instances to start.
          items:
            type: integer
      description: Parameters to start a vCDB.
    StartVDBGroupParameters:
      type: object
      properties:
        vdb_start_param_mappings:
          type: array
          items:
            $ref: '#/components/schemas/VDBStartParametersMapping'
      description: Parameters to start a VDB Group.
    StartVDBParameters:
      type: object
      properties:
        instances:
          type: array
          description: List of specific Oracle Virtual Database Instances to start.
          items:
            type: integer
      description: Parameters to start a VDB.
    StopVCDBParameters:
      type: object
      properties:
        instances:
          type: array
          description: List of specific Virtual Container Database Instances to stop.
          items:
            type: integer
        abort:
          type: boolean
          description: Whether to issue 'shutdown abort' to shutdown Virtual Container
            DB instances.
          default: false
      description: Parameters to stop a vCDB.
    StopVDBGroupParameters:
      type: object
      properties:
        vdb_stop_param_mappings:
          type: array
          items:
            $ref: '#/components/schemas/VDBStopParametersMapping'
      description: Parameters to stop a VDB Group.
    StopVDBParameters:
      type: object
      properties:
        instances:
          type: array
          description: List of specific Oracle Virtual Database Instances to stop.
          items:
            type: integer
        abort:
          type: boolean
          description: Whether to issue 'shutdown abort' to shutdown Oracle Virtual
            DB instances.
          default: false
      description: Parameters to stop a VDB.
    StorageSavingsReportSummarizedData:
      type: object
      properties:
        vdb_count:
          type: integer
          description: The total VDB count
        dsource_count:
          type: integer
          description: The total dSource count
        virtualized_space:
          type: integer
          description: Total Virtualized Space. This is the sum of storage size from
            dSources and their dependant VDBs.
          format: int64
        unvirtualized_space:
          type: integer
          description: Total disk space, in bytes, that it would take to store the
            filtered list of dSources and their descandant VDBs without Delphix, counting
            each of their timeflows as separate copy of the source data.
          format: int64
        current_timeflows_unvirtualized_space:
          type: integer
          description: Total disk space, in bytes, that it would take to store the
            filtered list of dSources and their descandant VDBs without Delphix, counting
            only their current (active) timeflows.
          format: int64
        estimated_savings:
          type: integer
          description: Total disk space that has been saved by using Delphix virtualization
            for all timeflows, in bytes.
          format: int64
          example: 109242677
        estimated_savings_perc:
          type: number
          description: Total disk space that has been saved by using Delphix virtualization
            for all timeflows, in percentage.
        estimated_current_timeflows_savings:
          type: integer
          description: Total disk space that has been saved by using Delphix virtualization
            for only the current (active) timeflows, in bytes.
          format: int64
        estimated_current_timeflows_savings_perc:
          type: number
          description: Total disk space that has been saved by using Delphix virtualization
            for only the current (active) timeflows, in percentage.
    StorageSavingsSummaryData:
      properties:
        dsource_id:
          type: string
          description: Id of the dSource.
        dependant_vdbs:
          type: integer
          description: The number of VDBs that are dependant on this dSource. This
            includes all VDB descendants that have this dSource as an ancestor.
          example: 200
        engine_name:
          minLength: 1
          type: string
          description: The engine name.
          example: My Favorite Engine
        unvirtualized_space:
          type: integer
          description: The disk space, in bytes, that it would take to store the dSource
            and its descendant VDBs without Delphix, counting each of their timeflows
            as separate copy of the parent source data.
          format: int64
          example: 109242677
        current_timeflows_unvirtualized_space:
          type: integer
          description: The disk space, in bytes, that it would take to store the dSource
            and its descendant VDBs without Delphix, counting only their current (active)
            timeflows.
          format: int64
          example: 109242677
        virtualized_space:
          type: integer
          description: The actual space used by the VDB, in bytes.
          format: int64
          example: 12345678
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the database on the target environment.
          example: my-test-database
        estimated_savings:
          type: integer
          description: The disk space that has been saved by using Delphix virtualizion
            for all descendant timeflows, in bytes.
          format: int64
          example: 109242677
        estimated_savings_perc:
          type: number
          description: The disk space that has been saved by using Delphix virtualizion
            for all descendant timeflows, in percentage.
        estimated_current_timeflows_savings:
          type: integer
          description: The disk space that has been saved by using Delphix virtualizion
            for only the current (active) timeflows, in bytes.
          format: int64
          example: 109242677
        estimated_current_timeflows_savings_perc:
          type: number
          description: The disk space that has been saved by using Delphix virtualizion
            for only the current (active) timeflows, in percentage.
    StorageSummaryHistoricalDataPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date
        free_storage:
          type: integer
          description: The amount of available storage, in bytes.
          format: int64
        used_storage:
          type: integer
          description: The amount of storage used by engine objects, in bytes.
          format: int64
        reserved_storage:
          type: integer
          description: The amount of reserved space, in bytes.
          format: int64
    StorageSummaryProjectedDataPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date
        used_storage:
          type: integer
          description: The projected amount of storage used by engine objects and
            reserved space, in bytes.
          format: int64
    SwitchTimeflowParameters:
      type: object
      properties:
        timeflow_id:
          type: string
          description: The ID of the timeflow to switch to.
          example: timeflow-123
      description: Parameters to switch the timeflow of a VDB.
    SyncEnginesHyperscaleParameters:
      required:
      - source_engine_id
      - target_engine_ids
      type: object
      properties:
        source_engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the engine to copy the data from.
          example: '1'
        target_engine_ids:
          minItems: 1
          type: array
          description: The IDs of the target engines to copy the data into.
          example:
          - '1'
          - '2'
          items:
            maxLength: 256
            minLength: 1
            type: string
      description: Parameters to sync the global object from a source engine to a
        list of target engines registered with a Hyperscale Instance.
    Tag:
      required:
      - key
      - value
      type: object
      properties:
        key:
          maxLength: 4000
          minLength: 1
          type: string
          description: Key of the tag
          example: key-1
        value:
          maxLength: 4000
          minLength: 1
          type: string
          description: Value of the tag
          example: value-1
    TagsRequest:
      required:
      - tags
      type: object
      properties:
        tags:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: Array of tags with key value pairs
          items:
            $ref: '#/components/schemas/Tag'
    TagsResponse:
      type: object
      properties:
        tags:
          type: array
          description: Array of tags with key value pairs
          items:
            $ref: '#/components/schemas/Tag'
    TargetJobType:
      type: string
      description: A DCT specific job type
      enum:
      - REPLICATION_PROFILE_EXECUTE
    TargetObjectType:
      type: string
      description: A DCT specific object type.
      enum:
      - REPLICATION_PROFILE
    TargetPolicyObjectType:
      type: string
      description: A DCT specific target policy object type.
      enum:
      - CDB
      - DSOURCE
      - VCDB
      - VDB
      - DATASET_GROUP
      - REPLICATION_PROFILE
      - NAMESPACE
    TaskEvent:
      type: object
      properties:
        event:
          type: string
          description: The steps or events a task will perform.
          example: Job Completed
        status:
          type: string
          description: The state of result of the task event.
          example: SUCCEEDED
          enum:
          - CANCELLED
          - FAILED
          - QUEUED
          - RUNNING
          - SUCCEEDED
          - SKIPPED
          - NON_CONFORMANT
      description: A step or event performed by a masking execution.
    Timeflow:
      type: object
      properties:
        id:
          type: string
          description: The Timeflow ID.
          example: timeflow-123
        engine_id:
          type: string
          description: The ID of the engine the timeflow belongs to.
          example: '1'
        namespace:
          type: string
          description: Alternate namespace for this object, for replicated and restored
            timeflows.
          nullable: true
          example: NAMESPACE-1
        namespace_id:
          type: string
          description: The namespace id of this timeflows.
          nullable: true
          example: 1-NAMESPACE-1
        namespace_name:
          type: string
          description: The namespace name of this timeflows.
          nullable: true
          example: test-engine-1
        is_replica:
          type: boolean
          description: Is this a replicated object.
          example: true
        name:
          type: string
          description: The timeflow's name.
          example: DB_PROVISION@2023-01-25T09:00:30
        dataset_id:
          type: string
          description: The ID of the timeflow's dSource or VDB.
          example: dataset-123
        creation_type:
          type: string
          description: The source action that created the timeflow.
          example: REFRESH
          enum:
          - INITIAL
          - INDETERMINATE
          - REFRESH
          - ROLLBACK
          - TEMPORARY
          - TRANSFORMATION
          - V2P
          - PDB_PLUG
          - ORACLE_LIVE_SOURCE_RESYNC
          - SOURCE_CONTINUITY
        parent_snapshot_id:
          type: string
          description: The ID of the timeflow's parent snapshot.
          example: snapshot-123
        parent_point_location:
          type: string
          description: The location on the parent timeflow from which this timeflow
            was provisioned. This will not be present for timeflows derived from linked
            sources.
          example: '1178883'
        parent_point_timestamp:
          type: string
          description: The timestamp on the parent timeflow from which this timeflow
            was provisioned. This will not be present for timeflows derived from linked
            sources.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        parent_point_timeflow_id:
          type: string
          description: A reference to the parent timeflow from which this timeflow
            was provisioned. This will not be present for timeflows derived from linked
            sources.
          example: timeflow-123
        parent_vdb_id:
          type: string
          description: The ID of the parent VDB. This is mutually exclusive with parent_dsource_id.
          example: dataset-123
        parent_dsource_id:
          type: string
          description: The ID of the parent dSource. This is mutually exclusive with
            parent_vdb_id.
          example: dataset-123
        source_vdb_id:
          type: string
          description: The ID of the source VDB. This is mutually exclusive with source_dsource_id.
          example: dataset-123
        source_dsource_id:
          type: string
          description: The ID of the source dSource. This is mutually exclusive with
            source_vdb_id.
          example: dataset-123
        source_data_timestamp:
          type: string
          description: The timestamp on the root ancestor timeflow from which this
            timeflow originated. This logical time acts as reference to the origin
            source data.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        oracle_incarnation_id:
          type: string
          description: Oracle-specific incarnation identifier for this timeflow.
          example: '123'
        oracle_cdb_timeflow_id:
          type: string
          description: A reference to the mirror CDB timeflow if this is a timeflow
            for a PDB.
          example: cdb-123
        oracle_tde_uuid:
          type: string
          description: The unique identifier for timeflow-specific TDE objects that
            reside outside of Delphix storage.
          example: tde-indentifier
        mssql_database_guid:
          type: string
          description: MSSQL-specific recovery branch identifier for this timeflow.
          example: DATABASE-1
        is_active:
          type: boolean
          description: Whether this timeflow is currently active or not.
          example: false
        creation_timestamp:
          type: string
          description: The time when the timeflow was created.
          format: date-time
          example: 2021-05-01T08:51:34Z
        activation_timestamp:
          type: string
          description: The time when this timeflow became active.
          format: date-time
          example: 2021-05-01T08:51:34Z
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: Virtualization Engine Timeflow of a dSource or VDB.
    TimeflowRange:
      type: object
      properties:
        start_point_location:
          type: string
          description: The starting location of this range.
          example: '1178883'
        start_point_timestamp:
          type: string
          description: The starting timestamp of this range.
          format: date-time
          example: 2023-04-01T08:51:34.148Z
        end_point_location:
          type: string
          description: The ending location of this range.
          example: '1178884'
        end_point_timestamp:
          type: string
          description: The ending timestamp of this range.
          format: date-time
          example: 2023-04-01T09:51:34.148Z
        timeflow_id:
          type: string
          description: A reference to the timeflow of this range.
          example: timeflow-123
        provisionable:
          type: boolean
          description: Whether or not this range is provisionable.
          example: true
      description: Represents a time range within a timeflow.
    TimestampCompatibleRepositoryRequest:
      type: object
      properties:
        source_data_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the source object (dSource or VDB) to get the compatible
            repos. All other objects referenced by the parameters must live on the
            same engine as the source.
          example: source-123
        engine_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the Engine from where to get the compatible repos.
            If the source ID unambiguously identifies a source object, this parameter
            is unnecessary and ignored.
          example: engine-123
        timestamp:
          type: string
          description: The point in time from which to execute the operation. If the
            timestamp is not set, selects the latest point.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        timeflow_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the timeflow from which compatible repos need to be fetched,
            mutually exclusive with source_data_id.
          example: timeflow_123
        environment_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID or name of the target environment.
          example: 1-UNIX_HOST_ENVIRONMENT-1
    TokenInfoRequest:
      required:
      - token
      properties:
        token:
          maxLength: 2048
          minLength: 1
          type: string
          description: API Key or JWT token for fetching information
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyIiwiaXNzIjoiYXBpZ3ctc2VydmljZXMtYXBwIiwiaWF0IjoxNjYwMDI1MTczLCJlbWFpbCI6ImppdGVuZHJhLm1hdGh1ckBkZWxwaGl4LmNvbSIsInVzZXJuYW1lIjoidXNlci00MjciLCJleHAiOjE2NjAxMTE1NzN9._9LgnIlkKUr2KVqjeFYqru3GxJr2-ztSmP0XO3vBkRo
          x-dct-toolkit-credential-field: true
    TokenInfoResponse:
      properties:
        active:
          type: boolean
          description: Flag to identify if the token is active.
        token_type:
          maxLength: 1024
          minLength: 1
          type: string
          description: Type of the token.
        account_id:
          type: integer
          description: Numeric ID of the account.
          format: int64
        first_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: First name for the Account.
        last_name:
          maxLength: 1024
          minLength: 1
          type: string
          description: Last name for the Account.
        email:
          maxLength: 1024
          minLength: 1
          type: string
          description: Email for the Account.
        username:
          maxLength: 1024
          minLength: 1
          type: string
          description: The username or logical name for the Account.
        ldap_principal:
          maxLength: 1024
          minLength: 1
          type: string
          description: The LDAP Principal for the Account.
        exp:
          type: integer
          description: Seconds duration after which the token will expire.
          format: int64
        last_activity_time:
          type: string
          description: Last activity time of this token in UTC timezone.
          format: date-time
    Toolkit:
      type: object
      properties:
        id:
          type: string
          description: Id of the toolkit.
        type:
          type: string
          description: Specifies whether this object is toolkit or plugin
        reference:
          type: string
          description: The object reference.
        engine_name:
          type: string
          description: Name of the engine.
        engine_id:
          type: string
          description: Id of the engine.
        virtual_source_definition:
          type: object
          additionalProperties: true
          description: Definition of how to provision virtual sources of this type
        linked_source_definition:
          type: object
          additionalProperties: true
          description: Definition of how to link sources of this type.
        discovery_definition:
          type: object
          additionalProperties: true
          description: Definition of how to discover sources of this type.
        upgrade_definition:
          type: object
          additionalProperties: true
          description: Definition of how to upgrade sources of this type.
        snapshot_parameters_definition:
          type: object
          additionalProperties: true
          description: The schema that defines the structure of the fields in AppDataSyncParameters.
        tags:
          type: array
          description: Tags associated to this toolkit.
          items:
            $ref: '#/components/schemas/Tag'
      description: A toolkit or plugin.
    UpdateAccessGroupScope:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The Access group scope name.
        scope_type:
          type: string
          description: Specifies the type of the scope. Scope of type SIMPLE would
            grant access to all DCT objects. Scope of type SCOPED would grant access
            to all objects based on objects and object-tags and permissions defined
            in linked role. Scope of type ADVANCED would grant access to DCT objects
            based on objects and object-tags and the individual permissions.
          example: SCOPED
          enum:
          - SIMPLE
          - SCOPED
          - ADVANCED
      description: An Access group scope parameters that are allowed to update.
    UpdateBookmarkParameters:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The user-defined name of this bookmark.
          example: my-bookmark-123
        expiration:
          type: string
          description: The expiration for this Bookmark. Mutually exclusive with retain_forever.
          format: date
          example: 2021-07-04T00:00:00Z
        retain_forever:
          type: boolean
          description: Indicates that the Bookmark should be retained forever.
          example: false
        bookmark_type:
          type: string
          description: Type of the bookmark, either PUBLIC or PRIVATE.
          enum:
          - PUBLIC
          - PRIVATE
      description: Parameters to update a Bookmark.
    UpdateCDBParameters:
      type: object
      properties:
        oracle_services:
          type: array
          description: List of jdbc connection strings which are used to connect with
            the database.
          example:
          - jdbc:oracle:thin:@hostname:port/service_name
          - jdbc:oracle:thin:@hostname:port:SID
          items:
            type: string
      description: Parameters to update a CDB.
    UpdateDatabaseTemplateParameters:
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The DatabaseTemplate name.
          example: template-name
        description:
          type: string
          description: User provided description for this template.
          example: Config params for prod01
        source_type:
          type: string
          description: The type of the source associated with the template.
          example: OracleVirtualSource
          enum:
          - OracleVirtualSource
          - OracleLinkedSource
          - MSSqlVirtualSource
          - MSSqlLinkedSource
        parameters:
          type: object
          additionalProperties:
            type: string
          description: A name/value map of string configuration parameters.
          example:
            configName1: configValue1
            configName2: configValue2
      description: Parameters to update a Database Template.
    UpdateMSSQLDsourceParameters:
      type: object
      properties:
        logsync_enabled:
          type: boolean
          description: Enabled LogSync for this dSource.
        encryption_key:
          type: string
          description: The encryption key to use when restoring encrypted backups.
          x-dct-toolkit-credential-field: true
        ppt_repository:
          maxLength: 1024
          minLength: 1
          type: string
          description: Reference of the SQL instance on the PPT environment that we
            want to use for pre-provisioning.
        ppt_host_user:
          maxLength: 1024
          minLength: 1
          type: string
          description: Reference of the host OS user on the PPT host to use for linking.
        sync_strategy_managed_type:
          type: string
          description: |
            MSSQL specific parameters for source based sync strategy.:
            * `external` - MSSQL specific parameters for externally managed source based sync strategy.
            * `delphix` - MSSQL specific parameters for delphix managed source based sync strategy.
            * `staging_push` - MSSQL specific parameters for staging push based sync strategy.
          enum:
          - external
          - delphix
          - staging_push
        source_host_user:
          maxLength: 1024
          minLength: 1
          type: string
          description: ID or user reference of the host OS user to use for linking.
        mssql_user_environment_reference:
          maxLength: 1024
          minLength: 1
          type: string
          description: Reference to the source environment user to use for linking.
        mssql_user_domain_username:
          maxLength: 1024
          minLength: 1
          type: string
          description: The username for the source DB user.
        mssql_user_domain_password:
          maxLength: 256
          minLength: 1
          type: string
          description: Password for the database user.
          x-dct-toolkit-credential-field: true
        mssql_user_domain_vault_username:
          maxLength: 256
          minLength: 1
          type: string
          description: Delphix display name for the vault user.
          example: my-vault
        mssql_user_domain_vault:
          maxLength: 256
          minLength: 1
          type: string
          description: The name or reference of the vault from which to read the database
            credentials.
        mssql_user_domain_hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
        mssql_user_domain_hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
          x-dct-toolkit-credential-field: true
        mssql_user_domain_hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Hashicorp vault key for the username in the key-value store.
        mssql_user_domain_hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Hashicorp vault key for the password in the key-value store.
          x-dct-toolkit-credential-field: true
        mssql_user_domain_azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name.
        mssql_user_domain_azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store.
        mssql_user_domain_azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store.
          x-dct-toolkit-credential-field: true
        mssql_user_domain_cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
        mssql_database_username:
          maxLength: 1024
          minLength: 1
          type: string
          description: The username for the source DB user.
        mssql_database_password:
          maxLength: 256
          minLength: 1
          type: string
          description: Password for the database user.
          x-dct-toolkit-credential-field: true
        delphix_managed_backup_compression_enabled:
          type: boolean
          description: Specify whether the backups taken should be compressed or uncompressed
            when Delphix managed option is selected.
        delphix_managed_backup_policy:
          type: string
          description: |
            Specify which node of an availability group to run the copy-only full backup on:
            * `primary` - Backups only go to the primary node.
            * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
            * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
          enum:
          - primary
          - secondary_only
          - prefer_secondary
        external_managed_validate_sync_mode:
          type: string
          description: Specifies the backup types ValidatedSync will use to synchronize
            the dSource with the source database
          enum:
          - TRANSACTION_LOG
          - FULL_OR_DIFFERENTIAL
          - FULL
          - NONE
        external_managed_shared_backup_locations:
          maxItems: 260
          type: array
          description: Shared source database backup locations.
          items:
            maxLength: 4096
            minLength: 1
            type: string
        disable_netbackup_config:
          type: boolean
          description: Disable NetBackup configuration.
        external_netbackup_config_master_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The master server name of this NetBackup configuration.
        external_netbackup_config_source_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The source's client server name of this NetBackup configuration.
        external_netbackup_config_params:
          type: object
          additionalProperties: true
          description: NetBackup configuration parameter overrides.
        external_netbackup_config_templates:
          type: string
          description: Optional config template selection for NetBackup configurations.
            If set, external_netbackup_config_params will be ignored.
        disable_commvault_config:
          type: boolean
          description: Disable Commvault configuration.
        external_commserve_host_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The commserve host name of this Commvault configuration.
        external_commvault_config_source_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The source client name of this Commvault configuration.
        external_commvault_config_staging_client_name:
          maxLength: 256
          minLength: 1
          type: string
          description: The staging client name of this Commvault configuration.
        external_commvault_config_params:
          type: object
          additionalProperties: true
          description: Commvault configuration parameter overrides.
        external_commvault_config_templates:
          type: string
          description: Optional config template selection for Commvault configurations.
            If set, configParams will be ignored.
        hooks:
          $ref: '#/components/schemas/DSourceHooks'
        sync_policy_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the SnapSync policy for the dSource.
          example: snapshot-123
        retention_policy_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the Retention policy for the dSource.
          example: retention-policy-123
      description: Parameters to update a MSSql dSource.
    UpdateMaskingJobParameters:
      type: object
      properties:
        name:
          maxLength: 1024
          minLength: 1
          type: string
          description: The name of the MaskingJob.
          example: My favorite MaskingJob
        connector_username:
          maxLength: 256
          minLength: 1
          type: string
          description: The username of the Connector used by the MaskingJob. (Standard
            Job only).
          example: user123
        connector_password:
          maxLength: 4096
          minLength: 1
          type: string
          description: The password of the Connector used by the MaskingJob. (Standard
            Job only).
          example: password123
          x-dct-toolkit-credential-field: true
        on_the_fly_source_connector_username:
          maxLength: 256
          minLength: 1
          type: string
          description: The username of the source Connector used by the on-the-fly
            MaskingJob. (Standard Job only).
          example: user123
        on_the_fly_source_connector_password:
          maxLength: 4096
          minLength: 1
          type: string
          description: The password of the source Connector used by the on-the-fly
            MaskingJob. (Standard Job only).
          example: password123
          x-dct-toolkit-credential-field: true
        description:
          type: string
          description: Description of the Job (Hyperscale Job only).
          example: Job for app finance
        dataset_id:
          type: string
          description: Dataset of the Hyperscale Job (Hyperscale Job only).
          example: dataset-123
        retain_execution_data:
          type: string
          description: Defines whether execution data will be stored after execution
            is complete (Hyperscale Job only).
          example: 'false'
          enum:
          - 'NO'
          - ON_ERROR
          - ALWAYS
        max_memory:
          type: integer
          description: Maximum memory to be allocated for each Masking job (Hyperscale
            Job only).
          format: int32
          example: 1024
        min_memory:
          type: integer
          description: Minimum memory to be allocated for each Masking job (Hyperscale
            Job only).
          format: int32
          example: 1024
        feedback_size:
          type: integer
          description: Feedback Size for each Masking job (Hyperscale Job only).
          format: int32
          example: 32
        stream_row_limit:
          type: integer
          description: Stream Row Limit for each Masking job (Hyperscale Job only).
          format: int32
          example: 4
        num_input_streams:
          type: integer
          description: Number of input streams to be configured for Masking Job (Hyperscale
            Job only).
          format: int32
          example: 4
        max_concurrent_source_connections:
          type: integer
          description: Maximum number of parallel connection that the Hyperscale instance
            can have with the source datasource (Hyperscale Job only).
          format: int32
          example: 32
        max_concurrent_target_connections:
          type: integer
          description: Maximum number of parallel connection that the Hyperscale instance
            can have with the target datasource (Hyperscale Job only).
          format: int32
          example: 32
        parallelism_degree:
          type: integer
          description: The degree of parallelism (DOP) per Oracle job to recreate
            the index in the post-load process (Hyperscale Job only).
          format: int32
          example: 4
      description: Parameters to update a MaskingJob.
    UpdateNamespaceParameters:
      type: object
      properties:
        name:
          type: string
          description: The Namespace name.
        description:
          type: string
          description: The description of the namespace.
      description: The parameters to update a Namespace.
    UpdateOracleDsourceParameters:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The unique name of the dSource within a group.
          example: my-dsource
        db_username:
          maxLength: 256
          minLength: 1
          type: string
          description: The username of the database user.
          example: db-username
        db_password:
          maxLength: 256
          minLength: 1
          type: string
          description: The password of the database user.
          example: db-password
          x-dct-toolkit-credential-field: true
        validate_db_credentials:
          type: boolean
          description: Whether db_username and db_password must be validated, if present,
            against the dSource. This must be set to false when credentials validation
            is not possible, for instance if the dSource is known to be disabled.
          example: true
          default: true
        environment_user_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The environment user ID to use to connect to the target environment.
          example: environment-user-123
        backup_level_enabled:
          type: boolean
          description: Boolean value indicates whether LEVEL-based incremental backups
            can be used on the source database.
          example: true
        rman_channels:
          maximum: 32
          minimum: 1
          type: integer
          description: Number of parallel channels to use.
        files_per_set:
          maximum: 64
          minimum: 1
          type: integer
          description: Number of data files to include in each RMAN backup set.
        check_logical:
          type: boolean
          description: True if extended block checking should be used for this dSource.
        encrypted_linking_enabled:
          type: boolean
          description: True if SnapSync data from the source should be retrieved through
            an encrypted connection. Enabling this feature can decrease the performance
            of SnapSync from the source but has no impact on the performance of VDBs
            created from the retrieved data.
        compressed_linking_enabled:
          type: boolean
          description: True if SnapSync data from the source should be compressed
            over the network. Enabling this feature will reduce network bandwidth
            consumption and may significantly improve throughput, especially over
            slow network.
        bandwidth_limit:
          type: integer
          description: Bandwidth limit (MB/s) for SnapSync and LogSync network traffic.
            A value of 0 means no limit.
        number_of_connections:
          type: integer
          description: Total number of transport connections to use during SnapSync.
        validate_by_opening_db_in_read_only_mode:
          type: boolean
          description: Whether the snaphots of this dSource's staging database will
            be validated by opening it in read-only mode.
        pre_provisioning_enabled:
          type: boolean
          description: Boolean flag indicating whether or not pre-provisioning is
            turned on for this dSource.
        diagnose_no_logging_faults:
          type: boolean
          description: If true, NOLOGGING operations on this dSource are treated as
            faults and cannot be resolved manually.
        rac_max_instance_lag:
          type: integer
          description: Maximum number of log sequences to allow a RAC instance to
            lag before considering the instance offline.
        allow_auto_staging_restart_on_host_reboot:
          type: boolean
          description: Allow auto restart of staging source on host reboot.
        physical_standby:
          type: boolean
          description: If true, convert this dSource's staging database to a physical
            standby.
        external_file_path:
          maxLength: 1024
          minLength: 1
          type: string
          description: External file path.
        hooks:
          $ref: '#/components/schemas/DSourceHooks'
        custom_env_variables_pairs:
          type: array
          description: An array of name value pair of environment variables.
          items:
            $ref: '#/components/schemas/NameValuePair'
        custom_env_variables_paths:
          type: array
          description: An array of strings of whitespace-separated parameters to be
            passed to the source command. The first parameter must be an absolute
            path to a file that exists on the target environment. Every subsequent
            parameter will be treated as an argument interpreted by the environment
            file.
          items:
            type: string
        staging_database_config_params:
          type: object
          additionalProperties: true
          description: Database configuration parameter overrides.
          nullable: true
        template_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The template ID of the target Oracle Staging Push dSource.
          example: 70096a7-6655-4973-8464-682c41c932da
      description: Parameters to update a dSource.
    UpdateOracleListenerParams:
      properties:
        name:
          type: string
          description: The name of the Oracle listener.
          example: my-listener
        protocol_addresses:
          type: array
          description: The protocol addresses of the Oracle listener.
          example:
          - (ADDRESS=(PROTOCOL=tcp)(HOST=10.110.197.76)(PORT=1527))
          - (ADDRESS=(PROTOCOL=tcp)(HOST=10.110.197.76)(PORT=1528))
          items:
            type: string
    UpdateReplicationProfileParameters:
      type: object
      properties:
        name:
          type: string
          description: The ReplicationProfile name.
        description:
          maxLength: 4096
          type: string
          description: The ReplicationProfile description.
        target_engine_id:
          type: string
          description: The ID of the replication target engine.
        target_host:
          type: string
          description: Hostname of the replication target engine. If none is provided
            and the target_engine_id is set, the hostname for the engine referenced
            by target_engine_id will be used.
        target_port:
          maximum: 65535
          minimum: 0
          type: integer
          description: Target TCP port number for the Delphix Session Protocol.
        replication_mode:
          type: string
          description: The ReplicationProfile mode.
          enum:
          - ENGINE_DATA_REPLICATION
          - MASKED_DATA_DISTRIBUTION
          - CONTINUOUS_VAULT
        schedule:
          maxLength: 256
          minLength: 1
          type: string
          description: Replication schedule in the form of a quartz-formatted string.
        vdb_ids:
          type: array
          description: The VDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        dsource_ids:
          type: array
          description: The dSources that are replicated by this ReplicationProfile.
          items:
            type: string
        cdb_ids:
          type: array
          description: The CDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        vcdb_ids:
          type: array
          description: The vCDBs that are replicated by this ReplicationProfile.
          items:
            type: string
        group_ids:
          type: array
          description: The groups that are replicated by this ReplicationProfile.
          items:
            type: string
        enable_tag_replication:
          type: boolean
          description: Indicates whether tag replication from primary object to replica
            object is enabled or disabled for this ReplicationProfile.
        replicate_entire_engine:
          type: boolean
          description: Whether to replicate the entire engine. This is mutually exclusive
            with the vdb_ids, dsource_ids, cdb_ids, vcdb_ids, and group_ids properties.
        bandwidth_limit:
          minimum: 0
          type: integer
          description: Bandwidth limit (MB/s) for replication network traffic. A value
            of 0 means no limit.
        number_of_connections:
          maximum: 16
          minimum: 1
          type: integer
          description: Total number of transport connections to use.
        encrypted:
          type: boolean
          description: Encrypt replication network traffic.
        automatic_replication:
          type: boolean
          description: Indication whether the replication spec schedule is enabled
            or not.
        use_system_socks_setting:
          type: boolean
          description: Connect to the replication target host via the system-wide
            SOCKS proxy.
      description: The parameters to update a ReplicationProfile.
    UpdateRepositoryParameters:
      required:
      - database_type
      properties:
        allow_provisioning:
          type: boolean
          description: Flag indicating whether the repository should be used for provisioning.
        is_staging:
          type: boolean
          description: Flag indicating whether this repository can be used by the
            Delphix Engine for internal processing.
        version:
          type: string
          description: Version of the repository.
        oracle_base:
          type: string
          description: The Oracle base where database binaries are located.
        bits:
          type: integer
          description: 32 or 64 bits.
    UpdateSnapshotParameters:
      type: object
      properties:
        expiration:
          type: string
          description: The expiration for this snapshot. Mutually exclusive with retain_forever.
          format: date
          example: 2021-07-04T00:00:00Z
        retain_forever:
          type: boolean
          description: Indicates that the snapshot should be retained forever.
          example: false
      description: Parameters to update the expiration of a Snapshot.
    UpdateSourceParameters:
      type: object
      properties:
        oracle_services:
          type: array
          description: List of jdbc connection strings which are used to connect with
            the database.
          example:
          - jdbc:oracle:thin:@hostname:port/service_name
          - jdbc:oracle:thin:@hostname:port:SID
          items:
            type: string
      description: Parameters to update a Source.
    UpdateStagingSourceParameters:
      type: object
      properties:
        oracle_services:
          type: array
          description: List of jdbc connection strings which are used to connect with
            the database.
          example:
          - jdbc:oracle:thin:@hostname:port/service_name
          - jdbc:oracle:thin:@hostname:port:SID
          items:
            type: string
      description: Parameters to update a Staging Source.
    UpdateTimeflowParameters:
      type: object
      properties:
        name:
          maxLength: 1024
          minLength: 1
          type: string
          description: The name of the timeflow.
          example: 'Latest on parent refresh #02'
      description: Parameters to update a Timeflow.
    UpdateVCDBParameters:
      type: object
      properties:
        oracle_services:
          type: array
          description: List of jdbc connection strings which are used to connect with
            the database.
          example:
          - jdbc:oracle:thin:@hostname:port/service_name
          - jdbc:oracle:thin:@hostname:port:SID
          items:
            type: string
        instances:
          type: array
          description: The instances of this RAC database.
          example:
          - instance_name: instance1
            instance_number: 1
            node_reference: ORACLE_CLUSTER_NODE-1
          items:
            $ref: '#/components/schemas/OracleRACDatabaseInstance'
      description: Parameters to update a VCDB.
    UpdateVDBGroupParameters:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The name of the VDB group.
          example: my-vdb-group
        vdb_ids:
          minItems: 1
          type: array
          example:
          - vdb-1
          - vdb-2
          items:
            maxLength: 256
            minLength: 1
            type: string
        vdbs:
          maxItems: 256
          minItems: 1
          type: array
          description: Dictates order of operations on VDBs. Operations can be performed
            in parallel <br> for all VDBs or sequentially. Below are possible valid
            and invalid orderings given an example <br> VDB group with 3 vdbs (A,
            B, and C).<br> Valid:<br> {"vdb_id":"vdb-1", "order":"1"} {"vdb_id":"vdb-2",
            order:"1"} {vdb_id:"vdb-3", order:"1"} (parallel)<br> {vdb_id:"vdb-1",
            order:"1"} {vdb_id:"vdb-2", order:"2"} {vdb_id:"vdb-3", order:"3"} (sequential)<br>
            Invalid:<br> {vdb_id:"vdb-1", order:"A"} {vdb_id:"vdb-2", order:"B"} {vdb_id:"vdb-3",
            order:"C"} (sequential)<br><br> In the sequential case the vdbs with priority
            1 is the first to be started and the last to<br> be stopped. This value
            is set on creation of VDB groups.
          items:
            $ref: '#/components/schemas/CreateVDBGroupOrder'
        refresh_immediately:
          type: boolean
          description: If true, the VDB Group will be refreshed immediately after
            the update.
          default: false
      description: Parameters to update a VDB group.
    UpdateVDBParameters:
      type: object
      properties:
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: The unique name of the VDB within a group.
          example: my-vdb
        db_username:
          maxLength: 256
          minLength: 1
          type: string
          description: The username of the database user (Oracle, ASE Only).
          example: db-username
        db_password:
          maxLength: 256
          minLength: 1
          type: string
          description: The password of the database user (Oracle, ASE Only).
          example: db-password
          x-dct-toolkit-credential-field: true
        validate_db_credentials:
          type: boolean
          description: Whether db_username and db_password must be validated, if present,
            against the VDB. This must be set to false when credentials validation
            is not possible, for instance if the VDB is known to be disabled.
          example: true
          default: true
        auto_restart:
          type: boolean
          description: Whether to enable VDB restart.
        environment_user_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The environment user ID to use to connect to the target environment.
          example: environment-user-123
        template_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The ID of the target VDB Template (Oracle and MSSql Only).
          example: template-123
        listener_ids:
          type: array
          description: The listener IDs for this provision operation (Oracle Only).
          example:
          - listener-123
          - listener-456
          items:
            maxLength: 256
            minLength: 1
            type: string
        new_dbid:
          type: boolean
          description: Whether to enable new DBID for Oracle
        cdc_on_provision:
          type: boolean
          description: Whether to enable CDC on provision for MSSql
        pre_script:
          maxLength: 1024
          minLength: 1
          type: string
          description: Pre script for MSSql.
        post_script:
          maxLength: 1024
          minLength: 1
          type: string
          description: Post script for MSSql.
        hooks:
          $ref: '#/components/schemas/VirtualDatasetHooks'
        custom_env_vars:
          type: object
          additionalProperties:
            maxLength: 4096
            minLength: 1
            type: string
          description: Environment variable to be set when the engine administers
            a VDB. See the Engine documentation for the list of allowed/denied environment
            variables and rules about substitution. Custom environment variables can
            only be updated while the VDB is disabled.
          example:
            MY_ENV_VAR1: $ORACLE_HOME
            MY_ENV_VAR2: $CRS_HOME/after
        custom_env_files:
          type: array
          description: Environment files to be sourced when the Engine administers
            a VDB. This path can be followed by parameters. Paths and parameters are
            separated by spaces. Custom environment variables can only be updated
            while the VDB is disabled.
          example:
          - /export/home/env_file_1
          - /export/home/env_file_2
          items:
            maxLength: 4096
            minLength: 1
            type: string
        oracle_rac_custom_env_files:
          type: array
          description: Environment files to be sourced when the Engine administers
            an Oracle RAC VDB. This path can be followed by parameters. Paths and
            parameters are separated by spaces. Custom environment variables can only
            be updated while the VDB is disabled.
          example:
          - node_id: ORACLE_CLUSTER_NODE-1
            path_parameters: /export/home/env_file_1
          items:
            $ref: '#/components/schemas/OracleRacCustomEnvFile'
        oracle_rac_custom_env_vars:
          type: array
          description: Environment variable to be set when the engine administers
            an Oracle RAC VDB. See the Engine documentation for the list of allowed/denied
            environment variables and rules about substitution. Custom environment
            variables can only be updated while the VDB is disabled.
          example:
          - node_id: ORACLE_CLUSTER_NODE-1
            name: MY_ENV_VAR1
            value: $CRS_HOME/after
          items:
            $ref: '#/components/schemas/OracleRacCustomEnvVar'
        parent_tde_keystore_path:
          maxLength: 1024
          minLength: 1
          type: string
          description: Path to a copy of the parent's Oracle transparent data encryption
            keystore on the target host. Required to provision from snapshots containing
            encrypted database files. (Oracle Multitenant Only)
          example: /foo/bar/tde
        parent_tde_keystore_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: The password of the keystore specified in parentTdeKeystorePath.
            (Oracle Multitenant Only)
          example: password
          x-dct-toolkit-credential-field: true
        tde_key_identifier:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the key created by Delphix. (Oracle Multitenant Only)
          example: tde-indentifier
        target_vcdb_tde_keystore_path:
          maxLength: 1024
          minLength: 1
          type: string
          description: Path to the keystore of the target vCDB. (Oracle Multitenant
            Only)
          example: /foo/cdb/tde
        cdb_tde_keystore_password:
          maxLength: 1024
          minLength: 1
          type: string
          description: The password for the Transparent Data Encryption keystore associated
            with the CDB. (Oracle Multitenant Only)
          example: cdb-password
          x-dct-toolkit-credential-field: true
        appdata_source_params:
          type: object
          additionalProperties: true
          description: The JSON payload conforming to the DraftV4 schema based on
            the type of application data being manipulated.
          example:
            param: value
        additional_mount_points:
          type: array
          description: Specifies additional locations on which to mount a subdirectory
            of an AppData container. Can only be updated while the VDB is disabled.
          nullable: true
          example:
          - shared_path: /
            mount_path: /work
            environment_id: environment-123
          items:
            $ref: '#/components/schemas/AdditionalMountPoint'
        appdata_config_params:
          type: object
          additionalProperties: true
          description: The parameters specified by the source config schema in the
            toolkit
          nullable: true
          example:
            option: value
        config_params:
          type: object
          additionalProperties: true
          description: Database configuration parameter overrides.
          nullable: true
          example:
            processes: 150
        mount_point:
          type: string
          description: Mount point for the VDB (AppData only), can only be updated
            while the VDB is disabled.
          example: /var/mnt
        oracle_services:
          type: array
          description: List of jdbc connection strings which are used to connect with
            the database.
          example:
          - jdbc:oracle:thin:@hostname:port/service_name
          - jdbc:oracle:thin:@hostname:port:SID
          items:
            type: string
        instances:
          type: array
          description: The instances of this RAC database.
          example:
          - instance_name: instance1
            instance_number: 1
            node_reference: ORACLE_CLUSTER_NODE-1
          items:
            $ref: '#/components/schemas/OracleRACDatabaseInstance'
      description: Parameters to update a VDB.
    UpgradeOracleContainerDatabaseParameters:
      required:
      - environment_user_id
      - repository_id
      type: object
      properties:
        repository_id:
          type: string
          description: The id of the CDB/vCDB repository to upgrade to.
          example: 1-ORACLE_INSTALL-4
        environment_user_id:
          type: string
          description: Reference of the environment user to use for CDB/vCDB upgrade.
          example: HOST_USER-4
      description: Parameters to upgrade CDB/vCDB.
    UpgradeOracleDatabaseParameters:
      required:
      - environment_user_id
      - repository_id
      type: object
      properties:
        repository_id:
          type: string
          description: The id of the dSource/VDB repository to upgrade to.
          example: 1-ORACLE_INSTALL-4
        environment_user_id:
          type: string
          description: Reference of the environment user to use for dSource/VDB upgrade.
          example: HOST_USER-4
      description: Parameters to upgrade a dSource/VDB.
    VCDB:
      type: object
      properties:
        id:
          type: string
          description: The vCDB object entity ID.
          example: 1-CDB-1
        name:
          type: string
          description: The name of this vCDB.
          nullable: true
          example: Oracle CDB
        database_name:
          type: string
          description: The name of the container database in the Oracle DBMS.
          example: VPDBSBBVK4
        namespace_id:
          type: string
          description: The namespace id of this vCDB.
          nullable: true
        namespace_name:
          type: string
          description: The namespace name of this vCDB.
          nullable: true
        is_replica:
          type: boolean
          description: Is this a replicated object.
          nullable: true
        database_version:
          type: string
          description: The version of this vCDB.
          nullable: true
          example: 10.2.0.5.0
        environment_id:
          type: string
          description: A reference to the Environment that hosts this vCDB.
          nullable: true
          example: 1-ENVIRONMENT-1
        size:
          type: integer
          description: The total size of the data files used by this vCDB, in bytes.
          format: int64
          nullable: true
          example: 339292672
        engine_id:
          type: string
          description: A reference to the Engine that this vCDB belongs to.
          example: engine-12
        status:
          type: string
          description: The runtime status of the vCDB.
          nullable: true
          example: RUNNING
        parent_id:
          type: string
          description: A reference to the parent CDB of this vCDB.
          example: 1-CDB-1
        creation_date:
          type: string
          description: The date this vCDB was created.
          format: date-time
          nullable: true
          example: 2022-10-15T08:51:34.148Z
        group_name:
          type: string
          description: The name of the group containing this vCDB.
          nullable: true
          example: Untitled
        enabled:
          type: boolean
          description: Whether the vCDB is enabled or not.
          example: true
        content_type:
          type: string
          description: The content type of the vcdb.
          nullable: true
        vcdb_restart:
          type: boolean
          description: Indicates whether the Engine should automatically restart this
            vcdb when target host reboot is detected.
          example: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        invoke_datapatch:
          type: boolean
          description: Indicates whether datapatch should be invoked.
        node_listeners:
          type: array
          description: The list of node listeners for this VCDB.
          items:
            type: string
        instance_name:
          type: string
          description: The instance name of this single instance VCDB.
          example: VCDSID
        instance_number:
          type: integer
          description: The instance number of this single instance VCDB.
        instances:
          type: array
          items:
            $ref: '#/components/schemas/OracleRACDatabaseInstance'
        oracle_services:
          type: array
          items:
            $ref: '#/components/schemas/OracleService'
        repository_id:
          type: string
          description: The repository id of this Virtual CDB.
          example: 1-ORACLE_INSTALL-1
      description: The Delphix Oracle Virtual Container Database.
    VDB:
      type: object
      properties:
        id:
          type: string
          description: The VDB object entity ID.
          example: vdb-123
        database_type:
          type: string
          description: The database type of this VDB.
          nullable: true
          example: Oracle
        name:
          type: string
          description: The logical name of this VDB.
          nullable: true
          example: prod01-copy01
        database_name:
          type: string
          description: The name of the database on the target environment or in the
            database management system.
          example: prod01-copy01-dbname
        namespace_id:
          type: string
          description: The namespace id of this VDB.
          example: 1-NAMESPACE-1
        namespace_name:
          type: string
          description: The namespace name of this VDB.
          example: test-engine-1
        is_replica:
          type: boolean
          description: Is this a replicated object.
          example: true
        is_locked:
          type: boolean
          description: Is this VDB locked.
          example: true
        locked_by:
          type: integer
          description: The ID of the account that locked this VDB.
          format: int64
          example: 1
        locked_by_name:
          type: string
          description: The name of the account that locked this VDB.
          example: user-1
        database_version:
          type: string
          description: The database version of this VDB.
          nullable: true
          example: 10.2.0.5.0
        jdbc_connection_string:
          type: string
          description: The JDBC connection URL for this VDB.
          example: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.43.47.94)(PORT=1521))(CONNECT_DATA=(UR=A)(SID=production01)))
          deprecated: true
        size:
          type: integer
          description: The total size of this VDB, in bytes.
          format: int64
          nullable: true
          example: 339292672
        storage_size:
          type: integer
          description: The actual space used by this VDB, in bytes.
          format: int64
          nullable: true
          example: 12345678
        engine_id:
          type: string
          description: A reference to the Engine that this VDB belongs to.
          example: engine-123
        status:
          type: string
          description: The runtime status of the VDB. 'Unknown' if all attempts to
            connect to the dataset failed.
          nullable: true
          example: RUNNING
        masked:
          type: boolean
          description: The VDB is masked or not.
          nullable: true
          example: false
        content_type:
          type: string
          description: The content type of the vdb.
          nullable: true
          example: PDB
        parent_timeflow_timestamp:
          type: string
          description: The timestamp for parent timeflow.
          format: date-time
          nullable: true
          example: 2021-05-01T08:51:34.148Z
        parent_timeflow_timezone:
          type: string
          description: The timezone for parent timeflow.
          nullable: true
          example: America/Los_Angeles
        environment_id:
          type: string
          description: A reference to the Environment that hosts this VDB.
          nullable: true
          example: environment-123
        ip_address:
          type: string
          description: The IP address of the VDB's host.
          nullable: true
          example: 192.0.2.0
        fqdn:
          type: string
          description: The FQDN of the VDB's host.
          nullable: true
          example: virtual-dbs.myhost.com
        parent_id:
          type: string
          description: A reference to the parent dataset of this VDB.
          nullable: true
          example: vdb-122
        parent_dsource_id:
          type: string
          description: A reference to the parent dSource of this VDB.
          nullable: true
          example: dsource-id
        root_parent_id:
          type: string
          description: A reference to the root parent dataset of this VDB which could
            be a VDB or a dSource.
          nullable: true
          example: vdb-121
        group_name:
          type: string
          description: The name of the group containing this VDB.
          nullable: true
          example: VDBs
        engine_name:
          type: string
          description: Name of the Engine where this VDB is hosted
          nullable: true
          example: engine-123-name
        cdb_id:
          type: string
          description: A reference to the CDB or VCDB associated with this VDB.
          nullable: true
          example: cdb-123
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        creation_date:
          type: string
          description: The date this VDB was created.
          format: date-time
          nullable: true
          example: 2021-05-01T08:51:34.148Z
        hooks:
          $ref: '#/components/schemas/VirtualDatasetHooks'
        appdata_source_params:
          type: object
          additionalProperties: true
          description: The JSON payload conforming to the DraftV4 schema based on
            the type of application data being manipulated.
          nullable: true
          example:
            param: value
            param2: value2
        template_id:
          type: string
          description: A reference to the Database Template.
          nullable: true
          example: DATABASE_TEMPLATE-1
        config_params:
          type: object
          additionalProperties: true
          description: Database configuration parameter overrides.
          nullable: true
          example:
            param: value
            param2: value2
        additional_mount_points:
          type: array
          description: Specifies additional locations on which to mount a subdirectory
            of an AppData container. Can only be updated while the VDB is disabled.
          nullable: true
          items:
            $ref: '#/components/schemas/AdditionalMountPoint'
        appdata_config_params:
          type: object
          additionalProperties: true
          description: The parameters specified by the source config schema in the
            toolkit
          nullable: true
          example:
            foo: bar
        mount_point:
          type: string
          description: Mount point for the VDB (Oracle, ASE, AppData).
          example: /var/mnt
        current_timeflow_id:
          type: string
          description: A reference to the currently active timeflow for this VDB.
          example: timeflow-456
        previous_timeflow_id:
          type: string
          description: A reference to the previous timeflow for this VDB.
          example: timeflow-123
        last_refreshed_date:
          type: string
          description: The date this VDB was last refreshed.
          format: date-time
          nullable: true
          example: 2023-04-15T02:11:14.248Z
        vdb_restart:
          type: boolean
          description: Indicates whether the Engine should automatically restart this
            vdb when target host reboot is detected.
          example: true
        is_appdata:
          type: boolean
          description: Indicates whether this VDB has an AppData database.
          example: true
        exported_data_directory:
          type: string
          description: ZFS exported data directory path.
          example: domain0/oracle_db_container-30/oracle_timeflow-32/datafile
        vcdb_exported_data_directory:
          type: string
          description: ZFS exported data directory path of the virtual CDB container
            (vCDB).
          example: domain0/oracle_db_container-29/oracle_timeflow-31/datafile
        toolkit_id:
          type: string
          description: The ID of the toolkit associated with this VDB.
          example: toolkit-1
        plugin_version:
          type: string
          description: The version of the plugin associated with this VDB.
          nullable: true
          example: 1.0.0
        primary_object_id:
          type: string
          description: The ID of the parent object from which replication was done.
          example: 1-CONTAINER-1
        primary_engine_id:
          type: string
          description: The ID of the parent engine from which replication was done.
          example: '1'
        primary_engine_name:
          type: string
          description: The name of the parent engine from which replication was done.
          example: source-engine
        replicas:
          type: array
          description: The list of replicas replicated from this object.
          items:
            $ref: '#/components/schemas/Replica'
        invoke_datapatch:
          type: boolean
          description: Indicates whether datapatch should be invoked.
        enabled:
          type: boolean
          description: True if VDB is enabled false if VDB is disabled.
          example: true
        node_listeners:
          type: array
          description: The list of node listeners for this VDB.
          items:
            type: string
        instance_name:
          type: string
          description: The instance name name of this single instance VDB.
          example: VDBSID
        instance_number:
          type: integer
          description: The instance number of this single instance VDB.
        instances:
          type: array
          items:
            $ref: '#/components/schemas/OracleRACDatabaseInstance'
        oracle_services:
          type: array
          items:
            $ref: '#/components/schemas/OracleService'
        repository_id:
          type: string
          description: The repository id of this VDB.
          example: 1-ORACLE_INSTALL-1
      description: A Delphix virtual database or dataset.
    VDBDisableParametersMapping:
      description: Parameters to disable a VDB.
      allOf:
      - $ref: '#/components/schemas/DisableVDBParameters'
      - required:
        - vdb_id
        type: object
        properties:
          vdb_id:
            type: string
            description: ID of the VDB to disable.
    VDBEnableParametersMapping:
      description: Parameters to enable a VDB.
      allOf:
      - $ref: '#/components/schemas/EnableVDBParameters'
      - required:
        - vdb_id
        type: object
        properties:
          vdb_id:
            type: string
            description: ID of the VDB to enable.
    VDBGroup:
      required:
      - id
      - name
      type: object
      properties:
        id:
          maxLength: 256
          minLength: 1
          type: string
          description: A unique identifier for the entity.
          readOnly: true
          example: '123'
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: A unique name for the entity.
          example: my-first-vdb-group
        vdb_ids:
          type: array
          description: The list of VDB IDs in this VDB Group.
          example:
          - vdb-123
          - vdb-456
          items:
            maxLength: 256
            minLength: 1
            type: string
        is_locked:
          type: boolean
          description: Indicates whether the VDB Group is locked.
          example: false
        locked_by:
          type: integer
          description: The Id of the account that locked the VDB Group.
          format: int64
          example: 1
        locked_by_name:
          type: string
          description: The name of the account that locked the VDB Group.
          example: admin
        vdb_group_source:
          type: string
          description: Source of the vdb group, default is DCT. In case of self-service
            container, this value would be ENGINE.
          enum:
          - DCT
          - ENGINE
        ss_data_layout_id:
          type: string
          description: Data-layout Id for engine-managed vdb groups.
        vdbs:
          type: array
          description: Dictates order of operations on VDBs. Operations can be performed
            in parallel <br> for all VDBs or sequentially. Below are possible valid
            and invalid orderings given an example <br> VDB group with 3 vdbs (A,
            B, and C).<br> Valid:<br> {"vdb_id":"vdb-1", "order":"1"} {"vdb_id":"vdb-2",
            order:"1"} {vdb_id:"vdb-3", order:"1"} (parallel)<br> {vdb_id:"vdb-1",
            order:"1"} {vdb_id:"vdb-2", order:"2"} {vdb_id:"vdb-3", order:"3"} (sequential)<br>
            Invalid:<br> {vdb_id:"vdb-1", order:"A"} {vdb_id:"vdb-2", order:"B"} {vdb_id:"vdb-3",
            order:"C"} (sequential)<br><br> In the sequential case the vdbs with priority
            1 is the first to be started and the last to<br> be stopped. This value
            is set on creation of VDB groups.
          items:
            $ref: '#/components/schemas/VDBOrder'
        database_type:
          type: string
          description: The database type of the VDB Group. If all VDBs in the group
            are of the same database_type, this field will be set to that type. If
            the VDBs are of different database_type, this field will be set to 'Mixed'.
          example: Oracle
        status:
          type: string
          description: The status of the VDB Group. If all VDBs in the VDB Group have
            the same status, this field will be set to that status. If the VDBs have
            different statuses, this field will be set to 'Mixed'.
          example: RUNNING
        last_successful_refresh_to_bookmark_id:
          type: string
          description: The bookmark ID to which the VDB Group was last successfully
            refreshed.
          example: bookmark-123
        last_successful_refresh_time:
          type: string
          description: The time at which the VDB Group was last successfully refreshed.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      description: A collection of virtual databases and datesets.
    VDBGroupRefreshBySnapshot:
      required:
      - snapshot_id
      - vdb_id
      type: object
      properties:
        vdb_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the VDB present in the VDB Group.
        snapshot_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the snapshot to refresh from.
      description: Parameters to refresh a VDB Group by snapshot.
    VDBGroupRefreshByTimestamp:
      required:
      - vdb_id
      type: object
      properties:
        vdb_id:
          maxLength: 256
          minLength: 1
          type: string
          description: ID of the VDB present in the VDB Group.
        timestamp:
          type: string
          description: The point in time from which to execute the operation. Mutually
            exclusive with timestamp_in_database_timezone. If the timestamp is not
            set, selects the latest point.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        timestamp_in_database_timezone:
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{0,3})?'
          type: string
          description: The point in time from which to execute the operation, expressed
            as a date-time in the timezone of the source database. Mutually exclusive
            with timestamp.
          example: 2021-08-14T14:55:20.507Z
        timeflow_id:
          type: string
          description: The Timeflow ID.
          example: timeflow-123
      description: Parameters to refresh a VDB Group by timestamp.
    VDBInventoryData:
      properties:
        engine_name:
          type: string
          description: The name of the engine the VDB belongs to.
          example: My favorite engine
        name:
          type: string
          description: The name of the VDB.
          example: prod01-copy01
        type:
          type: string
          description: The database type of the VDB.
          example: Oracle
        version:
          type: string
          description: The database version of the VDB.
          example: 10.2.0.5.0
        parent_name:
          type: string
          description: The name of the VDB's parent dataset.
          example: prod01-main
        parent_id:
          type: string
          description: A reference to the parent dataset of the VDB.
          example: 1-DB_CONTAINER-1
        creation_date:
          type: string
          description: The date the VDB was created.
          format: date-time
          example: 2023-04-15T08:51:34.148Z
        last_refreshed_date:
          type: string
          description: The date the VDB was last refreshed.
          format: date-time
          example: 2023-04-15T10:49:34.148Z
        parent_timeflow_location:
          type: string
          description: The location for the VDB's parent timeflow.
          example: '1178883'
        parent_timeflow_timestamp:
          type: string
          description: The timestamp for the VDB's parent timeflow.
          format: date-time
          example: 2021-05-01T08:51:34.148Z
        parent_timeflow_timezone:
          type: string
          description: The timezone for the VDB's parent timeflow.
          example: America/Los_Angeles
        enabled:
          type: boolean
          description: Whether the VDB is enabled
          example: true
        status:
          type: string
          description: The runtime status of the VDB. 'Unknown' if all attempts to
            connect to the dataset failed.
          example: RUNNING
        storage_size:
          type: integer
          description: The actual space used by the VDB, in bytes.
          format: int64
          example: 12345678
    VDBOrder:
      allOf:
      - $ref: '#/components/schemas/CreateVDBGroupOrder'
      - type: object
        properties:
          vdb_name:
            type: string
          last_refresh_time_with_group_refresh:
            type: string
            description: The last time the VDB was successfully refreshed as a part
              of VDB Group refresh operation in UTC timezone.
            format: date-time
            example: 2022-05-29T15:00:00Z
          in_sync:
            type: boolean
            description: Indicates if the VDB is in sync with the VDB Group or not.
              If this VDB is was last refreshed as part of the VDB Group then this
              value will be true.
    VDBStartParametersMapping:
      description: Parameters to start a VDB.
      allOf:
      - $ref: '#/components/schemas/StartVDBParameters'
      - required:
        - vdb_id
        type: object
        properties:
          vdb_id:
            type: string
            description: ID of the VDB to start.
    VDBStopParametersMapping:
      description: Parameters to stop a VDB.
      allOf:
      - $ref: '#/components/schemas/StopVDBParameters'
      - required:
        - vdb_id
        type: object
        properties:
          vdb_id:
            type: string
            description: ID of the VDB to stop.
    ValidateJavaParameters:
      title: ValidateJavaParameters
      required:
      - host_name
      - java_home
      - port
      type: object
      properties:
        java_home:
          type: string
          description: Path pointing to java home on the remote machine.
          example: home/jdk/
        port:
          maximum: 65535
          minimum: 0
          type: integer
          description: SSH port of the remote host machine that will be used to establish
            SSH connection.
          nullable: true
          example: 22
        username:
          maxLength: 255
          minLength: 1
          type: string
          description: The username of the user that will be used to connect to the
            remote host machine.
          example: username
        password:
          maxLength: 255
          minLength: 1
          type: string
          description: The password of the user that will be used to connect to the
            remote host machine.
          example: password
          x-dct-toolkit-credential-field: true
        host_name:
          type: string
          description: Hostname of the remote host machine that will be used to establish
            connection.
          example: test.host.com
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
        vault_id:
          maxLength: 256
          minLength: 1
          type: string
          description: The DCT id or name of the vault from which to read the host
            credentials.
          example: my-vault
        hashicorp_vault_engine:
          maxLength: 256
          minLength: 1
          type: string
          description: Vault engine name where the credential is stored.
          example: kv
          x-dct-toolkit-credential-field: true
        hashicorp_vault_secret_path:
          maxLength: 256
          minLength: 1
          type: string
          description: Path in the vault engine where the credential is stored.
          example: oracle-env
          x-dct-toolkit-credential-field: true
        hashicorp_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the username in the key-value store.
          example: username
          x-dct-toolkit-credential-field: true
        hashicorp_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Key for the password in the key-value store.
          example: secret
          x-dct-toolkit-credential-field: true
        azure_vault_name:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          example: azure_vault
          x-dct-toolkit-credential-field: true
        azure_vault_username_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the username in the key-value store (ORACLE,
            ASE and MSSQL_DOMAIN_USER only).
          example: username
          x-dct-toolkit-credential-field: true
        azure_vault_secret_key:
          maxLength: 256
          minLength: 1
          type: string
          description: Azure vault key for the password in the key-value store (ORACLE,
            ASE and MSSQL_DOMAIN_USER only).
          example: secret
          x-dct-toolkit-credential-field: true
        cyberark_vault_query_string:
          maxLength: 256
          minLength: 1
          type: string
          description: Query to find a credential in the CyberArk vault.
          example: Safe=Test;Folder=Test;Object=Test
          x-dct-toolkit-credential-field: true
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
      description: Parameters to validate java path for the remote host.
    ValidateJavaResponse:
      title: ValidateJavaResponse
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: A message describing the result of the connectivity check.
          example: Success!
        status:
          type: string
          description: A status describing the status of the connectivity check.
          example: SUCCESS
          enum:
          - SUCCESS
          - FAILED
      description: The result of the validating java path on remote host.
    VdbGroupTimestampSummary:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/VdbGroupTimestampSummaryItem'
    VdbGroupTimestampSummaryItem:
      type: object
      properties:
        vdb_id:
          type: string
          description: Id of the VDB in the VDB Group.
        timeflow_range:
          $ref: '#/components/schemas/TimeflowRange'
    VirtualDatasetHooks:
      type: object
      properties:
        pre_refresh:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment before refreshing
            the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        post_refresh:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment after refreshing
            the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        pre_self_refresh:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment before refreshing
            the VDB with data from itself.
          items:
            $ref: '#/components/schemas/Hook'
        post_self_refresh:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment after refreshing
            the VDB with data from itself.
          items:
            $ref: '#/components/schemas/Hook'
        pre_rollback:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment before rewinding
            the VDB.
          deprecated: true
          items:
            $ref: '#/components/schemas/Hook'
        post_rollback:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment after rewinding
            the VDB.
          deprecated: true
          items:
            $ref: '#/components/schemas/Hook'
        configure_clone:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment when the
            VDB is created or refreshed.
          items:
            $ref: '#/components/schemas/Hook'
        pre_snapshot:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment before snapshotting
            a virtual source. These commands can quiesce any data prior to snapshotting.
          items:
            $ref: '#/components/schemas/Hook'
        post_snapshot:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment after snapshotting
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        pre_start:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment before starting
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        post_start:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment after starting
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        pre_stop:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment before stopping
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        post_stop:
          maxItems: 100
          type: array
          description: The commands to execute on the target environment after stopping
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
      description: VDB operation hooks.
    VirtualizationAction:
      type: object
      properties:
        id:
          type: string
          description: ID of the virtualization engine action.
        engine_id:
          type: string
          description: ID of the RegisteredEngine.
        action_type:
          type: string
          description: Type of the action.
        title:
          type: string
          description: The title of the action.
        details:
          type: string
          description: Plain text description of the action.
        start_time:
          type: string
          description: The time the action occurred. For long running processes, this
            represents the starting time.
          format: date-time
        end_time:
          type: string
          description: The time the action completed.
          format: date-time
        user:
          type: string
          description: The user who initiated the action.
        user_agent:
          type: string
          description: Name of client software used to initiate the action.
        origin_ip:
          type: string
          description: Network address used to initiate the action.
        parent_action:
          type: string
          description: The parent action of this action.
        state:
          type: string
          description: The state of the action.
          enum:
          - EXECUTING
          - WAITING
          - COMPLETED
          - CANCELED
          - FAILED
        work_source:
          type: string
          description: Origin of the work that caused the action.
          enum:
          - WEBSERVICE
          - POLICY
          - SYSTEM
        work_source_name:
          type: string
          description: Name of user or policy that initiated the action.
        work_source_principal:
          type: string
          description: Principal of user that initiated the action.
        failure_description:
          type: string
          description: Details of the action failure.
        failure_action:
          type: string
          description: Action to be taken to resolve the failure.
        failure_message_code:
          type: string
          description: Message ID associated with the event.
      description: A virtualization engine action.
    VirtualizationAlert:
      type: object
      properties:
        id:
          type: string
          description: ID of the virtualization engine alert.
        engine_id:
          type: string
          description: ID of the RegisteredEngine.
        alert_timestamp:
          type: string
          description: The time the alert occurred.
          format: date-time
        event:
          type: string
          description: The event that caused the alert.
        event_severity:
          type: string
          description: The severity of the alert.
          enum:
          - INFORMATIONAL
          - WARNING
          - CRITICAL
          - AUDIT
        event_title:
          type: string
          description: The title of the event.
        event_response:
          type: string
          description: The response needed to address the event.
        event_action:
          type: string
          description: Action(s) to be taken to address the event.
        event_command_output:
          type: string
          description: Command output associated with the event.
        event_description:
          type: string
          description: Description of the event.
        target_object_type:
          type: string
          description: The type of the target object for the event.
        target_object_id:
          type: string
          description: The ID of the target object.
        target_name:
          type: string
          description: The name of the target object.
      description: An alert on a virtualization engine.
    VirtualizationFault:
      type: object
      properties:
        id:
          type: string
          description: ID of the virtualization engine fault.
        engine_id:
          type: string
          description: ID of the RegisteredEngine.
        bundle_id:
          type: string
          description: A unique dot delimited identifier associated with the fault.
        target_name:
          type: string
          description: The name of the faulted object at the time the fault was diagnosed.
        target_object_type:
          type: string
          description: The type of the object that is faulted.
        target_object_id:
          type: string
          description: The ID of the object that is faulted.
        title:
          type: string
          description: The summary of the fault.
        description:
          type: string
          description: The full description of the fault.
        fault_action:
          type: string
          description: The suggested action to be taken.
        response:
          type: string
          description: The automated response taken by the Delphix engine.
        severity:
          type: string
          description: The severity of the fault event.
          enum:
          - WARNING
          - CRITICAL
        status:
          type: string
          description: The status of the fault.
          enum:
          - ACTIVE
          - IGNORED
          - RESOLVED
        date_diagnosed:
          type: string
          description: The date when the fault was diagnosed.
          format: date-time
        date_resolved:
          type: string
          description: The date when the fault was resolved.
          format: date-time
        resolution_comments:
          type: string
          description: A comment that describes the fault resolution.
      description: A fault on a virtualization engine.
    VirtualizationFaultResolveOrIgnoreParameters:
      type: object
      properties:
        engine_id:
          type: string
          description: The ID of the engine that the faults belong to.
        ignore:
          type: boolean
          description: Flag indicating whether to ignore the selected faults if they
            are detected on the same objects in the future.
          default: false
        fault_ids:
          type: array
          description: The IDs of the faults to resolve or ignore.
          items:
            type: string
      description: Marks selected faults as resolved or ignored.
    VirtualizationFaultResolveParameters:
      type: object
      properties:
        ignore:
          type: boolean
          description: Flag indicating whether to ignore this fault if it is detected
            on the same object in the future.
          default: false
        resolution_comments:
          type: string
          description: The comments describing the steps taken to resolve a fault.
      description: The parameters to use as input when marking a fault as resolved.
    VirtualizationJob:
      type: object
      properties:
        engine_job_id:
          type: string
          description: ID of the virtualization engine job.
        engine_id:
          type: string
          description: ID of the RegisteredEngine.
        legacy_job_type:
          type: string
          description: Legacy type of the job.
        job_type:
          $ref: '#/components/schemas/TargetJobType'
        target_object_id:
          type: string
          description: ID of the target object.
        legacy_target_object_type:
          type: string
          description: Legacy type of the target object.
        target_object_type:
          $ref: '#/components/schemas/TargetObjectType'
        job_state:
          type: string
          enum:
          - RUNNING
          - COMPLETED
          - SUSPENDED
          - CANCELED
          - FAILED
        start_time:
          type: string
          description: The time the job started.
          format: date-time
        update_time:
          type: string
          description: The time the job was last updated.
          format: date-time
        suspendable:
          type: boolean
          description: Indicates whether the job can be suspended.
        cancelable:
          type: boolean
          description: Indicates whether the job can be canceled.
        queued:
          type: boolean
          description: Indicates whether the job is queued.
        title:
          type: string
          description: The title of the job.
        cancel_reason:
          type: string
          description: The reason the job was canceled.
        percent_complete:
          type: integer
          description: The percentage of the job that is complete.
          format: int32
        run_duration:
          type: integer
          description: The time this job took to complete in milliseconds.
          format: int64
        events:
          type: array
          description: The events associated with this job.
          items:
            $ref: '#/components/schemas/VirtualizationJobEvent'
      description: A virtualization engine job.
    VirtualizationJobEvent:
      type: object
      properties:
        event_type:
          type: string
          description: The type of the event.
          enum:
          - INFO
          - WARNING
          - ERROR
        event_timestamp:
          type: string
          description: The time the event occurred.
          format: date-time
        event_state:
          type: string
          description: The state of the event.
          enum:
          - INITIAL
          - RUNNING
          - SUSPENDED
          - CANCELED
          - COMPLETED
          - RETRYABLE
          - FAILED
        percent_complete:
          type: integer
          description: The percentage of the event that is complete.
          format: int32
        message_code:
          type: string
          description: Message ID associated with the event.
        message_details:
          type: string
          description: Localized message details.
        message_action:
          type: string
          description: Localized message action.
        message_command_output:
          type: string
          description: Command output associated with the event, if applicable.
      description: An event associated with a virtualization engine job.
    VirtualizationPolicy:
      properties:
        id:
          type: string
        name:
          type: string
        dct_managed:
          type: boolean
          description: Whether this virtualization policy is managed by DCT or by
            an individual Delphix Engine.
        namespace:
          type: string
        namespace_id:
          type: string
          description: The namespace id of this virtualization policy.
        namespace_name:
          type: string
          description: The namespace name of this virtualization policy.
        is_replica:
          type: boolean
          description: Is this a replicated object.
        engine_id:
          type: string
        engine_name:
          type: string
          description: The name of the engine the policy belongs to.
        policy_type:
          type: string
          enum:
          - REFRESH_POLICY
          - SNAPSHOT_POLICY
          - SYNC_POLICY
          - RETENTION_POLICY
          - REPLICA_RETENTION_POLICY
          - QUOTA_POLICY
        timezone_id:
          type: string
        default_policy:
          type: boolean
          description: True if this is the default policy created when the system
            is setup.
        effective_type:
          type: string
          description: Whether this policy has been directly applied or inherited.
            See the effectivePolicies parameter of the list call for details.
          enum:
          - DIRECT_APPLIED
          - INHERITED
        data_duration:
          type: integer
          description: Amount of time to keep source data [Retention Policy].
        data_unit:
          type: string
          description: Time unit for data_duration [Retention Policy].
          enum:
          - DAY
          - WEEK
          - MONTH
          - QUARTER
          - YEAR
        log_duration:
          type: integer
          description: Amount of time to keep log data [Retention Policy].
        log_unit:
          type: string
          description: Time unit for log_duration [Retention Policy].
          enum:
          - DAY
          - WEEK
          - MONTH
          - QUARTER
          - YEAR
        num_of_daily:
          type: integer
          description: Number of daily snapshots to keep [Retention Policy].
        num_of_weekly:
          type: integer
          description: Number of weekly snapshots to keep [Retention Policy].
        day_of_week:
          type: string
          description: Day of week upon which to enforce weekly snapshot retention
            [Retention Policy].
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
        num_of_monthly:
          type: integer
          description: Number of monthly snapshots to keep [Retention Policy].
        day_of_month:
          type: integer
          description: Day of month upon which to enforce monthly snapshot retention
            [Retention Policy].
        num_of_yearly:
          type: integer
          description: Number of yearly snapshots to keep [Retention Policy].
        day_of_year:
          type: string
          description: Day of year upon which to enforce yearly snapshot retention,
            expressed a month / day string (e.g., "Jan 1") [Retention Policy].
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/VirtualizationSchedule'
        size:
          type: integer
          description: Size of the quota, in bytes. (QUOTA_POLICY only).
          format: int64
          nullable: true
        tags:
          type: array
          description: The tags that are applied to this VirtualizationPolicy.
          items:
            $ref: '#/components/schemas/Tag'
    VirtualizationPolicyApplyParams:
      type: array
      description: Params to apply virtualization policy to given policy objects.
      items:
        $ref: '#/components/schemas/PolicyTargetObject'
    VirtualizationSchedule:
      required:
      - cron_string
      - cutoff_time
      properties:
        cron_string:
          type: string
        cutoff_time:
          type: integer
          format: int64
    VirtualizationStorageSummaryData:
      required:
      - engine_hostname
      - engine_id
      - engine_name
      properties:
        engine_id:
          minLength: 1
          type: string
          description: A reference to the engine.
          example: engine-123
        engine_name:
          minLength: 1
          type: string
          description: The engine name.
          example: My Favorite Engine
        engine_hostname:
          minLength: 1
          type: string
          description: The engine hostname.
          example: eng09.dev.delphix.com
        total_capacity:
          type: integer
          description: The total amount of storage allocated for engine objects and
            system metadata, in bytes.
          format: int64
          example: 100000000000
        free_storage:
          type: integer
          description: The amount of available storage, in bytes.
          format: int64
          example: 99000000000
        used_storage:
          type: integer
          description: The amount of storage used by engine objects and system metadata,
            in bytes.
          format: int64
          example: 85000000000
        used_percentage:
          type: number
          description: The percentage of storage used.
          example: 75.0
        dsource_count:
          type: integer
          description: The number of dSources on the engine.
          format: int64
          example: 50
        vdb_count:
          type: integer
          description: The number of VDBs on the engine.
          format: int64
          example: 200
        total_object_count:
          type: integer
          description: The total number of dSources and VDBs on the engine.
          format: int64
          example: 400
        reserved_storage:
          type: integer
          description: The amount of storage reversed by the engine as a safety buffer,
            in bytes.
          format: int64
          example: 2200000000
        dsource_used_storage:
          type: integer
          description: The amount of storage used by all dSources on the engine, in
            bytes.
          format: int64
          example: 890000000
        vdb_used_storage:
          type: integer
          description: The amount of storage used by all VDBs on the engine, in bytes.
          format: int64
          example: 11000000
    VirtualizationTask:
      properties:
        id:
          type: string
        parent_job_id:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        title:
          type: string
        percent_complete:
          maximum: 100
          minimum: 0
          type: integer
        events:
          type: array
          items:
            $ref: '#/components/schemas/VirtualizationTaskEvent'
        status:
          type: string
          enum:
          - PENDING
          - STARTED
          - TIMEDOUT
          - RUNNING
          - CANCELED
          - FAILED
          - SUSPENDED
          - WAITING
          - COMPLETED
          - ABANDONED
      deprecated: true
    VirtualizationTaskEvent:
      properties:
        message_details:
          type: string
      deprecated: true
    discoveryResult:
      type: object
      properties:
        id:
          type: integer
          description: The DCT local id of this discovery result
          format: int64
          example: 1
        tableName:
          type: string
          description: The name of the table to which the column belongs
          example: cust_address
        fileName:
          type: string
          description: The name of the file to which the discovery result applies
          example: report.json
        columnName:
          type: string
          description: The name the column to which the discovery result applies
          example: ADDR_LINE_1
        fieldName:
          type: string
          description: The name the field to which the discovery result applies
          example: customer name
        dataClassName:
          type: string
          description: The data class selected for the column or field
          example: FIRST_NAME
        algorithmName:
          type: string
          description: The name of the algorithm selected for the column or field
          example: FIRST_NAME_SL
        dataType:
          type: string
          description: The data type determined for the column or field
          example: varchar
        confidence:
          type: integer
          description: The confidence of the discovery result, ranging from -100 to
            100
          format: int32
          example: 85
        isProfilerWritable:
          type: boolean
          description: Whether the corresponding ruleset column or field was configured
            to allow the discovery process to update the masking assignment
      description: The result of sensitive data discovery on a single column or field
  parameters:
    ConsumersSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - parent_id
        - -parent_id
        - parent_type
        - -parent_type
        - parent_name
        - -parent_name
      example: parent_id
    EnginePerformanceAnalyticReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: engine_name
        enum:
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - cpu_cores_count
        - -cpu_cores_count
        - cpu_utilization
        - -cpu_utilization
        - total_memory
        - -total_memory
        - average_disk_latency_read
        - -average_disk_latency_read
        - average_disk_latency_write
        - -average_disk_latency_write
        - average_disk_latency_total
        - -average_disk_latency_total
        - average_disk_throughput_read
        - -average_disk_throughput_read
        - average_disk_throughput_write
        - -average_disk_throughput_write
        - average_disk_throughput_total
        - -average_disk_throughput_total
        - average_disk_iops_read
        - -average_disk_iops_read
        - average_disk_iops_write
        - -average_disk_iops_write
        - average_disk_iops_total
        - -average_disk_iops_total
        - average_nfs_latency_read
        - -average_nfs_latency_read
        - average_nfs_latency_write
        - -average_nfs_latency_write
        - average_nfs_latency_total
        - -average_nfs_latency_total
        - average_nfs_throughput_read
        - -average_nfs_throughput_read
        - average_nfs_throughput_write
        - -average_nfs_throughput_write
        - average_nfs_throughput_total
        - -average_nfs_throughput_total
        - average_nfs_iops_read
        - -average_nfs_iops_read
        - average_nfs_iops_write
        - -average_nfs_iops_write
        - average_nfs_iops_total
        - -average_nfs_iops_total
        - average_iscsi_latency_read
        - -average_iscsi_latency_read
        - average_iscsi_latency_write
        - -average_iscsi_latency_write
        - average_iscsi_latency_total
        - -average_iscsi_latency_total
        - average_iscsi_throughput_read
        - -average_iscsi_throughput_read
        - average_iscsi_throughput_write
        - -average_iscsi_throughput_write
        - average_iscsi_throughput_total
        - -average_iscsi_throughput_total
        - average_iscsi_iops_read
        - -average_iscsi_iops_read
        - average_iscsi_iops_write
        - -average_iscsi_iops_write
        - average_iscsi_iops_total
        - -average_iscsi_iops_total
        - average_network_throughput_transmit
        - -average_network_throughput_transmit
        - average_network_throughput_receive
        - -average_network_throughput_receive
      example: engine_name
    EnginePerformanceAnalyticTrendSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: engine_name
        enum:
        - engine_id
        - -engine_id
        - trend_type
        - -trend_type
        - aggregation_period
        - -aggregation_period
      example: engine_name
    JobTypeParam:
      name: job_type
      in: query
      description: The job type to filter by.
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/TargetJobType'
    ObjectIdParam:
      name: object_id
      in: query
      description: The object id to filter by.
      required: false
      style: form
      explode: true
      schema:
        type: string
    ObjectTypeParam:
      name: object_type
      in: query
      description: The object type to filter by.
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/TargetObjectType'
    accessGroupIdParam:
      name: accessGroupId
      in: path
      description: The ID of the Access group.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    accessGroupsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
      example: id
    accountIdParam:
      name: id
      in: path
      description: Numeric ID of the Account.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int64
    accountsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: id
        enum:
        - id
        - -id
        - api_client_id
        - -api_client_id
        - username
        - first_name
        - last_name
        - email
        - -username
        - -first_name
        - -last_name
        - -email
        - last_access_time
        - -last_access_time
        - creation_time
        - -creation_time
      example: id
    algorithmIdParam:
      name: algorithmId
      in: path
      description: The ID of the Algorithm.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    algorithmsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - description
        - -description
        - plugin_name
        - -plugin_name
        - framework_name
        - -framework_name
        - create_date
        - -create_date
        - engine_name
        - -engine_name
        - engine_id
        - -engine_id
        - revision_hash
        - -revision_hash
      example: id
    apiMetricKind:
      name: api_metric_kind
      in: query
      description: Restrict the list to API usage metric of the given kind
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - automation
        - governance
      example: automation
    apiUsageReportClientNameFilterParam:
      name: client_name
      in: query
      description: The Client names to be included in the report.
      required: false
      style: form
      explode: true
      schema:
        minLength: 1
        type: array
        items:
          type: string
    apiUsageReportDctVersionFilterParam:
      name: dct_version
      in: query
      description: The DCT versions to be included in the report.
      required: false
      style: form
      explode: true
      schema:
        minLength: 1
        type: array
        items:
          type: string
    apiUsageReportGroupByParam:
      name: group_by
      in: query
      description: The field to group results by.
      required: false
      style: form
      explode: true
      schema:
        minItems: 1
        type: array
        items:
          type: string
          enum:
          - api_endpoint
          - api_method
          - kind
          - client_name
          - user_agent
          - dct_version
    apiUsageReportUserAgentFilterParam:
      name: user_agent
      in: query
      description: The UserAgent names to be included in the report.
      required: false
      style: form
      explode: true
      schema:
        minLength: 1
        type: array
        items:
          type: string
    auditLogsSummaryReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: account_first_name
        enum:
        - account_id
        - -account_id
        - account_first_name
        - -account_first_name
        - account_last_name
        - -account_last_name
        - vdb_refreshes
        - -vdb_refreshes
        - masking_jobs
        - -masking_jobs
      example: account_first_name
    bookmarkIdParam:
      name: bookmarkId
      in: path
      description: The ID of the Bookmark.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    bookmarksSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - creation_date
        - -creation_date
        - vdb_ids
        - -vdb_ids
        - retention
        - -retention
        - expiration
        - -expiration
        - data_timestamp
        - -data_timestamp
        - timeflow_id
        - -timeflow_id
        - location
        - -location
        - vdb_group_name
        - -vdb_group_name
      example: id
    cdbIdParam:
      name: cdbId
      in: path
      description: The ID of the CDB.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    cdbsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - database_version
        - -database_version
        - environment_id
        - -environment_id
        - size
        - -size
        - jdbc_connection_string
        - -jdbc_connection_string
        - engine_id
        - -engine_id
        - group_name
        - -group_name
        - enabled
        - -enabled
        - status
        - -status
        - instance_name
        - -instance_name
        - instance_number
        - -instance_number
        - repository_id
        - -repository_id
      example: id
    classifierIdParam:
      name: classifierId
      in: path
      description: The ID of the Classifier.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    classifiersSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - framework
        - -framework
        - description
        - -description
        - data_class_id
        - -data_class_id
        - data_class_name
        - -data_class_name
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
      example: name
    complianceApplicationSettingsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        enum:
        - id
        - -id
        - group
        - -group
        - name
        - -name
        - value
        - -value
      example: group
    complianceJobIdParam:
      name: complianceJobId
      in: path
      description: The ID of the compliance job.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    complianceJobsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - is_on_the_fly_masking
        - -is_on_the_fly_masking
        - type
        - -type
        - execution_type
        - -execution_type
        - engine_job_id
        - -engine_job_id
        - creation_date
        - -creation_date
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - last_completed_execution_date
        - -last_completed_execution_date
        - last_execution_status
        - -last_execution_status
        - last_execution_id
        - -last_execution_id
        - last_execution_start_time
        - -last_execution_start_time
        - last_execution_run_time
        - -last_execution_run_time
        - rule_set_id
        - -rule_set_id
        - rule_set_name
        - -rule_set_name
        - connector_type
        - -connector_type
        - description
        - -description
        - dataset_id
        - -dataset_id
        - retain_execution_data
        - -retain_execution_data
        - parallelism_degree
        - -parallelism_degree
        - max_concurrent_target_connections
        - -max_concurrent_target_connections
        - max_concurrent_source_connections
        - -max_concurrent_source_connections
        - num_input_streams
        - -num_input_streams
        - stream_row_limit
        - -stream_row_limit
        - feedback_size
        - -feedback_size
        - min_memory
        - -min_memory
        - max_memory
        - -max_memory
        - discovery_policy_id
        - -discovery_policy_id
        - discovery_policy_name
        - -discovery_policy_name
      example: id
    connectorIdParam:
      name: connectorId
      in: path
      description: The ID of the Connector.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    connectorsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - type
        - -type
        - database_type
        - -database_type
        - platform
        - -platform
        - name
        - -name
        - hostname
        - -hostname
        - username
        - -username
        - port
        - -port
        - auth_present
        - -auth_present
        - custom_driver_name
        - -custom_driver_name
        - database_name
        - -database_name
        - instance_name
        - -instance_name
        - jdbc
        - -jdbc
        - schema_name
        - -schema_name
        - sid
        - -sid
        - kerberos_auth
        - -kerberos_auth
        - service_principal
        - -service_principal
        - enable_logger
        - -enable_logger
        - file_type
        - -file_type
        - connection_mode
        - -connection_mode
        - path
        - -path
        - ssh_key
        - -ssh_key
        - user_dir_is_root
        - -user_dir_is_root
      example: id
    cursor:
      name: cursor
      in: query
      description: Cursor to fetch the next or previous page of results. The value
        of this property must be extracted from the 'prev_cursor' or 'next_cursor'
        property of a PaginatedResponseMetadata which is contained in the response
        of list and search API endpoints.
      required: false
      style: form
      explode: true
      schema:
        maxLength: 4096
        minLength: 1
        type: string
    dSourceConsumptionReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - name
        - -name
        - status
        - -status
        - database_type
        - -database_type
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - last_consumption_date
        - -last_consumption_date
        - ingested_size
        - -ingested_size
      example: name
    dSourceUsageReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - name
        - -name
        - unvirtualized_space
        - -unvirtualized_space
        - actual_space
        - -actual_space
        - dependant_vdbs
        - -dependant_vdbs
        - engine_name
        - -engine_name
      example: name
    dataClassIdParam:
      name: dataClassId
      in: path
      description: The ID of the Data Class.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    dataClassesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        enum:
        - id
        - -id
        - name
        - -name
        - default_algorithm_id
        - -default_algorithm_id
        - default_algorithm_name
        - -default_algorithm_name
        - default_token_algorithm_id
        - -default_token_algorithm_id
        - default_token_algorithm_name
        - -default_token_algorithm_name
        - description
        - -description
        - example
        - -example
        - revision_hash
        - -revision_hash
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
    dataLayoutIdParam:
      name: dataLayoutId
      in: path
      description: The ID of the data-layout.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    dataLayoutSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - type
        - -type
      example: id
    dataRiskReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: engine_id
        enum:
        - connector_id
        - -connector_id
        - engine_connector_id
        - -engine_connector_id
        - connector_name
        - -connector_name
        - connector_type
        - -connector_type
        - last_profiled_date
        - -last_profiled_date
        - last_masked_date
        - -last_masked_date
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - is_profiled
        - -is_profiled
        - is_sensitive_data
        - -is_sensitive_data
        - is_masked
        - -is_masked
        - is_at_risk
        - -is_at_risk
        - data_elements_total
        - -data_elements_total
        - data_elements_not_sensitive
        - -data_elements_not_sensitive
        - data_elements_sensitive_masked
        - -data_elements_sensitive_masked
        - data_elements_sensitive_unmasked
        - -data_elements_sensitive_unmasked
        - records_total
        - -records_total
        - records_not_sensitive
        - -records_not_sensitive
        - records_sensitive_masked
        - -records_sensitive_masked
        - records_sensitive_unmasked
        - -records_sensitive_unmasked
      example: engine_id
    databaseColumnMetadataIdParam:
      name: databaseColumnMetadataId
      in: path
      description: The ID of the database column metadata.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    databaseColumnMetadataSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: column_name
        enum:
        - id
        - -id
        - column_name
        - -column_name
        - database_table_metadata_id
        - -database_table_metadata_id
        - table_name
        - -table_name
        - rule_set_id
        - -rule_set_id
        - rule_set_name
        - -rule_set_name
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - algorithm_id
        - -algorithm_id
        - algorithm_name
        - -algorithm_name
        - data_class_id
        - -data_class_id
        - data_class_name
        - -data_class_name
        - data_type
        - -data_type
        - date_format
        - -date_format
        - column_length
        - -column_length
        - is_sensitive
        - -is_sensitive
        - is_profiler_writable
        - -is_profiler_writable
        - is_primary_key
        - -is_primary_key
        - is_identity
        - -is_identity
        - is_index
        - -is_index
        - is_foreign_key
        - -is_foreign_key
      example: column_name
    databaseTableMetadataIdParam:
      name: databaseTableMetadataId
      in: path
      description: The ID of the database table metadata.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    databaseTableMetadataSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: table_name
        enum:
        - id
        - -id
        - table_name
        - -table_name
        - rule_set_id
        - -rule_set_id
        - custom_sql
        - -custom_sql
        - where_clause
        - -where_clause
        - having_clause
        - -having_clause
        - key_column
        - -key_column
        - is_sensitive
        - -is_sensitive
        - row_count
        - -row_count
        - last_refresh_time
        - -last_refresh_time
        - last_row_count_time
        - -last_row_count_time
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
      example: id
    databaseTemplateIdParam:
      name: databaseTemplateId
      in: path
      description: The ID of the Database Template.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    databaseTemplatesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - description
        - -description
        - source_type
        - -source_type
      example: id
    datasetIdQueryParam:
      name: dataset_id
      in: query
      description: The ID of the dSource or VDB.
      required: true
      style: form
      explode: true
      schema:
        minLength: 1
        type: string
      example: dataset-123
    dependenciesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: child_id
        enum:
        - child_id
        - -child_id
        - child_name
        - -child_name
        - child_type
        - -child_type
      example: id
    discoveryExpressionIdParam:
      name: expressionId
      in: path
      description: The ID of the discovery expression.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    discoveryExpressionsSortParam:
      name: sort
      in: query
      description: The
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - regular_expression
        - -regular_expression
        - data_level_profiling
        - -data_level_profiling
        - min_data_length
        - -min_data_length
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - data_class_id
        - -data_class_id
        - data_class_name
        - -data_class_name
        - data_type
        - -data_type
        - expression_type
        - -expression_type
        - level
        - -level
      example: id
    discoveryPoliciesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - description
        - -description
        - discovery_method
        - -discovery_method
        - assignment_threshold
        - -assignment_threshold
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
      example: id
    discoveryPolicyIdParam:
      name: discoveryPolicyId
      in: path
      description: The ID of the Discovery Policy.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    discoveryResultSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - table_name
        - -table_name
        - file_name
        - -file_name
        - column_name
        - -column_name
        - field_name
        - -field_name
        - data_class_name
        - -data_class_name
        - algorithm_name
        - -algorithm_name
        - data_type
        - -data_type
        - confidence
        - -confidence
        - is_profiler_writable
        - -is_profiler_writable
      example: column_name
    dsourceIdParam:
      name: dsourceId
      in: path
      description: The ID of the dSource.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    dsourcesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - content_type
        - -content_type
        - database_type
        - -database_type
        - name
        - -name
        - database_version
        - -database_version
        - data_uuid
        - -data_uuid
        - storage_size
        - -storage_size
        - plugin_version
        - -plugin_version
        - creation_date
        - -creation_date
        - group_name
        - -group_name
        - enabled
        - -enabled
        - engine_id
        - -engine_id
        - source_id
        - -source_id
        - status
        - -status
        - engine_name
        - -engine_name
        - primary_object_id
        - -primary_object_id
        - primary_engine_id
        - -primary_engine_id
        - primary_engine_name
        - -primary_engine_name
        - sync_policy_id
        - -sync_policy_id
        - retention_policy_id
        - -retention_policy_id
        - replica_retention_policy_id
        - -replica_retention_policy_id
        - quota_policy_id
        - -quota_policy_id
        - logsync_enabled
        - -logsync_enabled
        - exported_data_directory
        - -exported_data_directory
        - template_id
        - -template_id
        - allow_auto_staging_restart_on_host_reboot
        - -allow_auto_staging_restart_on_host_reboot
        - physical_standby
        - -physical_standby
        - validate_by_opening_db_in_read_only_mode
        - -validate_by_opening_db_in_read_only_mode
      example: id
    endDate:
      name: end_date
      in: query
      description: Report end date/time. Defaults to current time.
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-07T19:10:00Z
    engineGlobalObjectStateReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: engine_id
        enum:
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - jobs_count
        - -jobs_count
        - connectors_count
        - -connectors_count
        - rulesets_count
        - -rulesets_count
        - global_object_revision_hash
        - -global_object_revision_hash
      example: engine_id
    engineIdParam:
      name: engineId
      in: path
      description: The ID of the registered engine.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    engineIdQueryParam:
      name: engine_id
      in: query
      description: ID of a registered engine.
      required: true
      style: form
      explode: true
      schema:
        minLength: 1
        type: string
      example: 1
    engineSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - uuid
        - -uuid
        - type
        - -type
        - version
        - -version
        - name
        - -name
        - hostname
        - -hostname
        - cpu_core_count
        - -cpu_core_count
        - memory_size
        - -memory_size
        - data_storage_capacity
        - -data_storage_capacity
        - data_storage_used
        - -data_storage_used
        - username
        - -username
        - hashicorp_vault_id
        - -hashicorp_vault_id
        - connection_status
        - -connection_status
        - connection_status_details
        - -connection_status_details
        - engine_connection_status
        - -engine_connection_status
        - engine_connection_status_details
        - -engine_connection_status_details
        - masking_memory_used
        - -masking_memory_used
        - masking_allocated_memory
        - -masking_allocated_memory
        - masking_jobs_running
        - -masking_jobs_running
        - masking_max_concurrent_jobs
        - -masking_max_concurrent_jobs
        - masking_available_cores
        - -masking_available_cores
      example: id
    envSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - namespace
        - -namespace
        - engine_id
        - -engine_id
        - enabled
        - -enabled
        - is_cluster
        - -is_cluster
      example: id
    environmentIdParam:
      name: environmentId
      in: path
      description: The ID of the environment.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    executionComponentIdParam:
      name: executionComponentId
      in: path
      description: The ID of the Execution Component.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    executionComponentsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: id
        enum:
        - id
        - -id
        - name
        - -name
        - execution_id
        - -execution_id
        - status
        - -status
        - rows_masked
        - -rows_masked
        - rows_total
        - -rows_total
        - bytes_processed
        - -bytes_processed
        - bytes_total
        - -bytes_total
        - start_time
        - -start_time
        - end_time
        - -end_time
        - non_conforming_data_count
        - -non_conforming_data_count
      example: id
    executionEventsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: id
        enum:
        - id
        - -id
        - execution_id
        - -execution_id
        - execution_component_id
        - -execution_component_id
        - event_type
        - -event_type
        - severity
        - -severity
        - cause
        - -cause
        - count
        - -count
        - timestamp
        - -timestamp
        - masked_object_name
        - -masked_object_name
        - algorithm_name
        - -algorithm_name
        - exception_type
        - -exception_type
        - exception_detail
        - -exception_detail
      example: id
    executionIdParam:
      name: executionId
      in: path
      description: The ID of the Execution.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    executionsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: -start_time
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - masking_job_id
        - -masking_job_id
        - masking_job_name
        - -masking_job_name
        - source_connector_id
        - -source_connector_id
        - target_connector_id
        - -target_connector_id
        - status
        - -status
        - rows_masked
        - -rows_masked
        - rows_total
        - -rows_total
        - bytes_processed
        - -bytes_processed
        - bytes_total
        - -bytes_total
        - start_time
        - -start_time
        - end_time
        - -end_time
        - submit_time
        - -submit_time
        - run_duration
        - -run_duration
        - queue_duration
        - -queue_duration
        - total_duration
        - -total_duration
        - account_id
        - -account_id
        - account_name
        - -account_name
      example: id
    groupIdParam:
      name: groupId
      in: path
      description: The ID of the dataset group.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    groupSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - namespace
        - -namespace
        - name
        - -name
        - engine_name
        - -engine_name
      example: id
    hashicorpVaultsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
      example: id
    hostIdParam:
      name: hostId
      in: path
      description: The ID of the host.
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 256
        minLength: 1
        type: string
    hyperscaleConnectorIdParam:
      name: hyperscaleConnectorId
      in: path
      description: The ID of the Hyperscale Connector.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    hyperscaleConnectorsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: source_username
        enum:
        - id
        - -id
        - name
        - -name
        - hyperscale_instance_id
        - -hyperscale_instance_id
        - data_type
        - -data_type
        - source_username
        - -source_username
        - source_jdbc_url
        - -source_jdbc_url
        - source_mongo_url
        - -source_mongo_url
        - target_username
        - -target_username
        - target_jdbc_url
        - -target_jdbc_url
        - target_mongo_url
        - -target_mongo_url
      example: id
    hyperscaleDatasetIdParam:
      name: hyperscaleDatasetId
      in: path
      description: The ID of the Hyperscale Dataset.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    hyperscaleDatasetTableOrFileIdParam:
      name: hyperscaleDatasetTableOrFileId
      in: path
      description: The ID of the Hyperscale Dataset table or file.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    hyperscaleDatasetTablesOrFilesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: table_name
        enum:
        - id
        - -id
        - schema_name
        - -schema_name
        - table_name
        - -table_name
        - database_name
        - -database_name
        - collection_name
        - -collection_name
        - filter_key
        - -filter_key
        - column_array_rows
        - -column_array_rows
        - unload_split
        - -unload_split
        - stream_size
        - -stream_size
      example: id
    hyperscaleDatasetsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: id
        enum:
        - id
        - -id
        - hyperscale_instance_id
        - -hyperscale_instance_id
        - data_type
        - -data_type
        - connector_id
        - -connector_id
        - mount_point_id
        - -mount_point_id
      example: id
    hyperscaleInstanceId:
      name: hyperscaleInstanceId
      in: path
      description: The ID of hyperscale instance.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    hyperscaleInstanceIdParam:
      name: hyperscaleInstanceId
      in: path
      description: The ID of the Hyperscale Instance.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    hyperscaleInstancesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - hostname
        - -hostname
        - creation_date
        - -creation_date
        - status
        - -status
        - data_type
        - -data_type
        - connection_status
        - -connection_status
        - connection_status_details
        - -connection_status_details
      example: id
    hyperscaleMountPointIdParam:
      name: hyperscaleMountPointId
      in: path
      description: The ID of the Hyperscale Mount Point.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    hyperscaleMountPointsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - hostname
        - -hostname
        - mount_type
        - -mount_type
        - options
        - -options
        - mount_path
        - -mount_path
        - staging_storage_type
        - -staging_storage_type
        - auth_mechanism
        - -auth_mechanism
        - aws_bucket_name
        - -aws_bucket_name
        - aws_bucket_region
        - -aws_bucket_region
        - aws_bucket_prefix
        - -aws_bucket_prefix
        - aws_bucket_delimiter
        - -aws_bucket_delimiter
        - hyperscale_instance_id
        - -hyperscale_instance_id
      example: id
    jobWithConnectorSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - connector_role
        - -connector_role
        - is_on_the_fly_masking
        - -is_on_the_fly_masking
        - last_execution_time
        - -last_execution_time
        - last_execution_status
        - -last_execution_status
        - creation_date
        - -creation_date
      example: id
    jobsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: id
        enum:
        - id
        - -id
        - status
        - -status
        - type
        - -type
        - localized_type
        - -localized_type
        - target_id
        - -target_id
        - target_name
        - -target_name
        - start_time
        - -start_time
        - update_time
        - -update_time
        - error_details
        - -error_details
        - trace_id
        - -trace_id
        - account_id
        - -account_id
        - account_name
        - -account_name
        default: -start_time
      example: id
    kerberosConfigIdParam:
      name: kerberosConfigId
      in: path
      description: The ID of the kerberos config.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    kerberosConfigSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - namespace_id
        - -namespace_id
        - namespace_name
        - -namespace_name
        - name
        - -name
        - realm
        - -realm
        - principal
        - -principal
        - enabled
        - -enabled
      example: id
    limit:
      name: limit
      in: query
      description: Maximum number of objects to return per query. The value must be
        between 1 and 1000. Default is 100.
      required: false
      style: form
      explode: true
      schema:
        maximum: 1000
        minimum: 1
        type: integer
        default: 100
      example: 50
    limitExtendedParam:
      name: limit
      in: query
      description: Maximum number of objects to return per query. The value must be
        between 1 and 1000. Default is 10000.
      required: false
      style: form
      explode: true
      schema:
        maximum: 10000
        minimum: 1
        type: integer
        default: 10000
      example: 100
    listenerIdParam:
      name: listenerId
      in: path
      description: Oracle listener id.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    maskingEnvironmentId:
      name: maskingEnvironmentId
      in: path
      description: The ID of the Masking Environment.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    maskingEnvironmentsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - purpose
        - -purpose
        - is_workflow_enabled
        - -is_workflow_enabled
      example: id
    maskingExecutionMetricsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - masking_job_name
        - -masking_job_name
        - connector_type
        - -connector_type
        - ruleset_name
        - -ruleset_name
        - rows_masked
        - -rows_masked
        - rows_total
        - -rows_total
        - bytes_masked
        - -bytes_masked
        - bytes_total
        - -bytes_total
        - duration
        - -duration
        - tables_files_count
        - -tables_files_count
        - masked_tables_files_count
        - -masked_tables_files_count
        - columns_fields_count
        - -columns_fields_count
        - masked_columns_fields_count
        - -masked_columns_fields_count
        - masking_job_type
        - -masking_job_type
      example: id
    maskingFileIdParam:
      name: maskingFileId
      in: path
      description: The ID or name of the masking file.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    maskingFilesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - filename
        - -filename
        - created_date
        - -created_date
        - file_size
        - -file_size
        - file_checksum
        - -file_checksum
        - engine_file_uuid
        - -engine_file_uuid
        - engine_name
        - -engine_name
        - engine_id
        - -engine_id
        - description
        - -description
      example: id
    maskingJobDeleteForceParam:
      name: force
      in: query
      description: If true, ignores any failures to remove a masking job on an engine.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
      example: true
    maskingJobIdParam:
      name: maskingJobId
      in: path
      description: The ID of the Masking Job.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    maskingJobSourceEnginesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - masking_job_id
        - -masking_job_id
        - source_engine_id
        - -source_engine_id
      example: id
    maskingJobsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - is_on_the_fly_masking
        - -is_on_the_fly_masking
        - creation_date
        - -creation_date
        - last_completed_execution_date
        - -last_completed_execution_date
        - last_execution_status
        - -last_execution_status
        - last_execution_id
        - -last_execution_id
        - rule_set_id
        - -rule_set_id
        - rule_set_name
        - -rule_set_name
        - ruleset.name
        - -ruleset.name
        - connector_type
        - -connector_type
        - description
        - -description
        - dataset_id
        - -dataset_id
        - retain_execution_data
        - -retain_execution_data
        - parallelism_degree
        - -parallelism_degree
        - max_concurrent_target_connections
        - -max_concurrent_target_connections
        - max_concurrent_source_connections
        - -max_concurrent_source_connections
        - num_input_streams
        - -num_input_streams
        - stream_row_limit
        - -stream_row_limit
        - feedback_size
        - -feedback_size
        - min_memory
        - -min_memory
        - max_memory
        - -max_memory
      example: id
    maskingPluginIdParam:
      name: maskingPluginId
      in: path
      description: The ID of the masking plugin.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    maskingPluginsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - plugin_type
        - -plugin_type
        - description
        - -description
        - install_date
        - -install_date
        - built_in
        - -built_in
        - sdk_version
        - -sdk_version
        - version
        - -version
        - author
        - -author
      example: id
    namespaceIdParam:
      name: namespaceId
      in: path
      description: The ID of the namespace.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    namespacesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - tag
        - -tag
        - engine_id
        - -engine_id
        - secure_namespace
        - -secure_namespace
        - failed_over
        - -failed_over
        - locked
        - -locked
        - failback_possible
        - -failback_possible
        - failback_capability
        - -failback_capability
        - failback_incapability_reason
        - -failback_incapability_reason
        - replication_mode
        - -replication_mode
        - last_execution_status
        - -last_execution_status
        - last_execution_status_timestamp
        - -last_execution_status_timestamp
        - source_engine_id
        - -source_engine_id
        - source_engine_name
        - -source_engine_name
      example: id
    objectIdParam:
      name: objectId
      in: path
      description: The ID of the DCT Object.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    objectTypeParam:
      name: objectType
      in: path
      description: The type of the DCT object.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        enum:
        - ALGORITHM
        - ACCESS_GROUP
        - ACCOUNT
        - AUDIT_LOGS_SUMMARY_REPORT
        - ROLE
        - API_USAGE_REPORT
        - BOOKMARK
        - CDB
        - CLASSIFIER
        - DATA_CLASS
        - DATABASE_TEMPLATE
        - DISCOVERY_EXPRESSION
        - DISCOVERY_POLICY
        - DSOURCE
        - ENGINE
        - ENVIRONMENT
        - MASKING_JOB
        - MASKING_ENVIRONMENT
        - MASKING_FILE_UPLOAD
        - MASKING_JOB_SET
        - REPORT_SCHEDULE
        - RULE_SET
        - SOURCE
        - VAULT
        - VCDB
        - VDB
        - VDB_GROUP
        - CONNECTOR
        - CONNECTIVITY_CHECK
        - DSOURCE_USAGE_REPORT
        - DSOURCE_CONSUMPTION_REPORT
        - JOB
        - PRODUCT_INFO
        - SMTP_CONFIG
        - MASKING_EXECUTION_METRICS_REPORT
        - STORAGE_SUMMARY_REPORT
        - STORAGE_SAVINGS_SUMMARY_REPORT
        - VDB_INVENTORY_REPORT
        - LDAP
        - SAML
        - PASSWORD_POLICY
        - GLOBAL_PROPERTIES
        - SYSTEM
        - API_CLASSIFICATION
        - VIRTUALIZATION_POLICY
        - HYPERSCALE_INSTANCE
        - HYPERSCALE_CONNECTOR
        - HYPERSCALE_DATASET
        - MASKING_PLUGIN
        - REPLICATION_PROFILE
        - NAMESPACE
        - ENGINE_PERFORMANCE_ANALYTIC_REPORT
        - DATA_RISK_REPORT
        - ENGINE_GLOBAL_OBJECT_STATE_REPORT
    passwordVaultIdParam:
      name: passwordVaultId
      in: path
      description: The ID of the password vault.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    passwordVaultSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - namespace
        - -namespace
        - name
        - -name
        - engine_name
        - -engine_name
        - type
        - -type
      example: id
    permission:
      name: permission
      in: query
      description: Restrict the objects, which are allowed.
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/PermissionEnum'
      example: READ
    replicationProfileIdParam:
      name: replicationProfileId
      in: path
      description: The ID of the ReplicationProfile.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    replicationProfilesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - replication_mode
        - -replication_mode
        - engine_id
        - -engine_id
        - target_engine_id
        - -target_engine_id
        - target_host
        - -target_host
        - target_port
        - -target_port
        - replication_tag
        - -replication_tag
        - type
        - -type
        - encrypted
        - -encrypted
        - automatic_replication
        - -automatic_replication
        - use_system_socks_setting
        - -use_system_socks_setting
        - bandwidth_limit
        - -bandwidth_limit
        - number_of_connections
        - -number_of_connections
        - last_execution_status
        - -last_execution_status
        - last_execution_status_timestamp
        - -last_execution_status_timestamp
      example: id
    reportIdParam:
      name: reportId
      in: path
      description: The ID of the report schedule.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    reportingScheduleSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: report_id
        enum:
        - report_id
        - -report_id
        - report_type
        - -report_type
        - cron_expression
        - -cron_expression
        - time_zone
        - -time_zone
        - message
        - -message
        - file_format
        - -file_format
        - enabled
        - -enabled
        - sort_column
        - -sort_column
      example: report_id
    repositoryIdParam:
      name: repositoryId
      in: path
      description: The ID of the repository.
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 256
        minLength: 1
        type: string
    roleIdParam:
      name: roleId
      in: path
      description: The ID of the role.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    roleSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - description
        - -description
      example: id
    ruleSetIdParam:
      name: ruleSetId
      in: path
      description: The ID of the Rule Set.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    ruleSetsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        enum:
        - id
        - -id
        - name
        - -name
        - type
        - -type
        - platform
        - -platform
        - connector_id
        - -connector_id
        - connector_name
        - -connector_name
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - data_elements_total
        - -data_elements_total
        - records_total
        - -records_total
    scopeIdParam:
      name: scopeId
      in: path
      description: The ID of the Access group scope.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    snapshotIdParam:
      name: snapshotId
      in: path
      description: The ID of the snapshot.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    snapshotsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - namespace
        - -namespace
        - name
        - -name
        - consistency
        - -consistency
        - missing_non_logged_data
        - -missing_non_logged_data
        - dataset_id
        - -dataset_id
        - creation_time
        - -creation_time
        - start_timestamp
        - -start_timestamp
        - start_location
        - -start_location
        - timestamp
        - -timestamp
        - location
        - -location
        - expiration
        - -expiration
        - retain_forever
        - -retain_forever
        - effective_expiration
        - -effective_expiration
        - effective_retain_forever
        - -effective_retain_forever
        - timeflow_id
        - -timeflow_id
        - timezone
        - -timezone
        - version
        - -version
        - temporary
        - -temporary
        - appdata_toolkit
        - -appdata_toolkit
        - appdata_metadata
        - -appdata_metadata
        - ase_db_encryption_key
        - -ase_db_encryption_key
        - mssql_internal_version
        - -mssql_internal_version
        - mssql_backup_set_uuid
        - -mssql_backup_set_uuid
        - mssql_backup_software_type
        - -mssql_backup_software_type
        - mssql_backup_location_type
        - -mssql_backup_location_type
        - mssql_empty_snapshot
        - -mssql_empty_snapshot
        - oracle_from_physical_standby_vdb
        - -oracle_from_physical_standby_vdb
        - oracle_redo_log_size_in_bytes
        - -oracle_redo_log_size_in_bytes
      example: id
    sourceIdParam:
      name: sourceId
      in: path
      description: The ID of the Source.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    sourcesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - database_type
        - -database_type
        - name
        - -name
        - database_version
        - -database_version
        - environment_id
        - -environment_id
        - data_uuid
        - -data_uuid
        - ip_address
        - -ip_address
        - fqdn
        - -fqdn
        - size
        - -size
        - jdbc_connection_string
        - -jdbc_connection_string
        - plugin_version
        - -plugin_version
        - is_dsource
        - -is_dsource
        - instance_name
        - -instance_name
        - instance_number
        - -instance_number
        - user
        - -user
        - non_sys_user
        - -non_sys_user
        - discovered
        - -discovered
        - linking_enabled
        - -linking_enabled
        - repository
        - -repository
      example: id
    stagingSourceIdParam:
      name: stagingSourceId
      in: path
      description: The ID of the staging Source.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    stagingSourcesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - database_type
        - -database_type
        - database_name
        - -database_name
        - database_version
        - -database_version
        - environment_id
        - -environment_id
        - data_uuid
        - -data_uuid
        - ip_address
        - -ip_address
        - fqdn
        - -fqdn
        - repository
        - -repository
        - oracle_config_type
        - -oracle_config_type
        - cdb_type
        - -cdb_type
        - dsource_id
        - -dsource_id
      example: id
    startDate:
      name: start_date
      in: query
      description: Report start date/time. Defaults to first API request.
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-05-29T19:00:00Z
    storageSavingsReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: dependant_vdbs
        enum:
        - dependant_vdbs
        - -dependant_vdbs
        - unvirtualized_space
        - -unvirtualized_space
        - current_timeflows_unvirtualized_space
        - -current_timeflows_unvirtualized_space
        - virtualized_space
        - -virtualized_space
        - name
        - -name
        - engine_name
        - -engine_name
        - dsource_id
        - -dsource_id
        - estimated_savings
        - -estimated_savings
        - estimated_savings_perc
        - -estimated_savings_perc
        - estimated_current_timeflows_savings
        - -estimated_current_timeflows_savings
        - estimated_current_timeflows_savings_perc
        - -estimated_current_timeflows_savings_perc
      example: dependant_vdbs
    timeflowIdParam:
      name: timeflowId
      in: path
      description: The ID of the timeflow.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    timeflowsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - namespace
        - -namespace
        - name
        - -name
        - dataset_id
        - -dataset_id
        - creation_type
        - -creation_type
        - parent_snapshot_id
        - -parent_snapshot_id
        - parent_point_location
        - -parent_point_location
        - parent_point_timestamp
        - -parent_point_timestamp
        - parent_point_timeflow_id
        - -parent_point_timeflow_id
        - source_data_timestamp
        - -source_data_timestamp
        - oracle_incarnation_id
        - -oracle_incarnation_id
        - oracle_cdb_timeflow_id
        - -oracle_cdb_timeflow_id
        - oracle_tde_uuid
        - -oracle_tde_uuid
        - mssql_database_guid
        - -mssql_database_guid
        - creation_timestamp
        - -creation_timestamp
        - activation_timestamp
        - -activation_timestamp
        - parent_vdb_id
        - -parent_vdb_id
        - parent_dsource_id
        - -parent_dsource_id
        - source_vdb_id
        - -source_vdb_id
        - source_dsource_id
        - -source_dsource_id
      example: id
    toolkitIdParam:
      name: toolkitId
      in: path
      description: The ID of the toolkit.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    toolkitSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - type
        - pretty_name
        - name
        - reference
        - version
        - display_name
        - plugin_id
        - external_version
        - engine_name
        - engine_id
        - type
        - -id
        - -type
        - -pretty_name
        - -name
        - -reference
        - -version
        - -display_name
        - -plugin_id
        - -external_version
        - -engine_name
        - -engine_id
        - -type
      example: id
    userRefParam:
      name: userRef
      in: path
      description: Environment user reference.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    vcdbIdParam:
      name: vcdbId
      in: path
      description: The ID of the vCDB.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    vcdbsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - database_name
        - -database_name
        - database_version
        - -database_version
        - environment_id
        - -environment_id
        - size
        - -size
        - engine_id
        - -engine_id
        - status
        - -status
        - parent_id
        - -parent_id
        - creation_date
        - -creation_date
        - group_name
        - -group_name
        - enabled
        - -enabled
        - invoke_datapatch
        - -invoke_datapatch
        - instance_name
        - -instance_name
        - instance_number
        - -instance_number
        - repository_id
        - -repository_id
      example: id
    vdbGroupIdParam:
      name: vdbGroupId
      in: path
      description: The ID or name of the VDB Group.
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 256
        minLength: 1
        type: string
    vdbGroupsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - locked_by
        - -locked_by
        - locked_by_name
        - -locked_by_name
        - database_type
        - -database_type
        - status
        - -status
        - last_successful_refresh_to_bookmark_id
        - -last_successful_refresh_to_bookmark_id
        - last_successful_refresh_time
        - -last_successful_refresh_time
      example: id
    vdbIdParam:
      name: vdbId
      in: path
      description: The ID of the VDB.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    vdbInventoryReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - name
        - -name
        - type
        - -type
        - version
        - -version
        - parent_id
        - -parent_id
        - parent_name
        - -parent_name
        - creation_date
        - -creation_date
        - last_refreshed_date
        - -last_refreshed_date
        - parent_timeflow_location
        - -parent_timeflow_location
        - parent_timeflow_timestamp
        - -parent_timeflow_timestamp
        - parent_timeflow_timezone
        - -parent_timeflow_timezone
        - enabled
        - -enabled
        - status
        - -status
        - engine_name
        - -engine_name
        - storage_size
        - -storage_size
      example: name
    vdbsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - database_name
        - -database_name
        - database_type
        - -database_type
        - name
        - -name
        - database_version
        - -database_version
        - size
        - -size
        - engine_id
        - -engine_id
        - status
        - -status
        - environment_id
        - -environment_id
        - ip_address
        - -ip_address
        - fqdn
        - -fqdn
        - parent_id
        - -parent_id
        - parent_dsource_id
        - -parent_dsource_id
        - group_name
        - -group_name
        - creation_date
        - -creation_date
        - last_refreshed_date
        - -last_refreshed_date
        - engine_name
        - -engine_name
        - storage_size
        - -storage_size
        - locked_by
        - -locked_by
        - locked_by_name
        - -locked_by_name
        - primary_object_id
        - -primary_object_id
        - primary_engine_id
        - -primary_engine_id
        - primary_engine_name
        - -primary_engine_name
        - content_type
        - -content_type
        - exported_data_directory
        - -exported_data_directory
        - vcdb_exported_data_directory
        - -vcdb_exported_data_directory
        - invoke_datapatch
        - -invoke_datapatch
        - instance_name
        - -instance_name
        - instance_number
        - -instance_number
        - repository_id
        - -repository_id
      example: id
    virtualizationActionsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - action_type
        - -action_type
        - title
        - -title
        - details
        - -details
        - start_time
        - -start_time
        - end_time
        - -end_time
        - user
        - -user
        - user_agent
        - -user_agent
        - origin_ip
        - -origin_ip
        - parent_action
        - -parent_action
        - state
        - -state
        - work_source
        - -work_source
        - work_source_name
        - -work_source_name
        - work_source_principal
        - -work_source_principal
        - failure_description
        - -failure_description
        - failure_action
        - -failure_action
        - failure_message_code
        - -failure_message_code
      example: id
    virtualizationAlertIdParam:
      name: alertId
      in: path
      description: The ID of the Virtualization Alert.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    virtualizationAlertsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: engine_id
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - event_severity
        - -event_severity
        - target_object_id
        - -target_object_id
        - target_name
        - -target_name
        - target_object_type
        - -target_object_type
        - alert_timestamp
        - -alert_timestamp
        - event
        - -event
        - event_description
        - -event_description
        - event_title
        - -event_title
        - event_response
        - -event_response
        - event_action
        - -event_action
        - event_command_output
        - -event_command_output
      example: id
    virtualizationFaultIdParam:
      name: faultId
      in: path
      description: The ID of the Virtualization Fault.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    virtualizationFaultsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: engine_id
        enum:
        - id
        - -id
        - engine_id
        - -engine_id
        - bundle_id
        - -bundle_id
        - target_name
        - -target_name
        - target_object_type
        - -target_object_type
        - target_object_id
        - -target_object_id
        - title
        - -title
        - description
        - -description
        - fault_action
        - -fault_action
        - response
        - -response
        - severity
        - -severity
        - status
        - -status
        - date_diagnosed
        - -date_diagnosed
        - date_resolved
        - -date_resolved
        - resolution_comments
        - -resolution_comments
      example: id
    virtualizationJobsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: engine_id
        enum:
        - engine_job_id
        - -engine_job_id
        - engine_id
        - -engine_id
        - job_state
        - -job_state
        - legacy_job_type
        - -legacy_job_type
        - job_type
        - -job_type
        - target_object_id
        - -target_object_id
        - legacy_target_object_type
        - -legacy_target_object_type
        - target_object_type
        - -target_object_type
        - job_state
        - -job_state
        - start_time
        - -start_time
        - update_time
        - -update_time
        - percent_complete
        - -percent_complete
        - run_duration
        - -run_duration
      example: engine_job_id
    virtualizationPoliciesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies a descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: name
        enum:
        - id
        - -id
        - name
        - -name
        - dct_managed
        - -dct_managed
        - create_user
        - -create_user
        - create_timestamp
        - -create_timestamp
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - policy_type
        - -policy_type
        - timezone_id
        - -timezone_id
        - default_policy
        - -default_policy
        - effective_type
        - -effective_type
        - data_duration
        - -data_duration
        - data_unit
        - -data_unit
        - log_duration
        - -log_duration
        - log_unit
        - -log_unit
        - num_of_daily
        - -num_of_daily
        - num_of_weekly
        - -num_of_weekly
        - day_of_week
        - -day_of_week
        - num_of_monthly
        - -num_of_monthly
        - day_of_month
        - -day_of_month
        - num_of_yearly
        - -num_of_yearly
        - day_of_year
        - -day_of_year
        - size
        - -size
      example: id
    virtualizationPolicyIdParam:
      name: policyId
      in: path
      description: The ID of the Virtualization Policy.
      required: true
      style: simple
      explode: false
      schema:
        minLength: 1
        type: string
    virtualizationStorageReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended
        '-' signifies descending order.
      required: false
      style: form
      explode: true
      schema:
        type: string
        nullable: true
        example: engine_id
        enum:
        - engine_id
        - -engine_id
        - engine_name
        - -engine_name
        - engine_hostname
        - -engine_hostname
        - total_capacity
        - -total_capacity
        - free_storage
        - -free_storage
        - used_storage
        - -used_storage
        - used_percentage
        - -used_percentage
        - dsource_count
        - -dsource_count
        - vdb_count
        - -vdb_count
        - total_object_count
        - -total_object_count
        - reserved_storage
        - -reserved_storage
        - dsource_used_storage
        - -dsource_used_storage
        - vdb_used_storage
        - -vdb_used_storage
      example: engine_id
  requestBodies:
    ASELinkDSourceBody:
      description: The parameters to link an ASE dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ASEDSourceLinkSourceParameters'
          examples:
            ase_dsource_minimum_request:
              summary: Minimal Request (Without Optionals)
              description: The above request example is intended for an ASE Database
                without including optional properties
              value:
                source_id: ASE_CONFIG-1
                db_user: db-user
                db_password: secret-password
                load_backup_path: /backup/path
            ase_dsource_full_request:
              summary: Full Request
              description: The above request example is intended for an ASE Database
                linking with all possible parameters.
              value:
                name: ASE-DSOURCE-NAME
                source_id: ASE_CONFIG-1
                group_id: GROUP-1
                description: This is a test description for ASE database
                log_sync_enabled: false
                external_file_path: /some/external/path
                make_current_account_owner: true
                mount_base: /mount/base
                load_backup_path: /backup/path
                backup_server_name: backup-server-name
                backup_host_user: USER-1
                backup_host: host.backup.com
                dump_credentials: secret
                source_host_user: source-user
                db_user: db-user
                db_password: secret-password
                db_vault: vault-name
                db_hashicorp_vault_engine: kv
                db_hashicorp_vault_secret_path: oracle-env
                db_hashicorp_vault_username_key: username
                db_hashicorp_vault_secret_key: secret
                db_azure_vault_name: azure_vault
                db_azure_vault_username_key: username
                db_azure_vault_secret_key: secret
                db_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                staging_repository: ASE_INSTANCE-1
                staging_host_user: USER-2
                validated_sync_mode: ENABLED
                dump_history_file_enabled: false
                drop_and_recreate_devices: false
                sync_strategy: specific_backup
                ase_backup_files:
                - backup/file/1
                - backup/file/2
                tags:
                - key: key-1
                  value: value-1
                ops_pre_sync:
                - name: pre-sync-op1
                  command: echo 'pre-sync'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                - name: post-sync-op
                  command: echo 'post-sync-op'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                pre_validated_sync:
                - name: pre-validate-sync
                  command: echo 'pre-validate-sync'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: base-var
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                post_validated_sync:
                - name: post-validate-sync
                  command: echo 'post-validate-sync'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: base-post-sync
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
      required: true
    AppDataDSourceBody:
      description: The parameters to link an AppData dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppDataDSourceLinkSourceParameters'
          examples:
            appdata_dsource_minimum_request:
              summary: Minimal Request (Postgres)
              description: The above request example is intended for a Postgres AppData
                linking
              value:
                source_id: 1-APPDATA_STAGED_SOURCE_CONFIG-1
                group_id: 1-GROUP-1
                link_type: AppDataStaged
                staging_environment: 1-ENVIRONMENT-1
                staging_mount_base: /mnt/staging
                environment_user: 1-ENVIRONMENT_USER-1
                parameters:
                  postgresPort: 5432,
                sync_parameters:
                  resync: true
      required: true
    CreateBookmark:
      description: The parameters to create a bookmark.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BookmarkCreateParameters'
      required: true
    CreateDatabaseTemplate:
      description: The parameters to create a database template.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DatabaseTemplateCreateParameters'
      required: true
    CreateEnvironment:
      description: The parameters to create an environment.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentCreateParameters'
          examples:
            unix_standalone:
              summary: Unix - Standalone Environments
              description: |
                The request example is intended for creating Unix standalone environments.
              value:
                name: oracle-environment
                engine_id: '1'
                os_name: UNIX
                hostname: db.host.com
                ssh_port: 22
                toolkit_path: /work
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                azure_vault_name: azure_vault
                azure_vault_username_key: username
                azure_vault_secret_key: secret
                use_kerberos_authentication: true
                use_engine_public_key: true
                nfs_addresses:
                - 192.168.10.2
                ase_db_username: user-123
                ase_db_password: test
                ase_db_vault: my-vault
                ase_db_hashicorp_vault_engine: kv
                ase_db_hashicorp_vault_secret_path: ase-env
                ase_db_hashicorp_vault_username_key: username
                ase_db_hashicorp_vault_secret_key: password
                ase_db_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ase_db_azure_vault_name: azure_vault
                ase_db_azure_vault_username_key: username
                ase_db_azure_vault_secret_key: secret
                ase_db_use_kerberos_authentication: true
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Unix Oracle source host
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            windows_standalone_target:
              summary: Windows - Standalone Target Environments
              description: |
                The request example is intended for creating Windows standalone target environments.
              value:
                name: win-target
                engine_id: '1'
                os_name: WINDOWS
                hostname: db.host.com
                connector_port: 9100
                connector_authentication_key: secret
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                azure_vault_name: azure_vault
                azure_vault_username_key: username
                azure_vault_secret_key: secret
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: target-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Windows MSSql target host
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            windows_standalone_source:
              summary: Windows - Standalone Source Environments
              description: |
                The request example is intended for creating Windows standalone source environments.
              value:
                name: win-source
                engine_id: '1'
                os_name: WINDOWS
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                azure_vault_name: azure_vault
                azure_vault_username_key: username
                azure_vault_secret_key: secret
                description: Windows MSSql source host
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            unix_cluster:
              summary: Unix - Cluster Environments
              description: |
                The request example is intended for creating Unix cluster environments.
              value:
                name: oracle-rac
                engine_id: '1'
                os_name: UNIX
                is_cluster: true
                cluster_home: /u01/app/19.0.0.0/grid
                hostname: db.host.com
                ssh_port: 22
                toolkit_path: /work
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                azure_vault_name: azure_vault
                azure_vault_username_key: username
                azure_vault_secret_key: secret
                use_kerberos_authentication: true
                use_engine_public_key: true
                nfs_addresses:
                - 192.168.10.2
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-rac
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Unix Oracle cluster host
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            windows_cluster_source:
              summary: Windows - Source Cluster Environments
              description: |
                The request example is intended for creating Windows source cluster environments.
              value:
                name: win-cluster
                engine_id: '1'
                os_name: WINDOWS
                is_cluster: true
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                azure_vault_name: azure_vault
                azure_vault_username_key: username
                azure_vault_secret_key: secret
                is_target: false
                description: Windows MSSql source cluster environment
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            windows_cluster_target:
              summary: Windows - Target Cluster Environments
              description: |
                The request example is intended for creating Windows target cluster environments.
              value:
                name: win-cluster
                engine_id: '1'
                os_name: WINDOWS
                is_cluster: true
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                azure_vault_name: azure_vault
                azure_vault_username_key: username
                azure_vault_secret_key: secret
                is_target: true
                description: Windows MSSql target cluster environment
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
      required: true
    CreateEnvironmentUserBody:
      description: The parameters to create an environment user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentUserParams'
          examples:
            using_username_password:
              summary: Using Username and Password
              description: This example can be used for creating a user with username
                and password.
              value:
                username: username-1
                password: password-1
            using_hashicorp_vault:
              summary: Using HashiCorp Vault
              description: This example can be used for creating a user with HashiCorp
                vault.
              value:
                vault: my-vault
                vault_username: my-vault-user
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
            using_cyberark:
              summary: Using CyberArk Vault
              description: This example can be used for creating a user with CyberArk
                vault.
              value:
                vault: my-vault
                vault_username: my-vault-user
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
            using_azure_vault:
              summary: Using HashiCorp Vault
              description: This example can be used for creating a user with Azure
                vault.
              value:
                vault: my-vault
                vault_username: my-vault-user
                azure_vault_name: azure_vault
                azure_vault_username_key: username
                azure_vault_secret_key: secret
            using_kerberos:
              summary: Using Kerberos Authentication
              description: This example can be used for creating a user with Kerberos
                Authentication.
              value:
                use_kerberos_authentication: true
            using_public_ssh:
              summary: Using Username and Public Key
              description: Allow the Delphix Engine to sign on to this host as this
                user, without specifying a password. Copy the key from engine interface
                and add it on a new line in the "~/.ssh/authorized_keys" file in the
                user's home directory on that host.
              value:
                use_engine_public_key: true
                username: username
    CreateOracleListenerBody:
      description: The parameters to create an Oracle listener.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOracleListenerParams'
          examples:
            OracleNodeListener:
              summary: Creating an Oracle Node Listener
              description: This example can be used for creating an Oracle node listener.
              value:
                type: NODE
                name: my-listener
                protocol_addresses:
                - (ADDRESS=(PROTOCOL=tcp)(HOST=10.110.197.76)(PORT=1527))
                - (ADDRESS=(PROTOCOL=tcp)(HOST=10.110.197.76)(PORT=1528))
                host_id: 1-UNIX_HOST-1
            OracleScanListener:
              summary: Creating an Oracle Scan Listener
              description: This example can be used for creating an Oracle scan listener.
              value:
                type: SCAN
                name: my-listener
                protocol_addresses:
                - (ADDRESS=(PROTOCOL=tcp)(HOST=10.110.197.76)(PORT=1527))
                - (ADDRESS=(PROTOCOL=tcp)(HOST=10.110.197.76)(PORT=1528))
    CreateOracleSourceBody:
      description: The parameters to create an Oracle source.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OracleSourceCreateParameters'
          examples:
            Oracle Single Instance Source:
              summary: Oracle single instance source create
              description: This example can be used for creating an Oracle single
                instance source.
              value:
                oracle_config_type: OracleSIConfig
                engine_id: 1
                environment_id: 1-UNIX_HOST_ENVIRONMENT-17
                database_name: MYSIDB
                repository_id: 1-ORACLE_INSTALL-3
                unique_name: MYSIDB
                instance_name: MYSIDB
            Oracle RAC Source:
              summary: Oracle RAC source create
              description: This example can be used for creating an Oracle RAC source.
              value:
                oracle_config_type: OracleRACConfig
                engine_id: 1
                environment_id: 1-UNIX_HOST_ENVIRONMENT-17
                database_name: MYRACDB
                repository_id: 1-ORACLE_INSTALL-3
                unique_name: MYRACDB
                instances:
                - node_reference: ORACLE_CLUSTER_NODE-1
                  instance_number: 1
                  instance_name: MYRACDB1
                - node_reference: ORACLE_CLUSTER_NODE-2
                  instance_number: 2
                  instance_name: MYRACDB2
    CreatePostgresSource:
      description: The parameters to create a PostgreSQL source.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostgresSourceCreateParameters'
          examples:
            Postgres:
              summary: PostgreSQL source create
              description: |
                The request example is intended for creating a PostgreSQL source.
              value:
                name: postgres-source
                repository_id: APPDATA_REPOSITORY-10
                engine_id: '1'
                environment_id: UNIX_HOST_ENVIRONMENT-3
      required: true
    CreateReplicationProfile:
      description: The parameters to create a ReplicationProfile.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateReplicationProfileParameters'
          examples:
            ReplicationProfileCreate:
              summary: ReplicationProfile create
              description: |
                The request example is intended for creating a ReplicationProfile.
              value:
                name: replication-profile-name
                replication_mode: ENGINE_DATA_REPLICATION
                engine_id: 1
                target_engine_id: 2
                target_port: 8415
                description: description
                schedule: 0 0 0 * * ?
                tags:
                - key: key1
                  value: value1
                - key: key2
                  value: value2
                enable_tag_replication: true
                bandwidth_limit: 0
                number_of_connections: 1
                encrypted: false
                automatic_replication: false
                use_system_socks_setting: false
                group_ids:
                - 1-GROUP-1
    CreateReportingSchedule:
      description: The parameters to create a reporting schedule.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportingScheduleCreateParameters'
      required: true
    DeleteObjects:
      description: The parameters to delete scope objects
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteScopedObjectItem'
          examples:
            delete_all_objects:
              summary: Delete all objects
              description: Delete all objects for given scope - No request body required
              value: {
                }
            delete_multiple_objects_by_id_and_type:
              summary: Delete multiple objects by ID & type
              description: Delete objects for given list with matching object ID and
                type
              value:
                objects:
                - object_type: VDB
                  object_id: 1-VDB-OBJECT-ID
                - object_type: ACCOUNTS
                  object_id: '1'
    DeleteScopeObjectTags:
      description: The parameters to delete scope objects tags
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteScopeObjectTags'
          examples:
            delete_all_tags:
              summary: Delete all object tags
              description: Delete all object tags for given scope - No request body
                required
              value: {
                }
            delete_multiple_tags_by_key_value:
              summary: Delete multiple tags by key & value
              description: Delete tags for given list of object tags with matching
                key and value
              value:
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
    DeleteTags:
      description: The parameters to delete tags
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteTag'
          examples:
            delete_all_tags:
              summary: Delete all tags
              description: Delete all tags for given object - No request body required
              value: {
                }
            delete_tags_by_key:
              summary: Delete tags by key
              description: Delete all tags for given object with matching key
              value:
                key: key-1
            delete_tags_by_key_value:
              summary: Delete a tag by key & value
              description: Delete tag for given object with matching key and value
              value:
                key: key-1
                value: value-1
            delete_multiple_tags_by_key_value:
              summary: Delete multiple tags by key & value
              description: Delete tags for given list of tags with matching key and
                value
              value:
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
    DisableDsourceBody:
      description: The parameters to disable a dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DisableDsourceParameters'
    EnableDsourceBody:
      description: The parameters to enable a dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnableDsourceParameters'
    MSSQLAttachDsourceBody:
      description: The parameters to attach a MSSql dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MSSQLDSourceAttachSourceParameters'
          examples:
            mssql_attach_dsource_minimum_request:
              summary: Minimal Request (Without Optionals)
              description: The above request example is intended for an MSSql Database
                attach operation without including optional properties
              value:
                source_id: SOURCE_CONFIG-1
                ppt_repository: MSSQL_INSTANCE-1
                mssql_user_environment_reference: HOST_USER-1
            mssql_attach_dsource_full_request:
              summary: Full Request
              description: The above request example is intended for an MSSql Database
                attach operation with all possible parameters.
              value:
                source_id: SOURCE_CONFIG-1
                encryption_key: KEY-1
                source_host_user: SOURCE_HOST_USER-1
                ppt_repository: PPT_REPOSITORY-1
                ppt_host_user: PPT_HOST_USER-1
                staging_pre_script: staging_pre_script
                staging_post_script: staging_post_script
                sync_strategy_managed_type: external
                mssql_user_environment_reference: ENVIRONMENT-USER-1
                mssql_user_domain_username: DOMAIN-USER-1
                mssql_user_domain_password: DOMAIN-PASSWORD-1
                mssql_user_domain_vault: DOMAIN-VAULT-1
                mssql_user_domain_hashicorp_vault_engine: kv
                mssql_user_domain_hashicorp_vault_secret_path: mssql-env
                mssql_user_domain_hashicorp_vault_username_key: username
                mssql_user_domain_hashicorp_vault_secret_key: secret
                mssql_user_domain_azure_vault_name: azure_vault
                mssql_user_domain_azure_vault_username_key: username
                mssql_user_domain_azure_vault_secret_key: secret
                mssql_user_domain_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                mssql_database_username: db-user
                mssql_database_password: password
                delphix_managed_backup_compression_enabled: false
                delphix_managed_backup_policy: primary
                external_managed_validate_sync_mode: TRANSACTION_LOG
                external_managed_shared_backup_locations:
                - shared_backup_location/location1
                - shared_backup_location/location2
                external_netbackup_config_master_name: master_name-1
                external_netbackup_config_source_client_name: netbackup_config_source_client_name-1
                external_netbackup_config_params: netbackup_config_params-1
                external_netbackup_config_templates: external_netbackup_config_template-1
                external_commserve_host_name: commserve_host_name-1
                external_commvault_config_source_client_name: commvault_config_source_client_name-1
                external_commvault_config_staging_client_name: commvault_config_staging_client_name-1
                external_commvault_config_params: commvault_config_params-1
                external_commvault_config_templates: commvault_config_template-1
                ops_pre_sync:
                - name: pre-sync-op1
                  command: echo 'pre-sync'
                  shell: ps
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: mssql-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                - name: post-sync-op
                  command: echo 'post-sync-op'
                  shell: ps
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: mssql-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
    MSSQLAttachStagingPushDSourceBody:
      description: The parameters to attach an MSSql dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MSSQLDSourceStagingPushAttachSourceParameters'
          examples:
            mssql_dsource_staging_push_attach_minimum_request:
              summary: Minimal Request (Without Optionals)
              description: The above request example is intended for an MSSql staging
                push Database attach operation without including optional properties
              value:
                ppt_repository: PPT_REPOSITORY-1
                staging_database_name: staging_database-1
            mssql_dsource_staging_push_attach_full_request:
              summary: Full Request
              description: The above request example is intended for an MSSql staging
                push Database linking with all optional properties
              value:
                encryption_key: KEY-1
                ppt_repository: PPT_REPOSITORY-1
                ppt_host_user: PPT_HOST_USER-1
                staging_pre_script: staging_pre_script
                staging_post_script: staging_post_script
                staging_database_name: staging_database-1
                db_state: RESTORING
                tags:
                - key: key-1
                  value: value-1
                ops_pre_sync:
                - name: pre-sync-op
                  command: echo 'pre-sync'
                  shell: ps
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                - name: post-sync-op
                  command: echo 'post-sync-op'
                  shell: ps
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
      required: true
    MSSQLLinkDSourceBody:
      description: The parameters to link an MSSql dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MSSQLDSourceLinkSourceParameters'
          examples:
            mssql_dsource_minimum_request:
              summary: Minimal Request (Without Optionals)
              description: The above request example is intended for an MSSql Database
                linking without including optional properties
              value:
                source_id: 1-SOURCE_CONFIG-1
                ppt_repository: MSSQL_INSTANCE-1
                ppt_host_user: HOST_USER-1
                mssql_user_environment_reference: HOST_USER-1
            mssql_dsource_full_request:
              summary: Full Request
              description: The above request example is intended for an MSSql Database
                linking with all possible parameters.
              value:
                name: DSOURCE-EXAMPLE-1
                source_id: 1-SOURCE_CONFIG-1
                group_id: 1-GROUP-1
                encryption_key: KEY-1
                sync_strategy: latest_backup
                mssql_backup_uuid: UUID-1
                compression_enabled: false
                availability_group_backup_policy: primary
                source_host_user: SOURCE_HOST_USER-1
                ppt_repository: PPT_REPOSITORY-1
                ppt_host_user: PPT_HOST_USER-1
                staging_pre_script: staging_pre_script
                staging_post_script: staging_post_script
                sync_strategy_managed_type: external
                mssql_user_environment_reference: ENVIRONMENT-USER-1
                mssql_user_domain_username: DOMAIN-USER-1
                mssql_user_domain_password: DOMAIN-PASSWORD-1
                mssql_user_domain_vault: DOMAIN-VAULT-1
                mssql_user_domain_hashicorp_vault_engine: kv
                mssql_user_domain_hashicorp_vault_secret_path: mssql-env
                mssql_user_domain_hashicorp_vault_username_key: username
                mssql_user_domain_hashicorp_vault_secret_key: secret
                mssql_user_domain_azure_vault_name: azure_vault
                mssql_user_domain_azure_vault_username_key: username
                mssql_user_domain_azure_vault_secret_key: secret
                mssql_user_domain_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                mssql_database_username: db-user
                mssql_database_password: password
                delphix_managed_backup_compression_enabled: false
                delphix_managed_backup_policy: primary
                external_managed_validate_sync_mode: TRANSACTION_LOG
                external_managed_shared_backup_locations:
                - shared_backup_location/location1
                - shared_backup_location/location2
                external_netbackup_config_master_name: master_name-1
                external_netbackup_config_source_client_name: netbackup_config_source_client_name-1
                external_netbackup_config_params: netbackup_config_params-1
                external_netbackup_config_templates: external_netbackup_config_template-1
                external_commserve_host_name: commserve_host_name-1
                external_commvault_config_source_client_name: commvault_config_source_client_name-1
                external_commvault_config_staging_client_name: commvault_config_staging_client_name-1
                external_commvault_config_params: commvault_config_params-1
                external_commvault_config_templates: commvault_config_template-1
                tags:
                - key: key-1
                  value: value-1
                ops_pre_sync:
                - name: pre-sync-op1
                  command: echo 'pre-sync'
                  shell: ps
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                - name: post-sync-op
                  command: echo 'post-sync-op'
                  shell: ps
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
      required: true
    MSSQLLinkStagingPushDSourceBody:
      description: The parameters to link an MSSql dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MSSQLDSourceStagingPushLinkSourceParameters'
          examples:
            mssql_dsource_staging_push_minimum_request:
              summary: Minimal Request (Without Optionals)
              description: The above request example is intended for an MSSql staging
                push Database linking without including optional properties
              value:
                name: DSOURCE-1
                engine_id: 1
                ppt_repository: PPT_REPOSITORY-1
                ppt_host_user: PPT_HOST_USER-1
                staging_database_name: staging_database-1
            mssql_dsource_staging_push_full_request:
              summary: Full Request
              description: The above request example is intended for an MSSql staging
                push Database linking with all optional properties
              value:
                name: DSOURCE-1
                group_id: 1-GROUP-1
                description: MSSQL DSource description
                log_sync_enabled: false
                make_current_account_owner: true
                engine_id: 1
                encryption_key: KEY-1
                ppt_repository: PPT_REPOSITORY-1
                ppt_host_user: PPT_HOST_USER-1
                staging_pre_script: staging_pre_script
                staging_post_script: staging_post_script
                staging_database_name: staging_database-1
                db_state: RESTORING
                tags:
                - key: key-1
                  value: value-1
                ops_pre_sync:
                - name: pre-sync-op
                  command: echo 'pre-sync'
                  shell: ps
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                - name: post-sync-op
                  command: echo 'post-sync-op'
                  shell: ps
                  credentials_env_vars:
                  - base_var_name: base-var-1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
      required: true
    OracleAttachCdbBody:
      description: The parameters to attach an Oracle CDB.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OracleAttachCdbParameters'
      required: true
    OracleAttachDSourceBody:
      description: The parameters to attach an Oracle dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OracleAttachDSourceParameters'
      required: true
    OracleLinkDSourceBody:
      description: The parameters to link an Oracle dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OracleDSourceLinkSourceParameters'
          examples:
            oracle_dsource_minimum_request:
              summary: Minimal Request (Without Optionals)
              description: The above request example is intended for Oracle Database
                without including optional properties
              value:
                source_id: 1-SOURCE_CONFIG-1
            oracle_single_tenant_dsource_request:
              summary: Full Request
              description: |
                The above request example is intended for Oracle Database with all possible properties that can be set in request body.
              value:
                name: DSOURCE-EXAMPLE-1
                source_id: 1-SOURCE_CONFIG-1
                group_id: 1-GROUP-1
                environment_user_id: USER-1
                description: Some description for dSource
                non_sys_username: non-sys-user (Single tenant only)
                non_sys_password: non-sys-password (Single tenant only)
                non_sys_vault: vault_name_or_reference (Single tenant only)
                non_sys_hashicorp_vault_engine: kv (Single tenant only)
                non_sys_hashicorp_vault_secret_path: oracle-env (Single tenant only)
                non_sys_hashicorp_vault_username_key: username (Single tenant only)
                non_sys_hashicorp_vault_secret_key: secret (Single tenant only)
                non_sys_azure_vault_name: azure_vault (Single tenant only)
                non_sys_azure_vault_username_key: username (Single tenant only)
                non_sys_azure_vault_secret_key: secret (Single tenant only)
                non_sys_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                  (Single tenant only)
                fallback_username: oracle-user
                fallback_password: oracle-password
                fallback_vault: my-vault
                fallback_hashicorp_vault_engine: kv
                fallback_hashicorp_vault_secret_path: oracle-env
                fallback_hashicorp_vault_username_key: username
                fallback_hashicorp_vault_secret_key: secret
                fallback_azure_vault_name: azure_vault
                fallback_azure_vault_username_key: username
                fallback_azure_vault_secret_key: secret
                fallback_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                backup_level_enabled: true
                rman_channels: 2
                files_per_set: 5
                check_logical: false
                encrypted_linking_enabled: false
                compressed_linking_enabled: true
                bandwidth_limit: 0
                number_of_connections: 1
                diagnose_no_logging_faults: true
                pre_provisioning_enabled: false
                link_now: false
                force_full_backup: false
                double_sync: false
                skip_space_check: false
                do_not_resume: false
                files_for_full_backup:
                - 0
                log_sync_mode: UNDEFINED
                log_sync_interval: 5
                log_sync_enabled: false
                external_file_path: /user/file/path
                make_current_account_owner: true
                tags:
                - key: key-1
                  value: value-1
                ops_pre_sync:
                - name: pre_sync_logs
                  command: echo 'pre_sync_logs'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: env_var_1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_pre_log_sync:
                - name: pre_log_sync_logs
                  command: echo 'pre_log_sync_logs'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: env_var_1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                - name: post_sync_hook
                  command: echo 'post_sync_hook'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: env1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
      required: true
    OracleLinkStagingPushDSourceBody:
      description: The parameters to link an Oracle dSource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OracleStagingPushDSourceLinkSourceParameters'
          examples:
            oracle_dsource_staging_push_non_pdb_minimum_request:
              summary: Minimal Request Non PDB(Without Optionals)
              description: The above request example is intended for an Oracle staging
                push non PDB Database linking without including optional properties
              value:
                name: DSOURCE-1
                engine_id: 1
                container_type: NON_CDB
                environment_user_id: HOST_USER-1
                repository: ORACLE_REPO-1
                database_name: DB_NAME-1
                database_unique_name: DB_UN_NAME-1
                sid: SID-1
                mount_base: /mount1
            oracle_dsource_staging_push_non_pdb_full_request:
              summary: Full Request Non PDB
              description: The above request example is intended for a non pdb Oracle
                staging push Database linking with all optional properties
              value:
                name: DSOURCE-1
                engine_id: 1
                group_id: 1-GROUP-1
                description: Some description for dSource
                log_sync_enabled: false
                make_current_account_owner: true
                container_type: NON_CDB
                environment_user_id: HOST_USER-1
                repository: ORACLE_REPO-1
                database_name: DB_NAME-1
                database_unique_name: DB_UN_NAME-1
                sid: SID-1
                mount_base: /mount1
                template_id: 70096a7-6655-4973-8464-682c41c932da
                custom_env_variables_pairs:
                - var_name: env_var-1
                  var_value: env_value-1
                custom_env_variables_paths:
                - /root/path1 propety1
                auto_staging_restart: false
                physical_standby: false
                validate_snapshot_in_readonly: false
                tags:
                - key: key-1
                  value: value-1
                ops_pre_sync:
                - name: pre_sync_logs
                  command: echo 'pre_sync_logs'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: env_var_1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                - name: post_sync_hook
                  command: echo 'post_sync_hook'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: env1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
            oracle_dsource_staging_push_pdb_minimum_request:
              summary: Minimal Request PDB(Without Optionals)
              description: The above request example is intended for an Oracle staging
                push non PDB Database linking without including optional properties
              value:
                name: DSOURCE-1
                engine_id: 1
                database_name: DB_NAME-1
                staging_container_database_reference: CDB-1
            oracle_dsource_staging_push_pdb_full_request:
              summary: Full Request PDB
              description: The above request example is intended for a pdb Oracle
                staging push Database linking with all optional properties
              value:
                name: DSOURCE-1
                engine_id: 1
                group_id: 1-GROUP-1
                description: Some description for dSource
                log_sync_enabled: false
                make_current_account_owner: true
                database_name: PDB_NAME-1
                staging_container_database_reference: CDB_1
                custom_env_variables_pairs:
                - var_name: env_var-1
                  var_value: env_value-1
                custom_env_variables_paths: _ /root/path1 propety1
                auto_staging_restart: false
                tags:
                - key: key-1
                  value: value-1
                ops_pre_sync:
                - name: pre_sync_logs
                  command: echo 'pre_sync_logs'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: env_var_1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                - name: post_sync_hook
                  command: echo 'post_sync_hook'
                  shell: bash
                  credentials_env_vars:
                  - base_var_name: env1
                    password: password
                    vault: my-vault
                    hashicorp_vault_engine: kv
                    hashicorp_vault_secret_path: oracle-env
                    hashicorp_vault_username_key: username
                    hashicorp_vault_secret_key: secret
                    azure_vault_name: azure_vault
                    azure_vault_username_key: username
                    azure_vault_secret_key: secret
                    cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
      required: true
    ProvisionBySnapshot:
      description: The parameters to provision a VDB.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisionVDBBySnapshotParameters'
          examples:
            oracleminimum:
              summary: Oracle - Without Optionals
              description: |
                The above request example is intended for Oracle Database without including optional properties
              value:
                auto_select_repository: true
                source_data_id: dsource-name
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            oracle_single_tenant:
              summary: Oracle - Single Tenant Request
              description: |
                The above request example is intended for Oracle Single Tenant Database with all possible properties that can be set in request body.
              value:
                source_data_id: dsource-name
                engine_id: '1'
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                os_username: os-user-x
                os_password: os-password-x
                environment_id: oracle-env-name
                environment_user_id: environment_user_name
                auto_select_repository: true
                cluster_node_ids:
                - ORACLE_CLUSTER_NODE-1
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: bash
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: bash
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: bash
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: bash
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: bash
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: bash
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: bash
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: bash
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: bash
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: bash
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: bash
                vdb_restart: true
                template_id: template-1
                auxiliary_template_id: aux-template-1
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                oracle_instance_name: dbdhcp2
                unique_name: dbdhcp2
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            oracle_multitenant_db_with_existing_cdb:
              summary: Oracle - Multitenant with existing CDB
              description: |
                The above request example is intended for Oracle Multitenant Database with existing CDB.
              value:
                source_data_id: dsource-name
                engine_id: '1'
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                cdb_id: ORACLE_SINGLE_CONFIG-376
                cluster_node_ids:
                - ORACLE_CLUSTER_NODE-1
                os_username: os-user-x
                os_password: os-password-x
                environment_user_id: environment_user_name
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: bash
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: bash
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: bash
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: bash
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: bash
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: bash
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: bash
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: bash
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: bash
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: bash
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: bash
                vdb_restart: true
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            oracle_multitenant_db_with_new_vcdb:
              summary: Oracle - Multitenant with new vCDB
              description: |
                The above request example is intended for Oracle Multitenant Database with new vCDB.
              value:
                source_data_id: dsource-name
                engine_id: '1'
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                os_username: os-user-x
                os_password: os-password-x
                environment_id: oracle-env-name
                environment_user_id: environment_user_name
                auto_select_repository: true
                cluster_node_ids:
                - ORACLE_CLUSTER_NODE-1
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: bash
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: bash
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: bash
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: bash
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: bash
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: bash
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: bash
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: bash
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: bash
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: bash
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: bash
                vdb_restart: true
                template_id: template-123
                vcdb_name: VCCD_6QQ
                vcdb_database_name: VCCD_6QQ
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                oracle_instance_name: dbdhcp2
                unique_name: dbdhcp2
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            mssql:
              summary: MS-SQL Database
              description: |
                The above request example is intended for MS-SQL Database
              value:
                source_data_id: dsource-name
                engine_id: '1'
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                environment_id: mssql-env-name
                environment_user_id: environment-user-123
                auto_select_repository: true
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: ps
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: ps
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: ps
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: ps
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: ps
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: ps
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: ps
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: ps
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: ps
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: ps
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: ps
                vdb_restart: true
                template_id: template-123
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                recovery_model: FULL
                pre_script: C:\Program Files\Delphix\scripts\myscript.ps1
                post_script: C:\Program Files\Delphix\scripts\myscript.ps1
                cdc_on_provision: true
                snapshot_id: 1-mssql-snapshot-id-1
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            ase:
              summary: ASE Database
              description: |
                The above request example is intended for Sybase Database
              value:
                source_data_id: dsource-name
                engine_id: '1'
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                truncate_log_on_checkpoint: true
                environment_id: ase_env_name
                environment_user_id: environment_user_name
                auto_select_repository: true
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: bash
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: bash
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: bash
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: bash
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: bash
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: bash
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: bash
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: bash
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: bash
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: bash
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: bash
                vdb_restart: true
                mount_point: /var/mnt
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                snapshot_id: snapshot-id
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
      required: true
    ProvisionVDBGroupFromBookmark:
      description: The parameters to provision a VDB group from a Bookmark.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisionVDBGroupFromBookmarkParameters'
          examples:
            generic_minimum_request:
              summary: Minimal Request
              description: The above request example contains bare minimum properties
                needed to provision VdbGroup from a Bookmark
              value:
                name: vdb-group-1
                bookmark_id: bookmark-id-1
                provision_parameters:
                  vdb_id1:
                    auto_select_repository: true
                  vdb_id2:
                    auto_select_repository: true
                tags:
                - key: key1
                  value: configValue1
                make_current_account_owner: true
            full_request:
              summary: Full Request (all possible properties across all dataplatforms)
              description: The above request example contains all possible properties
                (across all dataplatforms)
              value:
                name: vdb-group-1
                bookmark_id: bookmark-id-1
                provision_parameters:
                  vdb_id1:
                    target_group_id: group-123
                    name: my-test-vdb
                    database_name: my-test-database
                    cdb_id: ORACLE_SINGLE_CONFIG-376
                    cluster_node_ids:
                    - ORACLE_CLUSTER_NODE-1
                    cluster_node_instances:
                    - node_reference: ORACLE_CLUSTER_NODE-1
                      instance_number: 1
                      instance_name: cluster_instance1
                    truncate_log_on_checkpoint: true
                    os_username: os-user-x
                    os_password: os-user-secret-password
                    environment_id: environment-123
                    environment_user_id: environment-user-123
                    repository_id: oracle-home-123
                    auto_select_repository: true
                    vdb_restart: true
                    template_id: template-123
                    auxiliary_template_id: aux-template-123
                    file_mapping_rules: /datafile/dbdhcp3/oradata/dbdhcp3:/data\n/u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                    oracle_instance_name: dbdhcp2
                    unique_name: dbdhcp2
                    vcdb_name: VCCD_6QQ
                    vcdb_database_name: VCCD_6QQ
                    mount_point: /var/mnt
                    open_reset_logs: true
                    snapshot_policy_id: snapshot-123
                    retention_policy_id: retention-policy-123
                    recovery_model: FULL
                    pre_script: C:\\Program Files\\Delphix\\scripts\\myscript.ps1
                    post_script: C:\\Program Files\\Delphix\\scripts\\myscript.ps1
                    cdc_on_provision: true
                    online_log_size: 4
                    online_log_groups: 2
                    archive_log: true
                    new_dbid: true
                    masked: true
                    listener_ids:
                    - listener-123
                    - listener-456
                    custom_env_vars:
                      MY_ENV_VAR1: $ORACLE_HOME
                      MY_ENV_VAR2: $CRS_HOME/after
                    custom_env_files:
                    - /export/home/env_file_1
                    - /export/home/env_file_2
                    oracle_rac_custom_env_files:
                    - node_id: ORACLE_CLUSTER_NODE-1
                      path_parameters: /export/home/env_file_1
                    oracle_rac_custom_env_vars:
                    - node_id: ORACLE_CLUSTER_NODE-1
                      name: MY_ENV_VAR1
                      value: $CRS_HOME/after
                    parentTdeKeystorePath: /foo/bar/tde
                    parent_tde_keystore_password: password
                    tde_exported_key_file_secret: secret
                    tde_key_identifier: tde-indentifier
                    target_vcdb_tde_keystore_path: /foo/cdb/tde
                    cdb_tde_keystore_password: cdb-password
                    vcdb_tde_key_identifier: vcdb-identifier
                    appdata_source_params:
                      param: value
                    additional_mount_points:
                    - shared_path: /
                      mount_path: /work
                      environment_id: environment-123
                    appdata_config_params:
                      option: value
                    config_params:
                      processes: 150
                    privileged_os_user: user-1
                    postgres_port: 65536
                    config_settings_stg:
                    - property_name: null
                      value: oYA@5GZTCxW*bO!8gqH*Xa_Z-xN.mZWu40u7xf0-
                      comment_property: true
                    vcdb_restart: true
                    mssql_failover_drive_letter: s
                tags:
                - key: key1
                  value: configValue1
                make_current_account_owner: true
    SearchBody:
      description: |
        A request body containing a filter expression. This enables searching
        for items matching arbitrarily complex conditions. The list of
        attributes which can be used in filter expressions is available
        in the x-filterable vendor extension.

        # Filter Expression Overview
        **Note: All keywords are case-insensitive**

        ## Comparison Operators
        | Operator | Description | Example |
        | --- | --- | --- |
        | CONTAINS | Substring or membership testing for string and list attributes respectively. | field3 CONTAINS 'foobar', field4 CONTAINS TRUE  |
        | IN | Tests if field is a member of a list literal. List can contain a maximum of 100 values | field2 IN ['Goku', 'Vegeta'] |
        | GE | Tests if a field is greater than or equal to a literal value | field1 GE 1.2e-2 |
        | GT | Tests if a field is greater than a literal value | field1 GT 1.2e-2 |
        | LE | Tests if a field is less than or equal to a literal value | field1 LE 9000 |
        | LT | Tests if a field is less than a literal value | field1 LT 9.02 |
        | NE | Tests if a field is not equal to a literal value | field1 NE 42 |
        | EQ | Tests if a field is equal to a literal value | field1 EQ 42 |

        ## Search Operator
        The SEARCH operator filters for items which have any filterable
        attribute that contains the input string as a substring, comparison
        is done case-insensitively. This is not restricted to attributes with
        string values. Specifically `SEARCH '12'` would match an item with an
        attribute with an integer value of `123`.

        ## Logical Operators
        Ordered by precedence.
        | Operator | Description | Example |
        | --- | --- | --- |
        | NOT | Logical NOT (Right associative) | NOT field1 LE 9000 |
        | AND | Logical AND (Left Associative) | field1 GT 9000 AND field2 EQ 'Goku' |
        | OR | Logical OR (Left Associative) | field1 GT 9000 OR field2 EQ 'Goku' |

        ## Grouping
        Parenthesis `()` can be used to override operator precedence.

        For example:
        NOT (field1 LT 1234 AND field2 CONTAINS 'foo')

        ## Literal Values
        | Literal      | Description | Examples |
        | --- | --- | --- |
        | Nil | Represents the absence of a value | nil, Nil, nIl, NIL |
        | Boolean | true/false boolean | true, false, True, False, TRUE, FALSE |
        | Number | Signed integer and floating point numbers. Also supports scientific notation. | 0, 1, -1, 1.2, 0.35, 1.2e-2, -1.2e+2 |
        | String | Single or double quoted | "foo", "bar", "foo bar", 'foo', 'bar', 'foo bar' |
        | Datetime | Formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) | 2018-04-27T18:39:26.397237+00:00 |
        | List | Comma-separated literals wrapped in square brackets | [0], [0, 1], ['foo', "bar"] |

        ## Limitations
        - A maximum of 8 unique identifiers may be used inside a filter expression.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchBody'
          examples:
            nested:
              summary: Nested Object Comparison
              description: |
                An example of a nested Object comparison testing that at least one repository has a
                version which is equal to 19.0.0.
              value:
                filter_expression: repositories CONTAINS {version eq '19.0.0'}
            relative:
              summary: Relative comparison
              description: |
                An example of a relative comparison testing that field1 has a
                value which is less than 123.
              value:
                filter_expression: field1 LE 123
            nil:
              summary: Absence of an attribute value
              description: |
                An example of using nil to test for the absence of a value for field2.
              value:
                filter_expression: field2 EQ NIL
            non-nil:
              summary: Existence of an attribute value
              description: |
                An example of using nil to test for the existence of a value for field2.
              value:
                filter_expression: field2 NE NIL
            contains:
              summary: Use of the CONTAINS operator
              description: |
                An example of using the 'CONTAINS' operator to check if
                field2 contains the string 'foo'. If field2 is string valued
                then this is checking if 'foo' is a substring of field2. If
                field2 is a list of strings then this is checking if 'foo'
                is a member of the list.
              value:
                filter_expression: field2 CONTAINS 'foo'
            in:
              summary: Use of the IN operator
              description: |
                An example of using the 'IN' operator to check if field1
                is an element of a list literal.
              value:
                filter_expression: field1 IN [1, 2, 3]
            search:
              summary: Use of the SEARCH operator
              description: |
                An example of using the 'SEARCH' operator to retrieve all elements
                for which 'foo' is a substring of a filterable attribute.
              value:
                filter_expression: SEARCH 'foo'
            parenthesis:
              summary: Overriding operator precedence
              description: |
                An example of parenthesis being used to group operators & override
                operator precedence.
              value:
                filter_expression: field1 LT 1234 AND (field2 CONTAINS 'foo' OR field3
                  CONTAINS 'bar')
      x-skip-codegen-attr: description
    UpdateEnvironment:
      description: the parameters to update an environment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentUpdateParameters'
          examples:
            unix_standalone:
              summary: Unix - Standalone Environments
              description: |
                The request example is intended for updating Unix standalone environments.
              value:
                name: oracle-environment
                ase_db_username: user-123
                ase_db_password: test
                ase_db_vault: my-vault
                ase_db_hashicorp_vault_engine: kv
                ase_db_hashicorp_vault_secret_path: ase-env
                ase_db_hashicorp_vault_username_key: username
                ase_db_hashicorp_vault_secret_key: password
                ase_db_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ase_db_use_kerberos_authentication: true
                description: Unix Oracle source host
            windows_standalone_target:
              summary: Windows - Standalone Target Environments
              description: |
                The request example is intended for updating Windows standalone target environments.
              value:
                name: win-target
                description: Windows MSSql target host
            windows_standalone_source:
              summary: Windows - Standalone Source Environments
              description: |
                The request example is intended for updating Windows standalone source environments.
              value:
                name: win-source
                staging_environment: 1-WINDOWS_HOST-1
                description: Windows MSSql source host
            unix_cluster:
              summary: Unix - Cluster Environments
              description: |
                The request example is intended for updating Unix cluster environments.
              value:
                name: rac-environment
                cluster_home: /u01/app/19.0.0.0/grid
                cluster_node_address: db1.host.com
                description: Unix rac host
            windows_cluster:
              summary: Windows - Cluster Environments
              description: |
                The request example is intended for updating Windows cluster environments.
              value:
                name: mssql-cluster
                cluster_address: db-cluster.host.com
                cluster_node_address: db1.host.com
                staging_environment: 1-WINDOWS_HOST-1
                description: Windows mssql host
    UpdateHost:
      description: the parameters to update a host.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HostUpdateParameters'
          examples:
            unix_standalone:
              summary: Unix - Standalone Hosts
              description: |
                The request example is intended for updating Unix standalone hosts.
              value:
                hostname: host.company.co
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                oracle_jdbc_keystore_password: secret-pass
                oracle_tde_keystores_root_path: /keystore/root/path
                ssh_verification_strategy:
                  name: ACCEPT_ALWAYS
            windows_standalone_target:
              summary: Windows - Standalone Hosts
              description: |
                The request example is intended for updating Windows hosts.
              value:
                hostname: host.company.co
                connector_port: 9100
                java_home: c:\Program Files\Java
                dsp_keystore_path: c:\temp\keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: target-env
                dsp_truststore_path: c:\temp\truststore.keystore
                dsp_truststore_password: truststore123
                connector_authentication_key: secret
            unix_cluster:
              summary: Unix - Cluster Environments
              description: |
                The request example is intended for updating Unix cluster hosts.
              value:
                hostname: host.company.co
                ssh_port: 22
                toolkit_path: /work
                nfs_addresses:
                - 192.168.10.2
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                oracle_jdbc_keystore_password: secret-pass
                oracle_tde_keystores_root_path: /keystore/root/path
                ssh_verification_strategy:
                  name: ACCEPT_ALWAYS
      required: true
    UpdatePostgresSource:
      description: The parameters to update a PostgreSQL source
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostgresSourceUpdateParameters'
          examples:
            postgres:
              summary: PostgreSQL source update
              description: |
                The request example is intended for updating a PostgreSQL source.
              value:
                name: postgres-source-update
    VirtualizationPolicyApplyBody:
      description: The parameters to apply virtualization policy to a target.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VirtualizationPolicyApplyParams'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
