/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the AutoTaggingConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTaggingConfig{}

// AutoTaggingConfig Configuration settings for auto tagging.
type AutoTaggingConfig struct {
	// Include dataset group names as tags for dSources, VDBs, and vCDBs (key 'dlpx-dataset-group').
	EnableVirtualizationDatasetGroups *bool `json:"enable_virtualization_dataset_groups,omitempty"`
	// Include masking environment names as tags for masking Jobs and Connectors (key 'dlpx-environment').
	EnableMaskingEnvironments *bool `json:"enable_masking_environments,omitempty"`
	// Include masking app names as tags for masking Jobs and Connectors (key 'dlpx-application').
	EnableMaskingApplications *bool `json:"enable_masking_applications,omitempty"`
	// Include the engine name as a tag on discovered objects (key 'dlpx-engine').
	EnableEngineName *bool `json:"enable_engine_name,omitempty"`
	// List of custom tags to add to discovered objects.
	CustomTags []Tag `json:"custom_tags,omitempty"`
}

// NewAutoTaggingConfig instantiates a new AutoTaggingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTaggingConfig() *AutoTaggingConfig {
	this := AutoTaggingConfig{}
	return &this
}

// NewAutoTaggingConfigWithDefaults instantiates a new AutoTaggingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTaggingConfigWithDefaults() *AutoTaggingConfig {
	this := AutoTaggingConfig{}
	return &this
}

// GetEnableVirtualizationDatasetGroups returns the EnableVirtualizationDatasetGroups field value if set, zero value otherwise.
func (o *AutoTaggingConfig) GetEnableVirtualizationDatasetGroups() bool {
	if o == nil || IsNil(o.EnableVirtualizationDatasetGroups) {
		var ret bool
		return ret
	}
	return *o.EnableVirtualizationDatasetGroups
}

// GetEnableVirtualizationDatasetGroupsOk returns a tuple with the EnableVirtualizationDatasetGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTaggingConfig) GetEnableVirtualizationDatasetGroupsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableVirtualizationDatasetGroups) {
		return nil, false
	}
	return o.EnableVirtualizationDatasetGroups, true
}

// HasEnableVirtualizationDatasetGroups returns a boolean if a field has been set.
func (o *AutoTaggingConfig) HasEnableVirtualizationDatasetGroups() bool {
	if o != nil && !IsNil(o.EnableVirtualizationDatasetGroups) {
		return true
	}

	return false
}

// SetEnableVirtualizationDatasetGroups gets a reference to the given bool and assigns it to the EnableVirtualizationDatasetGroups field.
func (o *AutoTaggingConfig) SetEnableVirtualizationDatasetGroups(v bool) {
	o.EnableVirtualizationDatasetGroups = &v
}

// GetEnableMaskingEnvironments returns the EnableMaskingEnvironments field value if set, zero value otherwise.
func (o *AutoTaggingConfig) GetEnableMaskingEnvironments() bool {
	if o == nil || IsNil(o.EnableMaskingEnvironments) {
		var ret bool
		return ret
	}
	return *o.EnableMaskingEnvironments
}

// GetEnableMaskingEnvironmentsOk returns a tuple with the EnableMaskingEnvironments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTaggingConfig) GetEnableMaskingEnvironmentsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMaskingEnvironments) {
		return nil, false
	}
	return o.EnableMaskingEnvironments, true
}

// HasEnableMaskingEnvironments returns a boolean if a field has been set.
func (o *AutoTaggingConfig) HasEnableMaskingEnvironments() bool {
	if o != nil && !IsNil(o.EnableMaskingEnvironments) {
		return true
	}

	return false
}

// SetEnableMaskingEnvironments gets a reference to the given bool and assigns it to the EnableMaskingEnvironments field.
func (o *AutoTaggingConfig) SetEnableMaskingEnvironments(v bool) {
	o.EnableMaskingEnvironments = &v
}

// GetEnableMaskingApplications returns the EnableMaskingApplications field value if set, zero value otherwise.
func (o *AutoTaggingConfig) GetEnableMaskingApplications() bool {
	if o == nil || IsNil(o.EnableMaskingApplications) {
		var ret bool
		return ret
	}
	return *o.EnableMaskingApplications
}

// GetEnableMaskingApplicationsOk returns a tuple with the EnableMaskingApplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTaggingConfig) GetEnableMaskingApplicationsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMaskingApplications) {
		return nil, false
	}
	return o.EnableMaskingApplications, true
}

// HasEnableMaskingApplications returns a boolean if a field has been set.
func (o *AutoTaggingConfig) HasEnableMaskingApplications() bool {
	if o != nil && !IsNil(o.EnableMaskingApplications) {
		return true
	}

	return false
}

// SetEnableMaskingApplications gets a reference to the given bool and assigns it to the EnableMaskingApplications field.
func (o *AutoTaggingConfig) SetEnableMaskingApplications(v bool) {
	o.EnableMaskingApplications = &v
}

// GetEnableEngineName returns the EnableEngineName field value if set, zero value otherwise.
func (o *AutoTaggingConfig) GetEnableEngineName() bool {
	if o == nil || IsNil(o.EnableEngineName) {
		var ret bool
		return ret
	}
	return *o.EnableEngineName
}

// GetEnableEngineNameOk returns a tuple with the EnableEngineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTaggingConfig) GetEnableEngineNameOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableEngineName) {
		return nil, false
	}
	return o.EnableEngineName, true
}

// HasEnableEngineName returns a boolean if a field has been set.
func (o *AutoTaggingConfig) HasEnableEngineName() bool {
	if o != nil && !IsNil(o.EnableEngineName) {
		return true
	}

	return false
}

// SetEnableEngineName gets a reference to the given bool and assigns it to the EnableEngineName field.
func (o *AutoTaggingConfig) SetEnableEngineName(v bool) {
	o.EnableEngineName = &v
}

// GetCustomTags returns the CustomTags field value if set, zero value otherwise.
func (o *AutoTaggingConfig) GetCustomTags() []Tag {
	if o == nil || IsNil(o.CustomTags) {
		var ret []Tag
		return ret
	}
	return o.CustomTags
}

// GetCustomTagsOk returns a tuple with the CustomTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTaggingConfig) GetCustomTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.CustomTags) {
		return nil, false
	}
	return o.CustomTags, true
}

// HasCustomTags returns a boolean if a field has been set.
func (o *AutoTaggingConfig) HasCustomTags() bool {
	if o != nil && !IsNil(o.CustomTags) {
		return true
	}

	return false
}

// SetCustomTags gets a reference to the given []Tag and assigns it to the CustomTags field.
func (o *AutoTaggingConfig) SetCustomTags(v []Tag) {
	o.CustomTags = v
}

func (o AutoTaggingConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTaggingConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableVirtualizationDatasetGroups) {
		toSerialize["enable_virtualization_dataset_groups"] = o.EnableVirtualizationDatasetGroups
	}
	if !IsNil(o.EnableMaskingEnvironments) {
		toSerialize["enable_masking_environments"] = o.EnableMaskingEnvironments
	}
	if !IsNil(o.EnableMaskingApplications) {
		toSerialize["enable_masking_applications"] = o.EnableMaskingApplications
	}
	if !IsNil(o.EnableEngineName) {
		toSerialize["enable_engine_name"] = o.EnableEngineName
	}
	if !IsNil(o.CustomTags) {
		toSerialize["custom_tags"] = o.CustomTags
	}
	return toSerialize, nil
}

type NullableAutoTaggingConfig struct {
	value *AutoTaggingConfig
	isSet bool
}

func (v NullableAutoTaggingConfig) Get() *AutoTaggingConfig {
	return v.value
}

func (v *NullableAutoTaggingConfig) Set(val *AutoTaggingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTaggingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTaggingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTaggingConfig(val *AutoTaggingConfig) *NullableAutoTaggingConfig {
	return &NullableAutoTaggingConfig{value: val, isSet: true}
}

func (v NullableAutoTaggingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTaggingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


