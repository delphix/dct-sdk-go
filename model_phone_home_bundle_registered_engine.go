/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PhoneHomeBundleRegisteredEngine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhoneHomeBundleRegisteredEngine{}

// PhoneHomeBundleRegisteredEngine Identification data for a Delphix Engine registered with this instance of Data Control Tower.
type PhoneHomeBundleRegisteredEngine struct {
	// A programmatically-generated and auto-incrementing ID for the registered Delphix Engine.
	Id int64 `json:"id"`
	// The UUID of the registered Delphix Engine.
	Uuid NullableString `json:"uuid"`
	// The type of registered Delphix Engine.
	Type NullableString `json:"type"`
	// The running version registered Delphix Engine.
	Version NullableString `json:"version"`
}

type _PhoneHomeBundleRegisteredEngine PhoneHomeBundleRegisteredEngine

// NewPhoneHomeBundleRegisteredEngine instantiates a new PhoneHomeBundleRegisteredEngine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneHomeBundleRegisteredEngine(id int64, uuid NullableString, type_ NullableString, version NullableString) *PhoneHomeBundleRegisteredEngine {
	this := PhoneHomeBundleRegisteredEngine{}
	this.Id = id
	this.Uuid = uuid
	this.Type = type_
	this.Version = version
	return &this
}

// NewPhoneHomeBundleRegisteredEngineWithDefaults instantiates a new PhoneHomeBundleRegisteredEngine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneHomeBundleRegisteredEngineWithDefaults() *PhoneHomeBundleRegisteredEngine {
	this := PhoneHomeBundleRegisteredEngine{}
	return &this
}

// GetId returns the Id field value
func (o *PhoneHomeBundleRegisteredEngine) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PhoneHomeBundleRegisteredEngine) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PhoneHomeBundleRegisteredEngine) SetId(v int64) {
	o.Id = v
}

// GetUuid returns the Uuid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PhoneHomeBundleRegisteredEngine) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}

	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneHomeBundleRegisteredEngine) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// SetUuid sets field value
func (o *PhoneHomeBundleRegisteredEngine) SetUuid(v string) {
	o.Uuid.Set(&v)
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PhoneHomeBundleRegisteredEngine) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}

	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneHomeBundleRegisteredEngine) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// SetType sets field value
func (o *PhoneHomeBundleRegisteredEngine) SetType(v string) {
	o.Type.Set(&v)
}

// GetVersion returns the Version field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PhoneHomeBundleRegisteredEngine) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}

	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhoneHomeBundleRegisteredEngine) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// SetVersion sets field value
func (o *PhoneHomeBundleRegisteredEngine) SetVersion(v string) {
	o.Version.Set(&v)
}

func (o PhoneHomeBundleRegisteredEngine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhoneHomeBundleRegisteredEngine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["uuid"] = o.Uuid.Get()
	toSerialize["type"] = o.Type.Get()
	toSerialize["version"] = o.Version.Get()
	return toSerialize, nil
}

func (o *PhoneHomeBundleRegisteredEngine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"uuid",
		"type",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPhoneHomeBundleRegisteredEngine := _PhoneHomeBundleRegisteredEngine{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPhoneHomeBundleRegisteredEngine)

	if err != nil {
		return err
	}

	*o = PhoneHomeBundleRegisteredEngine(varPhoneHomeBundleRegisteredEngine)

	return err
}

type NullablePhoneHomeBundleRegisteredEngine struct {
	value *PhoneHomeBundleRegisteredEngine
	isSet bool
}

func (v NullablePhoneHomeBundleRegisteredEngine) Get() *PhoneHomeBundleRegisteredEngine {
	return v.value
}

func (v *NullablePhoneHomeBundleRegisteredEngine) Set(val *PhoneHomeBundleRegisteredEngine) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneHomeBundleRegisteredEngine) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneHomeBundleRegisteredEngine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneHomeBundleRegisteredEngine(val *PhoneHomeBundleRegisteredEngine) *NullablePhoneHomeBundleRegisteredEngine {
	return &NullablePhoneHomeBundleRegisteredEngine{value: val, isSet: true}
}

func (v NullablePhoneHomeBundleRegisteredEngine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneHomeBundleRegisteredEngine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


