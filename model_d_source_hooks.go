/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the DSourceHooks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DSourceHooks{}

// DSourceHooks DSource operation hooks.
type DSourceHooks struct {
	// The commands to execute before syncing with external data.
	OpsPreSync []Hook `json:"ops_pre_sync,omitempty"`
	// The commands to execute after syncing with external data and before running the LogSync.
	OpsPreLogSync []Hook `json:"ops_pre_log_sync,omitempty"`
	// The commands to execute after syncing a linked source.
	OpsPostSync []Hook `json:"ops_post_sync,omitempty"`
	// The commands to execute on the staging source before performing a validated sync.
	PreValidatedSync []Hook `json:"pre_validated_sync,omitempty"`
	// The commands to execute on the staging source after performing a validated sync.
	PostValidatedSync []Hook `json:"post_validated_sync,omitempty"`
}

// NewDSourceHooks instantiates a new DSourceHooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDSourceHooks() *DSourceHooks {
	this := DSourceHooks{}
	return &this
}

// NewDSourceHooksWithDefaults instantiates a new DSourceHooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDSourceHooksWithDefaults() *DSourceHooks {
	this := DSourceHooks{}
	return &this
}

// GetOpsPreSync returns the OpsPreSync field value if set, zero value otherwise.
func (o *DSourceHooks) GetOpsPreSync() []Hook {
	if o == nil || IsNil(o.OpsPreSync) {
		var ret []Hook
		return ret
	}
	return o.OpsPreSync
}

// GetOpsPreSyncOk returns a tuple with the OpsPreSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSourceHooks) GetOpsPreSyncOk() ([]Hook, bool) {
	if o == nil || IsNil(o.OpsPreSync) {
		return nil, false
	}
	return o.OpsPreSync, true
}

// HasOpsPreSync returns a boolean if a field has been set.
func (o *DSourceHooks) HasOpsPreSync() bool {
	if o != nil && !IsNil(o.OpsPreSync) {
		return true
	}

	return false
}

// SetOpsPreSync gets a reference to the given []Hook and assigns it to the OpsPreSync field.
func (o *DSourceHooks) SetOpsPreSync(v []Hook) {
	o.OpsPreSync = v
}

// GetOpsPreLogSync returns the OpsPreLogSync field value if set, zero value otherwise.
func (o *DSourceHooks) GetOpsPreLogSync() []Hook {
	if o == nil || IsNil(o.OpsPreLogSync) {
		var ret []Hook
		return ret
	}
	return o.OpsPreLogSync
}

// GetOpsPreLogSyncOk returns a tuple with the OpsPreLogSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSourceHooks) GetOpsPreLogSyncOk() ([]Hook, bool) {
	if o == nil || IsNil(o.OpsPreLogSync) {
		return nil, false
	}
	return o.OpsPreLogSync, true
}

// HasOpsPreLogSync returns a boolean if a field has been set.
func (o *DSourceHooks) HasOpsPreLogSync() bool {
	if o != nil && !IsNil(o.OpsPreLogSync) {
		return true
	}

	return false
}

// SetOpsPreLogSync gets a reference to the given []Hook and assigns it to the OpsPreLogSync field.
func (o *DSourceHooks) SetOpsPreLogSync(v []Hook) {
	o.OpsPreLogSync = v
}

// GetOpsPostSync returns the OpsPostSync field value if set, zero value otherwise.
func (o *DSourceHooks) GetOpsPostSync() []Hook {
	if o == nil || IsNil(o.OpsPostSync) {
		var ret []Hook
		return ret
	}
	return o.OpsPostSync
}

// GetOpsPostSyncOk returns a tuple with the OpsPostSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSourceHooks) GetOpsPostSyncOk() ([]Hook, bool) {
	if o == nil || IsNil(o.OpsPostSync) {
		return nil, false
	}
	return o.OpsPostSync, true
}

// HasOpsPostSync returns a boolean if a field has been set.
func (o *DSourceHooks) HasOpsPostSync() bool {
	if o != nil && !IsNil(o.OpsPostSync) {
		return true
	}

	return false
}

// SetOpsPostSync gets a reference to the given []Hook and assigns it to the OpsPostSync field.
func (o *DSourceHooks) SetOpsPostSync(v []Hook) {
	o.OpsPostSync = v
}

// GetPreValidatedSync returns the PreValidatedSync field value if set, zero value otherwise.
func (o *DSourceHooks) GetPreValidatedSync() []Hook {
	if o == nil || IsNil(o.PreValidatedSync) {
		var ret []Hook
		return ret
	}
	return o.PreValidatedSync
}

// GetPreValidatedSyncOk returns a tuple with the PreValidatedSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSourceHooks) GetPreValidatedSyncOk() ([]Hook, bool) {
	if o == nil || IsNil(o.PreValidatedSync) {
		return nil, false
	}
	return o.PreValidatedSync, true
}

// HasPreValidatedSync returns a boolean if a field has been set.
func (o *DSourceHooks) HasPreValidatedSync() bool {
	if o != nil && !IsNil(o.PreValidatedSync) {
		return true
	}

	return false
}

// SetPreValidatedSync gets a reference to the given []Hook and assigns it to the PreValidatedSync field.
func (o *DSourceHooks) SetPreValidatedSync(v []Hook) {
	o.PreValidatedSync = v
}

// GetPostValidatedSync returns the PostValidatedSync field value if set, zero value otherwise.
func (o *DSourceHooks) GetPostValidatedSync() []Hook {
	if o == nil || IsNil(o.PostValidatedSync) {
		var ret []Hook
		return ret
	}
	return o.PostValidatedSync
}

// GetPostValidatedSyncOk returns a tuple with the PostValidatedSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DSourceHooks) GetPostValidatedSyncOk() ([]Hook, bool) {
	if o == nil || IsNil(o.PostValidatedSync) {
		return nil, false
	}
	return o.PostValidatedSync, true
}

// HasPostValidatedSync returns a boolean if a field has been set.
func (o *DSourceHooks) HasPostValidatedSync() bool {
	if o != nil && !IsNil(o.PostValidatedSync) {
		return true
	}

	return false
}

// SetPostValidatedSync gets a reference to the given []Hook and assigns it to the PostValidatedSync field.
func (o *DSourceHooks) SetPostValidatedSync(v []Hook) {
	o.PostValidatedSync = v
}

func (o DSourceHooks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DSourceHooks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpsPreSync) {
		toSerialize["ops_pre_sync"] = o.OpsPreSync
	}
	if !IsNil(o.OpsPreLogSync) {
		toSerialize["ops_pre_log_sync"] = o.OpsPreLogSync
	}
	if !IsNil(o.OpsPostSync) {
		toSerialize["ops_post_sync"] = o.OpsPostSync
	}
	if !IsNil(o.PreValidatedSync) {
		toSerialize["pre_validated_sync"] = o.PreValidatedSync
	}
	if !IsNil(o.PostValidatedSync) {
		toSerialize["post_validated_sync"] = o.PostValidatedSync
	}
	return toSerialize, nil
}

type NullableDSourceHooks struct {
	value *DSourceHooks
	isSet bool
}

func (v NullableDSourceHooks) Get() *DSourceHooks {
	return v.value
}

func (v *NullableDSourceHooks) Set(val *DSourceHooks) {
	v.value = val
	v.isSet = true
}

func (v NullableDSourceHooks) IsSet() bool {
	return v.isSet
}

func (v *NullableDSourceHooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDSourceHooks(val *DSourceHooks) *NullableDSourceHooks {
	return &NullableDSourceHooks{value: val, isSet: true}
}

func (v NullableDSourceHooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDSourceHooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


