/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ValidateJavaParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateJavaParameters{}

// ValidateJavaParameters Parameters to validate java path for the remote host.
type ValidateJavaParameters struct {
	// Path pointing to java home on the remote machine.
	JavaHome string `json:"java_home"`
	// SSH port of the remote host machine that will be used to establish SSH connection.
	Port NullableInt32 `json:"port"`
	// The username of the user that will be used to connect to the remote host machine.
	Username *string `json:"username,omitempty"`
	// The password of the user that will be used to connect to the remote host machine.
	Password *string `json:"password,omitempty"`
	// Hostname of the remote host machine that will be used to establish connection.
	HostName string `json:"host_name"`
	// Whether to use public key authentication.
	UseEnginePublicKey *bool `json:"use_engine_public_key,omitempty"`
	// The DCT id or name of the vault from which to read the host credentials.
	VaultId *string `json:"vault_id,omitempty"`
	// Vault engine name where the credential is stored.
	HashicorpVaultEngine *string `json:"hashicorp_vault_engine,omitempty"`
	// Path in the vault engine where the credential is stored.
	HashicorpVaultSecretPath *string `json:"hashicorp_vault_secret_path,omitempty"`
	// Key for the username in the key-value store.
	HashicorpVaultUsernameKey *string `json:"hashicorp_vault_username_key,omitempty"`
	// Key for the password in the key-value store.
	HashicorpVaultSecretKey *string `json:"hashicorp_vault_secret_key,omitempty"`
	// Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).
	AzureVaultName *string `json:"azure_vault_name,omitempty"`
	// Azure vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
	AzureVaultUsernameKey *string `json:"azure_vault_username_key,omitempty"`
	// Azure vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
	AzureVaultSecretKey *string `json:"azure_vault_secret_key,omitempty"`
	// Query to find a credential in the CyberArk vault.
	CyberarkVaultQueryString *string `json:"cyberark_vault_query_string,omitempty"`
	// Whether to use kerberos authentication.
	UseKerberosAuthentication *bool `json:"use_kerberos_authentication,omitempty"`
}

type _ValidateJavaParameters ValidateJavaParameters

// NewValidateJavaParameters instantiates a new ValidateJavaParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateJavaParameters(javaHome string, port NullableInt32, hostName string) *ValidateJavaParameters {
	this := ValidateJavaParameters{}
	this.JavaHome = javaHome
	this.Port = port
	this.HostName = hostName
	return &this
}

// NewValidateJavaParametersWithDefaults instantiates a new ValidateJavaParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateJavaParametersWithDefaults() *ValidateJavaParameters {
	this := ValidateJavaParameters{}
	return &this
}

// GetJavaHome returns the JavaHome field value
func (o *ValidateJavaParameters) GetJavaHome() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JavaHome
}

// GetJavaHomeOk returns a tuple with the JavaHome field value
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetJavaHomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JavaHome, true
}

// SetJavaHome sets field value
func (o *ValidateJavaParameters) SetJavaHome(v string) {
	o.JavaHome = v
}

// GetPort returns the Port field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ValidateJavaParameters) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ValidateJavaParameters) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// SetPort sets field value
func (o *ValidateJavaParameters) SetPort(v int32) {
	o.Port.Set(&v)
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ValidateJavaParameters) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ValidateJavaParameters) SetPassword(v string) {
	o.Password = &v
}

// GetHostName returns the HostName field value
func (o *ValidateJavaParameters) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetHostNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *ValidateJavaParameters) SetHostName(v string) {
	o.HostName = v
}

// GetUseEnginePublicKey returns the UseEnginePublicKey field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetUseEnginePublicKey() bool {
	if o == nil || IsNil(o.UseEnginePublicKey) {
		var ret bool
		return ret
	}
	return *o.UseEnginePublicKey
}

// GetUseEnginePublicKeyOk returns a tuple with the UseEnginePublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetUseEnginePublicKeyOk() (*bool, bool) {
	if o == nil || IsNil(o.UseEnginePublicKey) {
		return nil, false
	}
	return o.UseEnginePublicKey, true
}

// HasUseEnginePublicKey returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasUseEnginePublicKey() bool {
	if o != nil && !IsNil(o.UseEnginePublicKey) {
		return true
	}

	return false
}

// SetUseEnginePublicKey gets a reference to the given bool and assigns it to the UseEnginePublicKey field.
func (o *ValidateJavaParameters) SetUseEnginePublicKey(v bool) {
	o.UseEnginePublicKey = &v
}

// GetVaultId returns the VaultId field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetVaultId() string {
	if o == nil || IsNil(o.VaultId) {
		var ret string
		return ret
	}
	return *o.VaultId
}

// GetVaultIdOk returns a tuple with the VaultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetVaultIdOk() (*string, bool) {
	if o == nil || IsNil(o.VaultId) {
		return nil, false
	}
	return o.VaultId, true
}

// HasVaultId returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasVaultId() bool {
	if o != nil && !IsNil(o.VaultId) {
		return true
	}

	return false
}

// SetVaultId gets a reference to the given string and assigns it to the VaultId field.
func (o *ValidateJavaParameters) SetVaultId(v string) {
	o.VaultId = &v
}

// GetHashicorpVaultEngine returns the HashicorpVaultEngine field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetHashicorpVaultEngine() string {
	if o == nil || IsNil(o.HashicorpVaultEngine) {
		var ret string
		return ret
	}
	return *o.HashicorpVaultEngine
}

// GetHashicorpVaultEngineOk returns a tuple with the HashicorpVaultEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetHashicorpVaultEngineOk() (*string, bool) {
	if o == nil || IsNil(o.HashicorpVaultEngine) {
		return nil, false
	}
	return o.HashicorpVaultEngine, true
}

// HasHashicorpVaultEngine returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasHashicorpVaultEngine() bool {
	if o != nil && !IsNil(o.HashicorpVaultEngine) {
		return true
	}

	return false
}

// SetHashicorpVaultEngine gets a reference to the given string and assigns it to the HashicorpVaultEngine field.
func (o *ValidateJavaParameters) SetHashicorpVaultEngine(v string) {
	o.HashicorpVaultEngine = &v
}

// GetHashicorpVaultSecretPath returns the HashicorpVaultSecretPath field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetHashicorpVaultSecretPath() string {
	if o == nil || IsNil(o.HashicorpVaultSecretPath) {
		var ret string
		return ret
	}
	return *o.HashicorpVaultSecretPath
}

// GetHashicorpVaultSecretPathOk returns a tuple with the HashicorpVaultSecretPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetHashicorpVaultSecretPathOk() (*string, bool) {
	if o == nil || IsNil(o.HashicorpVaultSecretPath) {
		return nil, false
	}
	return o.HashicorpVaultSecretPath, true
}

// HasHashicorpVaultSecretPath returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasHashicorpVaultSecretPath() bool {
	if o != nil && !IsNil(o.HashicorpVaultSecretPath) {
		return true
	}

	return false
}

// SetHashicorpVaultSecretPath gets a reference to the given string and assigns it to the HashicorpVaultSecretPath field.
func (o *ValidateJavaParameters) SetHashicorpVaultSecretPath(v string) {
	o.HashicorpVaultSecretPath = &v
}

// GetHashicorpVaultUsernameKey returns the HashicorpVaultUsernameKey field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetHashicorpVaultUsernameKey() string {
	if o == nil || IsNil(o.HashicorpVaultUsernameKey) {
		var ret string
		return ret
	}
	return *o.HashicorpVaultUsernameKey
}

// GetHashicorpVaultUsernameKeyOk returns a tuple with the HashicorpVaultUsernameKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetHashicorpVaultUsernameKeyOk() (*string, bool) {
	if o == nil || IsNil(o.HashicorpVaultUsernameKey) {
		return nil, false
	}
	return o.HashicorpVaultUsernameKey, true
}

// HasHashicorpVaultUsernameKey returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasHashicorpVaultUsernameKey() bool {
	if o != nil && !IsNil(o.HashicorpVaultUsernameKey) {
		return true
	}

	return false
}

// SetHashicorpVaultUsernameKey gets a reference to the given string and assigns it to the HashicorpVaultUsernameKey field.
func (o *ValidateJavaParameters) SetHashicorpVaultUsernameKey(v string) {
	o.HashicorpVaultUsernameKey = &v
}

// GetHashicorpVaultSecretKey returns the HashicorpVaultSecretKey field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetHashicorpVaultSecretKey() string {
	if o == nil || IsNil(o.HashicorpVaultSecretKey) {
		var ret string
		return ret
	}
	return *o.HashicorpVaultSecretKey
}

// GetHashicorpVaultSecretKeyOk returns a tuple with the HashicorpVaultSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetHashicorpVaultSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.HashicorpVaultSecretKey) {
		return nil, false
	}
	return o.HashicorpVaultSecretKey, true
}

// HasHashicorpVaultSecretKey returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasHashicorpVaultSecretKey() bool {
	if o != nil && !IsNil(o.HashicorpVaultSecretKey) {
		return true
	}

	return false
}

// SetHashicorpVaultSecretKey gets a reference to the given string and assigns it to the HashicorpVaultSecretKey field.
func (o *ValidateJavaParameters) SetHashicorpVaultSecretKey(v string) {
	o.HashicorpVaultSecretKey = &v
}

// GetAzureVaultName returns the AzureVaultName field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetAzureVaultName() string {
	if o == nil || IsNil(o.AzureVaultName) {
		var ret string
		return ret
	}
	return *o.AzureVaultName
}

// GetAzureVaultNameOk returns a tuple with the AzureVaultName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetAzureVaultNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVaultName) {
		return nil, false
	}
	return o.AzureVaultName, true
}

// HasAzureVaultName returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasAzureVaultName() bool {
	if o != nil && !IsNil(o.AzureVaultName) {
		return true
	}

	return false
}

// SetAzureVaultName gets a reference to the given string and assigns it to the AzureVaultName field.
func (o *ValidateJavaParameters) SetAzureVaultName(v string) {
	o.AzureVaultName = &v
}

// GetAzureVaultUsernameKey returns the AzureVaultUsernameKey field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetAzureVaultUsernameKey() string {
	if o == nil || IsNil(o.AzureVaultUsernameKey) {
		var ret string
		return ret
	}
	return *o.AzureVaultUsernameKey
}

// GetAzureVaultUsernameKeyOk returns a tuple with the AzureVaultUsernameKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetAzureVaultUsernameKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVaultUsernameKey) {
		return nil, false
	}
	return o.AzureVaultUsernameKey, true
}

// HasAzureVaultUsernameKey returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasAzureVaultUsernameKey() bool {
	if o != nil && !IsNil(o.AzureVaultUsernameKey) {
		return true
	}

	return false
}

// SetAzureVaultUsernameKey gets a reference to the given string and assigns it to the AzureVaultUsernameKey field.
func (o *ValidateJavaParameters) SetAzureVaultUsernameKey(v string) {
	o.AzureVaultUsernameKey = &v
}

// GetAzureVaultSecretKey returns the AzureVaultSecretKey field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetAzureVaultSecretKey() string {
	if o == nil || IsNil(o.AzureVaultSecretKey) {
		var ret string
		return ret
	}
	return *o.AzureVaultSecretKey
}

// GetAzureVaultSecretKeyOk returns a tuple with the AzureVaultSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetAzureVaultSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVaultSecretKey) {
		return nil, false
	}
	return o.AzureVaultSecretKey, true
}

// HasAzureVaultSecretKey returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasAzureVaultSecretKey() bool {
	if o != nil && !IsNil(o.AzureVaultSecretKey) {
		return true
	}

	return false
}

// SetAzureVaultSecretKey gets a reference to the given string and assigns it to the AzureVaultSecretKey field.
func (o *ValidateJavaParameters) SetAzureVaultSecretKey(v string) {
	o.AzureVaultSecretKey = &v
}

// GetCyberarkVaultQueryString returns the CyberarkVaultQueryString field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetCyberarkVaultQueryString() string {
	if o == nil || IsNil(o.CyberarkVaultQueryString) {
		var ret string
		return ret
	}
	return *o.CyberarkVaultQueryString
}

// GetCyberarkVaultQueryStringOk returns a tuple with the CyberarkVaultQueryString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetCyberarkVaultQueryStringOk() (*string, bool) {
	if o == nil || IsNil(o.CyberarkVaultQueryString) {
		return nil, false
	}
	return o.CyberarkVaultQueryString, true
}

// HasCyberarkVaultQueryString returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasCyberarkVaultQueryString() bool {
	if o != nil && !IsNil(o.CyberarkVaultQueryString) {
		return true
	}

	return false
}

// SetCyberarkVaultQueryString gets a reference to the given string and assigns it to the CyberarkVaultQueryString field.
func (o *ValidateJavaParameters) SetCyberarkVaultQueryString(v string) {
	o.CyberarkVaultQueryString = &v
}

// GetUseKerberosAuthentication returns the UseKerberosAuthentication field value if set, zero value otherwise.
func (o *ValidateJavaParameters) GetUseKerberosAuthentication() bool {
	if o == nil || IsNil(o.UseKerberosAuthentication) {
		var ret bool
		return ret
	}
	return *o.UseKerberosAuthentication
}

// GetUseKerberosAuthenticationOk returns a tuple with the UseKerberosAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateJavaParameters) GetUseKerberosAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.UseKerberosAuthentication) {
		return nil, false
	}
	return o.UseKerberosAuthentication, true
}

// HasUseKerberosAuthentication returns a boolean if a field has been set.
func (o *ValidateJavaParameters) HasUseKerberosAuthentication() bool {
	if o != nil && !IsNil(o.UseKerberosAuthentication) {
		return true
	}

	return false
}

// SetUseKerberosAuthentication gets a reference to the given bool and assigns it to the UseKerberosAuthentication field.
func (o *ValidateJavaParameters) SetUseKerberosAuthentication(v bool) {
	o.UseKerberosAuthentication = &v
}

func (o ValidateJavaParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateJavaParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["java_home"] = o.JavaHome
	toSerialize["port"] = o.Port.Get()
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["host_name"] = o.HostName
	if !IsNil(o.UseEnginePublicKey) {
		toSerialize["use_engine_public_key"] = o.UseEnginePublicKey
	}
	if !IsNil(o.VaultId) {
		toSerialize["vault_id"] = o.VaultId
	}
	if !IsNil(o.HashicorpVaultEngine) {
		toSerialize["hashicorp_vault_engine"] = o.HashicorpVaultEngine
	}
	if !IsNil(o.HashicorpVaultSecretPath) {
		toSerialize["hashicorp_vault_secret_path"] = o.HashicorpVaultSecretPath
	}
	if !IsNil(o.HashicorpVaultUsernameKey) {
		toSerialize["hashicorp_vault_username_key"] = o.HashicorpVaultUsernameKey
	}
	if !IsNil(o.HashicorpVaultSecretKey) {
		toSerialize["hashicorp_vault_secret_key"] = o.HashicorpVaultSecretKey
	}
	if !IsNil(o.AzureVaultName) {
		toSerialize["azure_vault_name"] = o.AzureVaultName
	}
	if !IsNil(o.AzureVaultUsernameKey) {
		toSerialize["azure_vault_username_key"] = o.AzureVaultUsernameKey
	}
	if !IsNil(o.AzureVaultSecretKey) {
		toSerialize["azure_vault_secret_key"] = o.AzureVaultSecretKey
	}
	if !IsNil(o.CyberarkVaultQueryString) {
		toSerialize["cyberark_vault_query_string"] = o.CyberarkVaultQueryString
	}
	if !IsNil(o.UseKerberosAuthentication) {
		toSerialize["use_kerberos_authentication"] = o.UseKerberosAuthentication
	}
	return toSerialize, nil
}

func (o *ValidateJavaParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"java_home",
		"port",
		"host_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varValidateJavaParameters := _ValidateJavaParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varValidateJavaParameters)

	if err != nil {
		return err
	}

	*o = ValidateJavaParameters(varValidateJavaParameters)

	return err
}

type NullableValidateJavaParameters struct {
	value *ValidateJavaParameters
	isSet bool
}

func (v NullableValidateJavaParameters) Get() *ValidateJavaParameters {
	return v.value
}

func (v *NullableValidateJavaParameters) Set(val *ValidateJavaParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateJavaParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateJavaParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateJavaParameters(val *ValidateJavaParameters) *NullableValidateJavaParameters {
	return &NullableValidateJavaParameters{value: val, isSet: true}
}

func (v NullableValidateJavaParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateJavaParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


