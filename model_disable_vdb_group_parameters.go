/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the DisableVDBGroupParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisableVDBGroupParameters{}

// DisableVDBGroupParameters Parameters to disable a VDB Group.
type DisableVDBGroupParameters struct {
	VdbDisableParamMappings []VDBDisableParametersMapping `json:"vdb_disable_param_mappings,omitempty"`
}

// NewDisableVDBGroupParameters instantiates a new DisableVDBGroupParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisableVDBGroupParameters() *DisableVDBGroupParameters {
	this := DisableVDBGroupParameters{}
	return &this
}

// NewDisableVDBGroupParametersWithDefaults instantiates a new DisableVDBGroupParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisableVDBGroupParametersWithDefaults() *DisableVDBGroupParameters {
	this := DisableVDBGroupParameters{}
	return &this
}

// GetVdbDisableParamMappings returns the VdbDisableParamMappings field value if set, zero value otherwise.
func (o *DisableVDBGroupParameters) GetVdbDisableParamMappings() []VDBDisableParametersMapping {
	if o == nil || IsNil(o.VdbDisableParamMappings) {
		var ret []VDBDisableParametersMapping
		return ret
	}
	return o.VdbDisableParamMappings
}

// GetVdbDisableParamMappingsOk returns a tuple with the VdbDisableParamMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisableVDBGroupParameters) GetVdbDisableParamMappingsOk() ([]VDBDisableParametersMapping, bool) {
	if o == nil || IsNil(o.VdbDisableParamMappings) {
		return nil, false
	}
	return o.VdbDisableParamMappings, true
}

// HasVdbDisableParamMappings returns a boolean if a field has been set.
func (o *DisableVDBGroupParameters) HasVdbDisableParamMappings() bool {
	if o != nil && !IsNil(o.VdbDisableParamMappings) {
		return true
	}

	return false
}

// SetVdbDisableParamMappings gets a reference to the given []VDBDisableParametersMapping and assigns it to the VdbDisableParamMappings field.
func (o *DisableVDBGroupParameters) SetVdbDisableParamMappings(v []VDBDisableParametersMapping) {
	o.VdbDisableParamMappings = v
}

func (o DisableVDBGroupParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisableVDBGroupParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VdbDisableParamMappings) {
		toSerialize["vdb_disable_param_mappings"] = o.VdbDisableParamMappings
	}
	return toSerialize, nil
}

type NullableDisableVDBGroupParameters struct {
	value *DisableVDBGroupParameters
	isSet bool
}

func (v NullableDisableVDBGroupParameters) Get() *DisableVDBGroupParameters {
	return v.value
}

func (v *NullableDisableVDBGroupParameters) Set(val *DisableVDBGroupParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableDisableVDBGroupParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableDisableVDBGroupParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisableVDBGroupParameters(val *DisableVDBGroupParameters) *NullableDisableVDBGroupParameters {
	return &NullableDisableVDBGroupParameters{value: val, isSet: true}
}

func (v NullableDisableVDBGroupParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisableVDBGroupParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


