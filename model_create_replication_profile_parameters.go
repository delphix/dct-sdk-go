/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateReplicationProfileParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateReplicationProfileParameters{}

// CreateReplicationProfileParameters The parameters to create a ReplicationProfile.
type CreateReplicationProfileParameters struct {
	// The ReplicationProfile name.
	Name *string `json:"name,omitempty"`
	// The ReplicationProfile mode.
	ReplicationMode string `json:"replication_mode"`
	// The ID of the engine that the ReplicationProfile belongs to.
	EngineId string `json:"engine_id"`
	// The ID of the replication target engine.
	TargetEngineId string `json:"target_engine_id"`
	// Hostname of the replication target engine. If none is provided, the hostname for the engine referenced by target_engine_id will be used.
	TargetHost *string `json:"target_host,omitempty"`
	// Target TCP port number for the Delphix Session Protocol.
	TargetPort *int32 `json:"target_port,omitempty"`
	// The ReplicationProfile description.
	Description *string `json:"description,omitempty"`
	// Replication schedule in the form of a quartz-formatted string.
	Schedule *string `json:"schedule,omitempty"`
	// The tags that are applied to this ReplicationProfile.
	Tags []Tag `json:"tags,omitempty"`
	// Indicates whether tag replication from primary object to replica object is enabled or disabled for this ReplicationProfile.
	EnableTagReplication *bool `json:"enable_tag_replication,omitempty"`
	// Bandwidth limit (MB/s) for replication network traffic. A value of 0 means no limit.
	BandwidthLimit *int32 `json:"bandwidth_limit,omitempty"`
	// Total number of transport connections to use.
	NumberOfConnections *int32 `json:"number_of_connections,omitempty"`
	// Encrypt replication network traffic.
	Encrypted *bool `json:"encrypted,omitempty"`
	// Indication whether the replication spec schedule is enabled or not.
	AutomaticReplication *bool `json:"automatic_replication,omitempty"`
	// Connect to the replication target host via the system-wide SOCKS proxy.
	UseSystemSocksSetting *bool `json:"use_system_socks_setting,omitempty"`
	// The VDBs that are replicated by this ReplicationProfile.
	VdbIds []string `json:"vdb_ids,omitempty"`
	// The dSources that are replicated by this ReplicationProfile.
	DsourceIds []string `json:"dsource_ids,omitempty"`
	// The CDBs that are replicated by this ReplicationProfile.
	CdbIds []string `json:"cdb_ids,omitempty"`
	// The vCDBs that are replicated by this ReplicationProfile.
	VcdbIds []string `json:"vcdb_ids,omitempty"`
	// The groups that are replicated by this ReplicationProfile.
	GroupIds []string `json:"group_ids,omitempty"`
	// Whether to replicate the entire engine. This is mutually exclusive with the vdb_ids, dsource_ids, cdb_ids, vcdb_ids, and group_ids properties.
	ReplicateEntireEngine *bool `json:"replicate_entire_engine,omitempty"`
}

type _CreateReplicationProfileParameters CreateReplicationProfileParameters

// NewCreateReplicationProfileParameters instantiates a new CreateReplicationProfileParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateReplicationProfileParameters(replicationMode string, engineId string, targetEngineId string) *CreateReplicationProfileParameters {
	this := CreateReplicationProfileParameters{}
	this.ReplicationMode = replicationMode
	this.EngineId = engineId
	this.TargetEngineId = targetEngineId
	var targetPort int32 = 8415
	this.TargetPort = &targetPort
	var bandwidthLimit int32 = 0
	this.BandwidthLimit = &bandwidthLimit
	var numberOfConnections int32 = 1
	this.NumberOfConnections = &numberOfConnections
	var encrypted bool = false
	this.Encrypted = &encrypted
	var automaticReplication bool = false
	this.AutomaticReplication = &automaticReplication
	var useSystemSocksSetting bool = false
	this.UseSystemSocksSetting = &useSystemSocksSetting
	return &this
}

// NewCreateReplicationProfileParametersWithDefaults instantiates a new CreateReplicationProfileParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateReplicationProfileParametersWithDefaults() *CreateReplicationProfileParameters {
	this := CreateReplicationProfileParameters{}
	var targetPort int32 = 8415
	this.TargetPort = &targetPort
	var bandwidthLimit int32 = 0
	this.BandwidthLimit = &bandwidthLimit
	var numberOfConnections int32 = 1
	this.NumberOfConnections = &numberOfConnections
	var encrypted bool = false
	this.Encrypted = &encrypted
	var automaticReplication bool = false
	this.AutomaticReplication = &automaticReplication
	var useSystemSocksSetting bool = false
	this.UseSystemSocksSetting = &useSystemSocksSetting
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateReplicationProfileParameters) SetName(v string) {
	o.Name = &v
}

// GetReplicationMode returns the ReplicationMode field value
func (o *CreateReplicationProfileParameters) GetReplicationMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicationMode
}

// GetReplicationModeOk returns a tuple with the ReplicationMode field value
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetReplicationModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationMode, true
}

// SetReplicationMode sets field value
func (o *CreateReplicationProfileParameters) SetReplicationMode(v string) {
	o.ReplicationMode = v
}

// GetEngineId returns the EngineId field value
func (o *CreateReplicationProfileParameters) GetEngineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EngineId, true
}

// SetEngineId sets field value
func (o *CreateReplicationProfileParameters) SetEngineId(v string) {
	o.EngineId = v
}

// GetTargetEngineId returns the TargetEngineId field value
func (o *CreateReplicationProfileParameters) GetTargetEngineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetEngineId
}

// GetTargetEngineIdOk returns a tuple with the TargetEngineId field value
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetTargetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetEngineId, true
}

// SetTargetEngineId sets field value
func (o *CreateReplicationProfileParameters) SetTargetEngineId(v string) {
	o.TargetEngineId = v
}

// GetTargetHost returns the TargetHost field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetTargetHost() string {
	if o == nil || IsNil(o.TargetHost) {
		var ret string
		return ret
	}
	return *o.TargetHost
}

// GetTargetHostOk returns a tuple with the TargetHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetTargetHostOk() (*string, bool) {
	if o == nil || IsNil(o.TargetHost) {
		return nil, false
	}
	return o.TargetHost, true
}

// HasTargetHost returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasTargetHost() bool {
	if o != nil && !IsNil(o.TargetHost) {
		return true
	}

	return false
}

// SetTargetHost gets a reference to the given string and assigns it to the TargetHost field.
func (o *CreateReplicationProfileParameters) SetTargetHost(v string) {
	o.TargetHost = &v
}

// GetTargetPort returns the TargetPort field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetTargetPort() int32 {
	if o == nil || IsNil(o.TargetPort) {
		var ret int32
		return ret
	}
	return *o.TargetPort
}

// GetTargetPortOk returns a tuple with the TargetPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetTargetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.TargetPort) {
		return nil, false
	}
	return o.TargetPort, true
}

// HasTargetPort returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasTargetPort() bool {
	if o != nil && !IsNil(o.TargetPort) {
		return true
	}

	return false
}

// SetTargetPort gets a reference to the given int32 and assigns it to the TargetPort field.
func (o *CreateReplicationProfileParameters) SetTargetPort(v int32) {
	o.TargetPort = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateReplicationProfileParameters) SetDescription(v string) {
	o.Description = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *CreateReplicationProfileParameters) SetSchedule(v string) {
	o.Schedule = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *CreateReplicationProfileParameters) SetTags(v []Tag) {
	o.Tags = v
}

// GetEnableTagReplication returns the EnableTagReplication field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetEnableTagReplication() bool {
	if o == nil || IsNil(o.EnableTagReplication) {
		var ret bool
		return ret
	}
	return *o.EnableTagReplication
}

// GetEnableTagReplicationOk returns a tuple with the EnableTagReplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetEnableTagReplicationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableTagReplication) {
		return nil, false
	}
	return o.EnableTagReplication, true
}

// HasEnableTagReplication returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasEnableTagReplication() bool {
	if o != nil && !IsNil(o.EnableTagReplication) {
		return true
	}

	return false
}

// SetEnableTagReplication gets a reference to the given bool and assigns it to the EnableTagReplication field.
func (o *CreateReplicationProfileParameters) SetEnableTagReplication(v bool) {
	o.EnableTagReplication = &v
}

// GetBandwidthLimit returns the BandwidthLimit field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetBandwidthLimit() int32 {
	if o == nil || IsNil(o.BandwidthLimit) {
		var ret int32
		return ret
	}
	return *o.BandwidthLimit
}

// GetBandwidthLimitOk returns a tuple with the BandwidthLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetBandwidthLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.BandwidthLimit) {
		return nil, false
	}
	return o.BandwidthLimit, true
}

// HasBandwidthLimit returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasBandwidthLimit() bool {
	if o != nil && !IsNil(o.BandwidthLimit) {
		return true
	}

	return false
}

// SetBandwidthLimit gets a reference to the given int32 and assigns it to the BandwidthLimit field.
func (o *CreateReplicationProfileParameters) SetBandwidthLimit(v int32) {
	o.BandwidthLimit = &v
}

// GetNumberOfConnections returns the NumberOfConnections field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetNumberOfConnections() int32 {
	if o == nil || IsNil(o.NumberOfConnections) {
		var ret int32
		return ret
	}
	return *o.NumberOfConnections
}

// GetNumberOfConnectionsOk returns a tuple with the NumberOfConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetNumberOfConnectionsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfConnections) {
		return nil, false
	}
	return o.NumberOfConnections, true
}

// HasNumberOfConnections returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasNumberOfConnections() bool {
	if o != nil && !IsNil(o.NumberOfConnections) {
		return true
	}

	return false
}

// SetNumberOfConnections gets a reference to the given int32 and assigns it to the NumberOfConnections field.
func (o *CreateReplicationProfileParameters) SetNumberOfConnections(v int32) {
	o.NumberOfConnections = &v
}

// GetEncrypted returns the Encrypted field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetEncrypted() bool {
	if o == nil || IsNil(o.Encrypted) {
		var ret bool
		return ret
	}
	return *o.Encrypted
}

// GetEncryptedOk returns a tuple with the Encrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.Encrypted) {
		return nil, false
	}
	return o.Encrypted, true
}

// HasEncrypted returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasEncrypted() bool {
	if o != nil && !IsNil(o.Encrypted) {
		return true
	}

	return false
}

// SetEncrypted gets a reference to the given bool and assigns it to the Encrypted field.
func (o *CreateReplicationProfileParameters) SetEncrypted(v bool) {
	o.Encrypted = &v
}

// GetAutomaticReplication returns the AutomaticReplication field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetAutomaticReplication() bool {
	if o == nil || IsNil(o.AutomaticReplication) {
		var ret bool
		return ret
	}
	return *o.AutomaticReplication
}

// GetAutomaticReplicationOk returns a tuple with the AutomaticReplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetAutomaticReplicationOk() (*bool, bool) {
	if o == nil || IsNil(o.AutomaticReplication) {
		return nil, false
	}
	return o.AutomaticReplication, true
}

// HasAutomaticReplication returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasAutomaticReplication() bool {
	if o != nil && !IsNil(o.AutomaticReplication) {
		return true
	}

	return false
}

// SetAutomaticReplication gets a reference to the given bool and assigns it to the AutomaticReplication field.
func (o *CreateReplicationProfileParameters) SetAutomaticReplication(v bool) {
	o.AutomaticReplication = &v
}

// GetUseSystemSocksSetting returns the UseSystemSocksSetting field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetUseSystemSocksSetting() bool {
	if o == nil || IsNil(o.UseSystemSocksSetting) {
		var ret bool
		return ret
	}
	return *o.UseSystemSocksSetting
}

// GetUseSystemSocksSettingOk returns a tuple with the UseSystemSocksSetting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetUseSystemSocksSettingOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSystemSocksSetting) {
		return nil, false
	}
	return o.UseSystemSocksSetting, true
}

// HasUseSystemSocksSetting returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasUseSystemSocksSetting() bool {
	if o != nil && !IsNil(o.UseSystemSocksSetting) {
		return true
	}

	return false
}

// SetUseSystemSocksSetting gets a reference to the given bool and assigns it to the UseSystemSocksSetting field.
func (o *CreateReplicationProfileParameters) SetUseSystemSocksSetting(v bool) {
	o.UseSystemSocksSetting = &v
}

// GetVdbIds returns the VdbIds field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetVdbIds() []string {
	if o == nil || IsNil(o.VdbIds) {
		var ret []string
		return ret
	}
	return o.VdbIds
}

// GetVdbIdsOk returns a tuple with the VdbIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetVdbIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.VdbIds) {
		return nil, false
	}
	return o.VdbIds, true
}

// HasVdbIds returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasVdbIds() bool {
	if o != nil && !IsNil(o.VdbIds) {
		return true
	}

	return false
}

// SetVdbIds gets a reference to the given []string and assigns it to the VdbIds field.
func (o *CreateReplicationProfileParameters) SetVdbIds(v []string) {
	o.VdbIds = v
}

// GetDsourceIds returns the DsourceIds field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetDsourceIds() []string {
	if o == nil || IsNil(o.DsourceIds) {
		var ret []string
		return ret
	}
	return o.DsourceIds
}

// GetDsourceIdsOk returns a tuple with the DsourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetDsourceIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.DsourceIds) {
		return nil, false
	}
	return o.DsourceIds, true
}

// HasDsourceIds returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasDsourceIds() bool {
	if o != nil && !IsNil(o.DsourceIds) {
		return true
	}

	return false
}

// SetDsourceIds gets a reference to the given []string and assigns it to the DsourceIds field.
func (o *CreateReplicationProfileParameters) SetDsourceIds(v []string) {
	o.DsourceIds = v
}

// GetCdbIds returns the CdbIds field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetCdbIds() []string {
	if o == nil || IsNil(o.CdbIds) {
		var ret []string
		return ret
	}
	return o.CdbIds
}

// GetCdbIdsOk returns a tuple with the CdbIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetCdbIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CdbIds) {
		return nil, false
	}
	return o.CdbIds, true
}

// HasCdbIds returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasCdbIds() bool {
	if o != nil && !IsNil(o.CdbIds) {
		return true
	}

	return false
}

// SetCdbIds gets a reference to the given []string and assigns it to the CdbIds field.
func (o *CreateReplicationProfileParameters) SetCdbIds(v []string) {
	o.CdbIds = v
}

// GetVcdbIds returns the VcdbIds field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetVcdbIds() []string {
	if o == nil || IsNil(o.VcdbIds) {
		var ret []string
		return ret
	}
	return o.VcdbIds
}

// GetVcdbIdsOk returns a tuple with the VcdbIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetVcdbIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.VcdbIds) {
		return nil, false
	}
	return o.VcdbIds, true
}

// HasVcdbIds returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasVcdbIds() bool {
	if o != nil && !IsNil(o.VcdbIds) {
		return true
	}

	return false
}

// SetVcdbIds gets a reference to the given []string and assigns it to the VcdbIds field.
func (o *CreateReplicationProfileParameters) SetVcdbIds(v []string) {
	o.VcdbIds = v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetGroupIds() []string {
	if o == nil || IsNil(o.GroupIds) {
		var ret []string
		return ret
	}
	return o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupIds) {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasGroupIds() bool {
	if o != nil && !IsNil(o.GroupIds) {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given []string and assigns it to the GroupIds field.
func (o *CreateReplicationProfileParameters) SetGroupIds(v []string) {
	o.GroupIds = v
}

// GetReplicateEntireEngine returns the ReplicateEntireEngine field value if set, zero value otherwise.
func (o *CreateReplicationProfileParameters) GetReplicateEntireEngine() bool {
	if o == nil || IsNil(o.ReplicateEntireEngine) {
		var ret bool
		return ret
	}
	return *o.ReplicateEntireEngine
}

// GetReplicateEntireEngineOk returns a tuple with the ReplicateEntireEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateReplicationProfileParameters) GetReplicateEntireEngineOk() (*bool, bool) {
	if o == nil || IsNil(o.ReplicateEntireEngine) {
		return nil, false
	}
	return o.ReplicateEntireEngine, true
}

// HasReplicateEntireEngine returns a boolean if a field has been set.
func (o *CreateReplicationProfileParameters) HasReplicateEntireEngine() bool {
	if o != nil && !IsNil(o.ReplicateEntireEngine) {
		return true
	}

	return false
}

// SetReplicateEntireEngine gets a reference to the given bool and assigns it to the ReplicateEntireEngine field.
func (o *CreateReplicationProfileParameters) SetReplicateEntireEngine(v bool) {
	o.ReplicateEntireEngine = &v
}

func (o CreateReplicationProfileParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateReplicationProfileParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["replication_mode"] = o.ReplicationMode
	toSerialize["engine_id"] = o.EngineId
	toSerialize["target_engine_id"] = o.TargetEngineId
	if !IsNil(o.TargetHost) {
		toSerialize["target_host"] = o.TargetHost
	}
	if !IsNil(o.TargetPort) {
		toSerialize["target_port"] = o.TargetPort
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.EnableTagReplication) {
		toSerialize["enable_tag_replication"] = o.EnableTagReplication
	}
	if !IsNil(o.BandwidthLimit) {
		toSerialize["bandwidth_limit"] = o.BandwidthLimit
	}
	if !IsNil(o.NumberOfConnections) {
		toSerialize["number_of_connections"] = o.NumberOfConnections
	}
	if !IsNil(o.Encrypted) {
		toSerialize["encrypted"] = o.Encrypted
	}
	if !IsNil(o.AutomaticReplication) {
		toSerialize["automatic_replication"] = o.AutomaticReplication
	}
	if !IsNil(o.UseSystemSocksSetting) {
		toSerialize["use_system_socks_setting"] = o.UseSystemSocksSetting
	}
	if !IsNil(o.VdbIds) {
		toSerialize["vdb_ids"] = o.VdbIds
	}
	if !IsNil(o.DsourceIds) {
		toSerialize["dsource_ids"] = o.DsourceIds
	}
	if !IsNil(o.CdbIds) {
		toSerialize["cdb_ids"] = o.CdbIds
	}
	if !IsNil(o.VcdbIds) {
		toSerialize["vcdb_ids"] = o.VcdbIds
	}
	if !IsNil(o.GroupIds) {
		toSerialize["group_ids"] = o.GroupIds
	}
	if !IsNil(o.ReplicateEntireEngine) {
		toSerialize["replicate_entire_engine"] = o.ReplicateEntireEngine
	}
	return toSerialize, nil
}

func (o *CreateReplicationProfileParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"replication_mode",
		"engine_id",
		"target_engine_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateReplicationProfileParameters := _CreateReplicationProfileParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateReplicationProfileParameters)

	if err != nil {
		return err
	}

	*o = CreateReplicationProfileParameters(varCreateReplicationProfileParameters)

	return err
}

type NullableCreateReplicationProfileParameters struct {
	value *CreateReplicationProfileParameters
	isSet bool
}

func (v NullableCreateReplicationProfileParameters) Get() *CreateReplicationProfileParameters {
	return v.value
}

func (v *NullableCreateReplicationProfileParameters) Set(val *CreateReplicationProfileParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateReplicationProfileParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateReplicationProfileParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateReplicationProfileParameters(val *CreateReplicationProfileParameters) *NullableCreateReplicationProfileParameters {
	return &NullableCreateReplicationProfileParameters{value: val, isSet: true}
}

func (v NullableCreateReplicationProfileParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateReplicationProfileParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


