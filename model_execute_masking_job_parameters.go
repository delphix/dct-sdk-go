/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the ExecuteMaskingJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteMaskingJobParameters{}

// ExecuteMaskingJobParameters Parameters to execute a MaskingJob.
type ExecuteMaskingJobParameters struct {
	// The ID of the Engine to execute this MaskingJob on (Standard job only).
	EngineId *string `json:"engine_id,omitempty"`
}

// NewExecuteMaskingJobParameters instantiates a new ExecuteMaskingJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteMaskingJobParameters() *ExecuteMaskingJobParameters {
	this := ExecuteMaskingJobParameters{}
	return &this
}

// NewExecuteMaskingJobParametersWithDefaults instantiates a new ExecuteMaskingJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteMaskingJobParametersWithDefaults() *ExecuteMaskingJobParameters {
	this := ExecuteMaskingJobParameters{}
	return &this
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *ExecuteMaskingJobParameters) GetEngineId() string {
	if o == nil || IsNil(o.EngineId) {
		var ret string
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecuteMaskingJobParameters) GetEngineIdOk() (*string, bool) {
	if o == nil || IsNil(o.EngineId) {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *ExecuteMaskingJobParameters) HasEngineId() bool {
	if o != nil && !IsNil(o.EngineId) {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given string and assigns it to the EngineId field.
func (o *ExecuteMaskingJobParameters) SetEngineId(v string) {
	o.EngineId = &v
}

func (o ExecuteMaskingJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteMaskingJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EngineId) {
		toSerialize["engine_id"] = o.EngineId
	}
	return toSerialize, nil
}

type NullableExecuteMaskingJobParameters struct {
	value *ExecuteMaskingJobParameters
	isSet bool
}

func (v NullableExecuteMaskingJobParameters) Get() *ExecuteMaskingJobParameters {
	return v.value
}

func (v *NullableExecuteMaskingJobParameters) Set(val *ExecuteMaskingJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteMaskingJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteMaskingJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteMaskingJobParameters(val *ExecuteMaskingJobParameters) *NullableExecuteMaskingJobParameters {
	return &NullableExecuteMaskingJobParameters{value: val, isSet: true}
}

func (v NullableExecuteMaskingJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteMaskingJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


