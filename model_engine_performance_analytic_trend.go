/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the EnginePerformanceAnalyticTrend type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnginePerformanceAnalyticTrend{}

// EnginePerformanceAnalyticTrend struct for EnginePerformanceAnalyticTrend
type EnginePerformanceAnalyticTrend struct {
	TrendType *string `json:"trend_type,omitempty"`
	// The engine id.
	EngineId *string `json:"engine_id,omitempty"`
	// The time period by which engine performance analytics data is being aggregated, in hours.
	AggregationPeriod *int32 `json:"aggregation_period,omitempty"`
	Datapoint []EnginePerformanceAnalyticTrendDatapointInner `json:"datapoint,omitempty"`
}

// NewEnginePerformanceAnalyticTrend instantiates a new EnginePerformanceAnalyticTrend object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnginePerformanceAnalyticTrend() *EnginePerformanceAnalyticTrend {
	this := EnginePerformanceAnalyticTrend{}
	return &this
}

// NewEnginePerformanceAnalyticTrendWithDefaults instantiates a new EnginePerformanceAnalyticTrend object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnginePerformanceAnalyticTrendWithDefaults() *EnginePerformanceAnalyticTrend {
	this := EnginePerformanceAnalyticTrend{}
	return &this
}

// GetTrendType returns the TrendType field value if set, zero value otherwise.
func (o *EnginePerformanceAnalyticTrend) GetTrendType() string {
	if o == nil || IsNil(o.TrendType) {
		var ret string
		return ret
	}
	return *o.TrendType
}

// GetTrendTypeOk returns a tuple with the TrendType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnginePerformanceAnalyticTrend) GetTrendTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TrendType) {
		return nil, false
	}
	return o.TrendType, true
}

// HasTrendType returns a boolean if a field has been set.
func (o *EnginePerformanceAnalyticTrend) HasTrendType() bool {
	if o != nil && !IsNil(o.TrendType) {
		return true
	}

	return false
}

// SetTrendType gets a reference to the given string and assigns it to the TrendType field.
func (o *EnginePerformanceAnalyticTrend) SetTrendType(v string) {
	o.TrendType = &v
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *EnginePerformanceAnalyticTrend) GetEngineId() string {
	if o == nil || IsNil(o.EngineId) {
		var ret string
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnginePerformanceAnalyticTrend) GetEngineIdOk() (*string, bool) {
	if o == nil || IsNil(o.EngineId) {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *EnginePerformanceAnalyticTrend) HasEngineId() bool {
	if o != nil && !IsNil(o.EngineId) {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given string and assigns it to the EngineId field.
func (o *EnginePerformanceAnalyticTrend) SetEngineId(v string) {
	o.EngineId = &v
}

// GetAggregationPeriod returns the AggregationPeriod field value if set, zero value otherwise.
func (o *EnginePerformanceAnalyticTrend) GetAggregationPeriod() int32 {
	if o == nil || IsNil(o.AggregationPeriod) {
		var ret int32
		return ret
	}
	return *o.AggregationPeriod
}

// GetAggregationPeriodOk returns a tuple with the AggregationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnginePerformanceAnalyticTrend) GetAggregationPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.AggregationPeriod) {
		return nil, false
	}
	return o.AggregationPeriod, true
}

// HasAggregationPeriod returns a boolean if a field has been set.
func (o *EnginePerformanceAnalyticTrend) HasAggregationPeriod() bool {
	if o != nil && !IsNil(o.AggregationPeriod) {
		return true
	}

	return false
}

// SetAggregationPeriod gets a reference to the given int32 and assigns it to the AggregationPeriod field.
func (o *EnginePerformanceAnalyticTrend) SetAggregationPeriod(v int32) {
	o.AggregationPeriod = &v
}

// GetDatapoint returns the Datapoint field value if set, zero value otherwise.
func (o *EnginePerformanceAnalyticTrend) GetDatapoint() []EnginePerformanceAnalyticTrendDatapointInner {
	if o == nil || IsNil(o.Datapoint) {
		var ret []EnginePerformanceAnalyticTrendDatapointInner
		return ret
	}
	return o.Datapoint
}

// GetDatapointOk returns a tuple with the Datapoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnginePerformanceAnalyticTrend) GetDatapointOk() ([]EnginePerformanceAnalyticTrendDatapointInner, bool) {
	if o == nil || IsNil(o.Datapoint) {
		return nil, false
	}
	return o.Datapoint, true
}

// HasDatapoint returns a boolean if a field has been set.
func (o *EnginePerformanceAnalyticTrend) HasDatapoint() bool {
	if o != nil && !IsNil(o.Datapoint) {
		return true
	}

	return false
}

// SetDatapoint gets a reference to the given []EnginePerformanceAnalyticTrendDatapointInner and assigns it to the Datapoint field.
func (o *EnginePerformanceAnalyticTrend) SetDatapoint(v []EnginePerformanceAnalyticTrendDatapointInner) {
	o.Datapoint = v
}

func (o EnginePerformanceAnalyticTrend) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnginePerformanceAnalyticTrend) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TrendType) {
		toSerialize["trend_type"] = o.TrendType
	}
	if !IsNil(o.EngineId) {
		toSerialize["engine_id"] = o.EngineId
	}
	if !IsNil(o.AggregationPeriod) {
		toSerialize["aggregation_period"] = o.AggregationPeriod
	}
	if !IsNil(o.Datapoint) {
		toSerialize["datapoint"] = o.Datapoint
	}
	return toSerialize, nil
}

type NullableEnginePerformanceAnalyticTrend struct {
	value *EnginePerformanceAnalyticTrend
	isSet bool
}

func (v NullableEnginePerformanceAnalyticTrend) Get() *EnginePerformanceAnalyticTrend {
	return v.value
}

func (v *NullableEnginePerformanceAnalyticTrend) Set(val *EnginePerformanceAnalyticTrend) {
	v.value = val
	v.isSet = true
}

func (v NullableEnginePerformanceAnalyticTrend) IsSet() bool {
	return v.isSet
}

func (v *NullableEnginePerformanceAnalyticTrend) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnginePerformanceAnalyticTrend(val *EnginePerformanceAnalyticTrend) *NullableEnginePerformanceAnalyticTrend {
	return &NullableEnginePerformanceAnalyticTrend{value: val, isSet: true}
}

func (v NullableEnginePerformanceAnalyticTrend) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnginePerformanceAnalyticTrend) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


