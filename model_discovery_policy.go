/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the DiscoveryPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscoveryPolicy{}

// DiscoveryPolicy A discovery policy.
type DiscoveryPolicy struct {
	// The discovery policy ID.
	Id *string `json:"id,omitempty"`
	// The name of this discovery policy.
	Name *string `json:"name,omitempty"`
	// A description of this discovery policy.
	Description NullableString `json:"description,omitempty"`
	// The method used to discover sensitive data.
	DiscoveryMethod *string `json:"discovery_method,omitempty"`
	// The confidence threshold that must be met or exceeded to make an assignment. This is an integer from 1-100.
	AssignmentThreshold *int32 `json:"assignment_threshold,omitempty"`
	// The ID of the engine that this discovery policy originated from.
	EngineId NullableString `json:"engine_id,omitempty"`
	// The name of the engine that this discovery policy originated from.
	EngineName NullableString `json:"engine_name,omitempty"`
	// The tags of this discovery policy.
	Tags []Tag `json:"tags,omitempty"`
}

// NewDiscoveryPolicy instantiates a new DiscoveryPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscoveryPolicy() *DiscoveryPolicy {
	this := DiscoveryPolicy{}
	return &this
}

// NewDiscoveryPolicyWithDefaults instantiates a new DiscoveryPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscoveryPolicyWithDefaults() *DiscoveryPolicy {
	this := DiscoveryPolicy{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DiscoveryPolicy) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryPolicy) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DiscoveryPolicy) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DiscoveryPolicy) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiscoveryPolicy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryPolicy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiscoveryPolicy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiscoveryPolicy) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DiscoveryPolicy) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DiscoveryPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *DiscoveryPolicy) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *DiscoveryPolicy) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *DiscoveryPolicy) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *DiscoveryPolicy) UnsetDescription() {
	o.Description.Unset()
}

// GetDiscoveryMethod returns the DiscoveryMethod field value if set, zero value otherwise.
func (o *DiscoveryPolicy) GetDiscoveryMethod() string {
	if o == nil || IsNil(o.DiscoveryMethod) {
		var ret string
		return ret
	}
	return *o.DiscoveryMethod
}

// GetDiscoveryMethodOk returns a tuple with the DiscoveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryPolicy) GetDiscoveryMethodOk() (*string, bool) {
	if o == nil || IsNil(o.DiscoveryMethod) {
		return nil, false
	}
	return o.DiscoveryMethod, true
}

// HasDiscoveryMethod returns a boolean if a field has been set.
func (o *DiscoveryPolicy) HasDiscoveryMethod() bool {
	if o != nil && !IsNil(o.DiscoveryMethod) {
		return true
	}

	return false
}

// SetDiscoveryMethod gets a reference to the given string and assigns it to the DiscoveryMethod field.
func (o *DiscoveryPolicy) SetDiscoveryMethod(v string) {
	o.DiscoveryMethod = &v
}

// GetAssignmentThreshold returns the AssignmentThreshold field value if set, zero value otherwise.
func (o *DiscoveryPolicy) GetAssignmentThreshold() int32 {
	if o == nil || IsNil(o.AssignmentThreshold) {
		var ret int32
		return ret
	}
	return *o.AssignmentThreshold
}

// GetAssignmentThresholdOk returns a tuple with the AssignmentThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryPolicy) GetAssignmentThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.AssignmentThreshold) {
		return nil, false
	}
	return o.AssignmentThreshold, true
}

// HasAssignmentThreshold returns a boolean if a field has been set.
func (o *DiscoveryPolicy) HasAssignmentThreshold() bool {
	if o != nil && !IsNil(o.AssignmentThreshold) {
		return true
	}

	return false
}

// SetAssignmentThreshold gets a reference to the given int32 and assigns it to the AssignmentThreshold field.
func (o *DiscoveryPolicy) SetAssignmentThreshold(v int32) {
	o.AssignmentThreshold = &v
}

// GetEngineId returns the EngineId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DiscoveryPolicy) GetEngineId() string {
	if o == nil || IsNil(o.EngineId.Get()) {
		var ret string
		return ret
	}
	return *o.EngineId.Get()
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DiscoveryPolicy) GetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EngineId.Get(), o.EngineId.IsSet()
}

// HasEngineId returns a boolean if a field has been set.
func (o *DiscoveryPolicy) HasEngineId() bool {
	if o != nil && o.EngineId.IsSet() {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given NullableString and assigns it to the EngineId field.
func (o *DiscoveryPolicy) SetEngineId(v string) {
	o.EngineId.Set(&v)
}
// SetEngineIdNil sets the value for EngineId to be an explicit nil
func (o *DiscoveryPolicy) SetEngineIdNil() {
	o.EngineId.Set(nil)
}

// UnsetEngineId ensures that no value is present for EngineId, not even an explicit nil
func (o *DiscoveryPolicy) UnsetEngineId() {
	o.EngineId.Unset()
}

// GetEngineName returns the EngineName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DiscoveryPolicy) GetEngineName() string {
	if o == nil || IsNil(o.EngineName.Get()) {
		var ret string
		return ret
	}
	return *o.EngineName.Get()
}

// GetEngineNameOk returns a tuple with the EngineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DiscoveryPolicy) GetEngineNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EngineName.Get(), o.EngineName.IsSet()
}

// HasEngineName returns a boolean if a field has been set.
func (o *DiscoveryPolicy) HasEngineName() bool {
	if o != nil && o.EngineName.IsSet() {
		return true
	}

	return false
}

// SetEngineName gets a reference to the given NullableString and assigns it to the EngineName field.
func (o *DiscoveryPolicy) SetEngineName(v string) {
	o.EngineName.Set(&v)
}
// SetEngineNameNil sets the value for EngineName to be an explicit nil
func (o *DiscoveryPolicy) SetEngineNameNil() {
	o.EngineName.Set(nil)
}

// UnsetEngineName ensures that no value is present for EngineName, not even an explicit nil
func (o *DiscoveryPolicy) UnsetEngineName() {
	o.EngineName.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DiscoveryPolicy) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscoveryPolicy) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DiscoveryPolicy) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *DiscoveryPolicy) SetTags(v []Tag) {
	o.Tags = v
}

func (o DiscoveryPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscoveryPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.DiscoveryMethod) {
		toSerialize["discovery_method"] = o.DiscoveryMethod
	}
	if !IsNil(o.AssignmentThreshold) {
		toSerialize["assignment_threshold"] = o.AssignmentThreshold
	}
	if o.EngineId.IsSet() {
		toSerialize["engine_id"] = o.EngineId.Get()
	}
	if o.EngineName.IsSet() {
		toSerialize["engine_name"] = o.EngineName.Get()
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableDiscoveryPolicy struct {
	value *DiscoveryPolicy
	isSet bool
}

func (v NullableDiscoveryPolicy) Get() *DiscoveryPolicy {
	return v.value
}

func (v *NullableDiscoveryPolicy) Set(val *DiscoveryPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscoveryPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscoveryPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscoveryPolicy(val *DiscoveryPolicy) *NullableDiscoveryPolicy {
	return &NullableDiscoveryPolicy{value: val, isSet: true}
}

func (v NullableDiscoveryPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscoveryPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


