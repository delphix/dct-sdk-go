/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the ListHyperscaleDatasetsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHyperscaleDatasetsResponse{}

// ListHyperscaleDatasetsResponse struct for ListHyperscaleDatasetsResponse
type ListHyperscaleDatasetsResponse struct {
	Items []HyperscaleDataset `json:"items,omitempty"`
	ResponseMetadata *PaginatedResponseMetadata `json:"response_metadata,omitempty"`
}

// NewListHyperscaleDatasetsResponse instantiates a new ListHyperscaleDatasetsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHyperscaleDatasetsResponse() *ListHyperscaleDatasetsResponse {
	this := ListHyperscaleDatasetsResponse{}
	return &this
}

// NewListHyperscaleDatasetsResponseWithDefaults instantiates a new ListHyperscaleDatasetsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHyperscaleDatasetsResponseWithDefaults() *ListHyperscaleDatasetsResponse {
	this := ListHyperscaleDatasetsResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListHyperscaleDatasetsResponse) GetItems() []HyperscaleDataset {
	if o == nil || IsNil(o.Items) {
		var ret []HyperscaleDataset
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHyperscaleDatasetsResponse) GetItemsOk() ([]HyperscaleDataset, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListHyperscaleDatasetsResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []HyperscaleDataset and assigns it to the Items field.
func (o *ListHyperscaleDatasetsResponse) SetItems(v []HyperscaleDataset) {
	o.Items = v
}

// GetResponseMetadata returns the ResponseMetadata field value if set, zero value otherwise.
func (o *ListHyperscaleDatasetsResponse) GetResponseMetadata() PaginatedResponseMetadata {
	if o == nil || IsNil(o.ResponseMetadata) {
		var ret PaginatedResponseMetadata
		return ret
	}
	return *o.ResponseMetadata
}

// GetResponseMetadataOk returns a tuple with the ResponseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHyperscaleDatasetsResponse) GetResponseMetadataOk() (*PaginatedResponseMetadata, bool) {
	if o == nil || IsNil(o.ResponseMetadata) {
		return nil, false
	}
	return o.ResponseMetadata, true
}

// HasResponseMetadata returns a boolean if a field has been set.
func (o *ListHyperscaleDatasetsResponse) HasResponseMetadata() bool {
	if o != nil && !IsNil(o.ResponseMetadata) {
		return true
	}

	return false
}

// SetResponseMetadata gets a reference to the given PaginatedResponseMetadata and assigns it to the ResponseMetadata field.
func (o *ListHyperscaleDatasetsResponse) SetResponseMetadata(v PaginatedResponseMetadata) {
	o.ResponseMetadata = &v
}

func (o ListHyperscaleDatasetsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHyperscaleDatasetsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.ResponseMetadata) {
		toSerialize["response_metadata"] = o.ResponseMetadata
	}
	return toSerialize, nil
}

type NullableListHyperscaleDatasetsResponse struct {
	value *ListHyperscaleDatasetsResponse
	isSet bool
}

func (v NullableListHyperscaleDatasetsResponse) Get() *ListHyperscaleDatasetsResponse {
	return v.value
}

func (v *NullableListHyperscaleDatasetsResponse) Set(val *ListHyperscaleDatasetsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListHyperscaleDatasetsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListHyperscaleDatasetsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHyperscaleDatasetsResponse(val *ListHyperscaleDatasetsResponse) *NullableListHyperscaleDatasetsResponse {
	return &NullableListHyperscaleDatasetsResponse{value: val, isSet: true}
}

func (v NullableListHyperscaleDatasetsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHyperscaleDatasetsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


