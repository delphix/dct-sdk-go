/*
Delphix API Gateway

Delphix API Gateway API

API version: 1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListEnvironmentsResponse struct for ListEnvironmentsResponse
type ListEnvironmentsResponse struct {
	Items []Environment `json:"items,omitempty"`
	// Sadly, sometimes requests to the API are not successful. Failures can occur for a wide range of reasons. The Errors object contains information about full or partial failures which might have occurred during the request.
	Errors []Error `json:"errors,omitempty"`
	ResponseMetadata *PaginatedResponseMetadata `json:"response_metadata,omitempty"`
}

// NewListEnvironmentsResponse instantiates a new ListEnvironmentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListEnvironmentsResponse() *ListEnvironmentsResponse {
	this := ListEnvironmentsResponse{}
	return &this
}

// NewListEnvironmentsResponseWithDefaults instantiates a new ListEnvironmentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListEnvironmentsResponseWithDefaults() *ListEnvironmentsResponse {
	this := ListEnvironmentsResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListEnvironmentsResponse) GetItems() []Environment {
	if o == nil || o.Items == nil {
		var ret []Environment
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListEnvironmentsResponse) GetItemsOk() ([]Environment, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListEnvironmentsResponse) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Environment and assigns it to the Items field.
func (o *ListEnvironmentsResponse) SetItems(v []Environment) {
	o.Items = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ListEnvironmentsResponse) GetErrors() []Error {
	if o == nil || o.Errors == nil {
		var ret []Error
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListEnvironmentsResponse) GetErrorsOk() ([]Error, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ListEnvironmentsResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Error and assigns it to the Errors field.
func (o *ListEnvironmentsResponse) SetErrors(v []Error) {
	o.Errors = v
}

// GetResponseMetadata returns the ResponseMetadata field value if set, zero value otherwise.
func (o *ListEnvironmentsResponse) GetResponseMetadata() PaginatedResponseMetadata {
	if o == nil || o.ResponseMetadata == nil {
		var ret PaginatedResponseMetadata
		return ret
	}
	return *o.ResponseMetadata
}

// GetResponseMetadataOk returns a tuple with the ResponseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListEnvironmentsResponse) GetResponseMetadataOk() (*PaginatedResponseMetadata, bool) {
	if o == nil || o.ResponseMetadata == nil {
		return nil, false
	}
	return o.ResponseMetadata, true
}

// HasResponseMetadata returns a boolean if a field has been set.
func (o *ListEnvironmentsResponse) HasResponseMetadata() bool {
	if o != nil && o.ResponseMetadata != nil {
		return true
	}

	return false
}

// SetResponseMetadata gets a reference to the given PaginatedResponseMetadata and assigns it to the ResponseMetadata field.
func (o *ListEnvironmentsResponse) SetResponseMetadata(v PaginatedResponseMetadata) {
	o.ResponseMetadata = &v
}

func (o ListEnvironmentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.ResponseMetadata != nil {
		toSerialize["response_metadata"] = o.ResponseMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableListEnvironmentsResponse struct {
	value *ListEnvironmentsResponse
	isSet bool
}

func (v NullableListEnvironmentsResponse) Get() *ListEnvironmentsResponse {
	return v.value
}

func (v *NullableListEnvironmentsResponse) Set(val *ListEnvironmentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListEnvironmentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListEnvironmentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListEnvironmentsResponse(val *ListEnvironmentsResponse) *NullableListEnvironmentsResponse {
	return &NullableListEnvironmentsResponse{value: val, isSet: true}
}

func (v NullableListEnvironmentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListEnvironmentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


