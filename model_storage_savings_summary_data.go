/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the StorageSavingsSummaryData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageSavingsSummaryData{}

// StorageSavingsSummaryData struct for StorageSavingsSummaryData
type StorageSavingsSummaryData struct {
	// Id of the dSource.
	DsourceId *string `json:"dsource_id,omitempty"`
	// The number of VDBs that are dependant on this dSource. This includes all VDB descendants that have this dSource as an ancestor.
	DependantVdbs *int32 `json:"dependant_vdbs,omitempty"`
	// The engine name.
	EngineName *string `json:"engine_name,omitempty"`
	// The disk space, in bytes, that it would take to store the dSource and its descendant VDBs without Delphix, counting each of their timeflows as separate copy of the parent source data.
	UnvirtualizedSpace *int64 `json:"unvirtualized_space,omitempty"`
	// The disk space, in bytes, that it would take to store the dSource and its descendant VDBs without Delphix, counting only their current (active) timeflows.
	CurrentTimeflowsUnvirtualizedSpace *int64 `json:"current_timeflows_unvirtualized_space,omitempty"`
	// The actual space used by the VDB, in bytes.
	VirtualizedSpace *int64 `json:"virtualized_space,omitempty"`
	// The name of the database on the target environment.
	Name *string `json:"name,omitempty"`
	// The disk space that has been saved by using Delphix virtualizion for all descendant timeflows, in bytes.
	EstimatedSavings *int64 `json:"estimated_savings,omitempty"`
	// The disk space that has been saved by using Delphix virtualizion for all descendant timeflows, in percentage.
	EstimatedSavingsPerc *float32 `json:"estimated_savings_perc,omitempty"`
	// The disk space that has been saved by using Delphix virtualizion for only the current (active) timeflows, in bytes.
	EstimatedCurrentTimeflowsSavings *int64 `json:"estimated_current_timeflows_savings,omitempty"`
	// The disk space that has been saved by using Delphix virtualizion for only the current (active) timeflows, in percentage.
	EstimatedCurrentTimeflowsSavingsPerc *float32 `json:"estimated_current_timeflows_savings_perc,omitempty"`
}

// NewStorageSavingsSummaryData instantiates a new StorageSavingsSummaryData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageSavingsSummaryData() *StorageSavingsSummaryData {
	this := StorageSavingsSummaryData{}
	return &this
}

// NewStorageSavingsSummaryDataWithDefaults instantiates a new StorageSavingsSummaryData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageSavingsSummaryDataWithDefaults() *StorageSavingsSummaryData {
	this := StorageSavingsSummaryData{}
	return &this
}

// GetDsourceId returns the DsourceId field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetDsourceId() string {
	if o == nil || IsNil(o.DsourceId) {
		var ret string
		return ret
	}
	return *o.DsourceId
}

// GetDsourceIdOk returns a tuple with the DsourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetDsourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DsourceId) {
		return nil, false
	}
	return o.DsourceId, true
}

// HasDsourceId returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasDsourceId() bool {
	if o != nil && !IsNil(o.DsourceId) {
		return true
	}

	return false
}

// SetDsourceId gets a reference to the given string and assigns it to the DsourceId field.
func (o *StorageSavingsSummaryData) SetDsourceId(v string) {
	o.DsourceId = &v
}

// GetDependantVdbs returns the DependantVdbs field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetDependantVdbs() int32 {
	if o == nil || IsNil(o.DependantVdbs) {
		var ret int32
		return ret
	}
	return *o.DependantVdbs
}

// GetDependantVdbsOk returns a tuple with the DependantVdbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetDependantVdbsOk() (*int32, bool) {
	if o == nil || IsNil(o.DependantVdbs) {
		return nil, false
	}
	return o.DependantVdbs, true
}

// HasDependantVdbs returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasDependantVdbs() bool {
	if o != nil && !IsNil(o.DependantVdbs) {
		return true
	}

	return false
}

// SetDependantVdbs gets a reference to the given int32 and assigns it to the DependantVdbs field.
func (o *StorageSavingsSummaryData) SetDependantVdbs(v int32) {
	o.DependantVdbs = &v
}

// GetEngineName returns the EngineName field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetEngineName() string {
	if o == nil || IsNil(o.EngineName) {
		var ret string
		return ret
	}
	return *o.EngineName
}

// GetEngineNameOk returns a tuple with the EngineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetEngineNameOk() (*string, bool) {
	if o == nil || IsNil(o.EngineName) {
		return nil, false
	}
	return o.EngineName, true
}

// HasEngineName returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasEngineName() bool {
	if o != nil && !IsNil(o.EngineName) {
		return true
	}

	return false
}

// SetEngineName gets a reference to the given string and assigns it to the EngineName field.
func (o *StorageSavingsSummaryData) SetEngineName(v string) {
	o.EngineName = &v
}

// GetUnvirtualizedSpace returns the UnvirtualizedSpace field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetUnvirtualizedSpace() int64 {
	if o == nil || IsNil(o.UnvirtualizedSpace) {
		var ret int64
		return ret
	}
	return *o.UnvirtualizedSpace
}

// GetUnvirtualizedSpaceOk returns a tuple with the UnvirtualizedSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetUnvirtualizedSpaceOk() (*int64, bool) {
	if o == nil || IsNil(o.UnvirtualizedSpace) {
		return nil, false
	}
	return o.UnvirtualizedSpace, true
}

// HasUnvirtualizedSpace returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasUnvirtualizedSpace() bool {
	if o != nil && !IsNil(o.UnvirtualizedSpace) {
		return true
	}

	return false
}

// SetUnvirtualizedSpace gets a reference to the given int64 and assigns it to the UnvirtualizedSpace field.
func (o *StorageSavingsSummaryData) SetUnvirtualizedSpace(v int64) {
	o.UnvirtualizedSpace = &v
}

// GetCurrentTimeflowsUnvirtualizedSpace returns the CurrentTimeflowsUnvirtualizedSpace field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetCurrentTimeflowsUnvirtualizedSpace() int64 {
	if o == nil || IsNil(o.CurrentTimeflowsUnvirtualizedSpace) {
		var ret int64
		return ret
	}
	return *o.CurrentTimeflowsUnvirtualizedSpace
}

// GetCurrentTimeflowsUnvirtualizedSpaceOk returns a tuple with the CurrentTimeflowsUnvirtualizedSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetCurrentTimeflowsUnvirtualizedSpaceOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentTimeflowsUnvirtualizedSpace) {
		return nil, false
	}
	return o.CurrentTimeflowsUnvirtualizedSpace, true
}

// HasCurrentTimeflowsUnvirtualizedSpace returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasCurrentTimeflowsUnvirtualizedSpace() bool {
	if o != nil && !IsNil(o.CurrentTimeflowsUnvirtualizedSpace) {
		return true
	}

	return false
}

// SetCurrentTimeflowsUnvirtualizedSpace gets a reference to the given int64 and assigns it to the CurrentTimeflowsUnvirtualizedSpace field.
func (o *StorageSavingsSummaryData) SetCurrentTimeflowsUnvirtualizedSpace(v int64) {
	o.CurrentTimeflowsUnvirtualizedSpace = &v
}

// GetVirtualizedSpace returns the VirtualizedSpace field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetVirtualizedSpace() int64 {
	if o == nil || IsNil(o.VirtualizedSpace) {
		var ret int64
		return ret
	}
	return *o.VirtualizedSpace
}

// GetVirtualizedSpaceOk returns a tuple with the VirtualizedSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetVirtualizedSpaceOk() (*int64, bool) {
	if o == nil || IsNil(o.VirtualizedSpace) {
		return nil, false
	}
	return o.VirtualizedSpace, true
}

// HasVirtualizedSpace returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasVirtualizedSpace() bool {
	if o != nil && !IsNil(o.VirtualizedSpace) {
		return true
	}

	return false
}

// SetVirtualizedSpace gets a reference to the given int64 and assigns it to the VirtualizedSpace field.
func (o *StorageSavingsSummaryData) SetVirtualizedSpace(v int64) {
	o.VirtualizedSpace = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StorageSavingsSummaryData) SetName(v string) {
	o.Name = &v
}

// GetEstimatedSavings returns the EstimatedSavings field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetEstimatedSavings() int64 {
	if o == nil || IsNil(o.EstimatedSavings) {
		var ret int64
		return ret
	}
	return *o.EstimatedSavings
}

// GetEstimatedSavingsOk returns a tuple with the EstimatedSavings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetEstimatedSavingsOk() (*int64, bool) {
	if o == nil || IsNil(o.EstimatedSavings) {
		return nil, false
	}
	return o.EstimatedSavings, true
}

// HasEstimatedSavings returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasEstimatedSavings() bool {
	if o != nil && !IsNil(o.EstimatedSavings) {
		return true
	}

	return false
}

// SetEstimatedSavings gets a reference to the given int64 and assigns it to the EstimatedSavings field.
func (o *StorageSavingsSummaryData) SetEstimatedSavings(v int64) {
	o.EstimatedSavings = &v
}

// GetEstimatedSavingsPerc returns the EstimatedSavingsPerc field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetEstimatedSavingsPerc() float32 {
	if o == nil || IsNil(o.EstimatedSavingsPerc) {
		var ret float32
		return ret
	}
	return *o.EstimatedSavingsPerc
}

// GetEstimatedSavingsPercOk returns a tuple with the EstimatedSavingsPerc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetEstimatedSavingsPercOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedSavingsPerc) {
		return nil, false
	}
	return o.EstimatedSavingsPerc, true
}

// HasEstimatedSavingsPerc returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasEstimatedSavingsPerc() bool {
	if o != nil && !IsNil(o.EstimatedSavingsPerc) {
		return true
	}

	return false
}

// SetEstimatedSavingsPerc gets a reference to the given float32 and assigns it to the EstimatedSavingsPerc field.
func (o *StorageSavingsSummaryData) SetEstimatedSavingsPerc(v float32) {
	o.EstimatedSavingsPerc = &v
}

// GetEstimatedCurrentTimeflowsSavings returns the EstimatedCurrentTimeflowsSavings field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetEstimatedCurrentTimeflowsSavings() int64 {
	if o == nil || IsNil(o.EstimatedCurrentTimeflowsSavings) {
		var ret int64
		return ret
	}
	return *o.EstimatedCurrentTimeflowsSavings
}

// GetEstimatedCurrentTimeflowsSavingsOk returns a tuple with the EstimatedCurrentTimeflowsSavings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetEstimatedCurrentTimeflowsSavingsOk() (*int64, bool) {
	if o == nil || IsNil(o.EstimatedCurrentTimeflowsSavings) {
		return nil, false
	}
	return o.EstimatedCurrentTimeflowsSavings, true
}

// HasEstimatedCurrentTimeflowsSavings returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasEstimatedCurrentTimeflowsSavings() bool {
	if o != nil && !IsNil(o.EstimatedCurrentTimeflowsSavings) {
		return true
	}

	return false
}

// SetEstimatedCurrentTimeflowsSavings gets a reference to the given int64 and assigns it to the EstimatedCurrentTimeflowsSavings field.
func (o *StorageSavingsSummaryData) SetEstimatedCurrentTimeflowsSavings(v int64) {
	o.EstimatedCurrentTimeflowsSavings = &v
}

// GetEstimatedCurrentTimeflowsSavingsPerc returns the EstimatedCurrentTimeflowsSavingsPerc field value if set, zero value otherwise.
func (o *StorageSavingsSummaryData) GetEstimatedCurrentTimeflowsSavingsPerc() float32 {
	if o == nil || IsNil(o.EstimatedCurrentTimeflowsSavingsPerc) {
		var ret float32
		return ret
	}
	return *o.EstimatedCurrentTimeflowsSavingsPerc
}

// GetEstimatedCurrentTimeflowsSavingsPercOk returns a tuple with the EstimatedCurrentTimeflowsSavingsPerc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSavingsSummaryData) GetEstimatedCurrentTimeflowsSavingsPercOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedCurrentTimeflowsSavingsPerc) {
		return nil, false
	}
	return o.EstimatedCurrentTimeflowsSavingsPerc, true
}

// HasEstimatedCurrentTimeflowsSavingsPerc returns a boolean if a field has been set.
func (o *StorageSavingsSummaryData) HasEstimatedCurrentTimeflowsSavingsPerc() bool {
	if o != nil && !IsNil(o.EstimatedCurrentTimeflowsSavingsPerc) {
		return true
	}

	return false
}

// SetEstimatedCurrentTimeflowsSavingsPerc gets a reference to the given float32 and assigns it to the EstimatedCurrentTimeflowsSavingsPerc field.
func (o *StorageSavingsSummaryData) SetEstimatedCurrentTimeflowsSavingsPerc(v float32) {
	o.EstimatedCurrentTimeflowsSavingsPerc = &v
}

func (o StorageSavingsSummaryData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageSavingsSummaryData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DsourceId) {
		toSerialize["dsource_id"] = o.DsourceId
	}
	if !IsNil(o.DependantVdbs) {
		toSerialize["dependant_vdbs"] = o.DependantVdbs
	}
	if !IsNil(o.EngineName) {
		toSerialize["engine_name"] = o.EngineName
	}
	if !IsNil(o.UnvirtualizedSpace) {
		toSerialize["unvirtualized_space"] = o.UnvirtualizedSpace
	}
	if !IsNil(o.CurrentTimeflowsUnvirtualizedSpace) {
		toSerialize["current_timeflows_unvirtualized_space"] = o.CurrentTimeflowsUnvirtualizedSpace
	}
	if !IsNil(o.VirtualizedSpace) {
		toSerialize["virtualized_space"] = o.VirtualizedSpace
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.EstimatedSavings) {
		toSerialize["estimated_savings"] = o.EstimatedSavings
	}
	if !IsNil(o.EstimatedSavingsPerc) {
		toSerialize["estimated_savings_perc"] = o.EstimatedSavingsPerc
	}
	if !IsNil(o.EstimatedCurrentTimeflowsSavings) {
		toSerialize["estimated_current_timeflows_savings"] = o.EstimatedCurrentTimeflowsSavings
	}
	if !IsNil(o.EstimatedCurrentTimeflowsSavingsPerc) {
		toSerialize["estimated_current_timeflows_savings_perc"] = o.EstimatedCurrentTimeflowsSavingsPerc
	}
	return toSerialize, nil
}

type NullableStorageSavingsSummaryData struct {
	value *StorageSavingsSummaryData
	isSet bool
}

func (v NullableStorageSavingsSummaryData) Get() *StorageSavingsSummaryData {
	return v.value
}

func (v *NullableStorageSavingsSummaryData) Set(val *StorageSavingsSummaryData) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageSavingsSummaryData) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageSavingsSummaryData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageSavingsSummaryData(val *StorageSavingsSummaryData) *NullableStorageSavingsSummaryData {
	return &NullableStorageSavingsSummaryData{value: val, isSet: true}
}

func (v NullableStorageSavingsSummaryData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageSavingsSummaryData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


