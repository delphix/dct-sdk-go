/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the ImportEngineBookmarkResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportEngineBookmarkResponse{}

// ImportEngineBookmarkResponse struct for ImportEngineBookmarkResponse
type ImportEngineBookmarkResponse struct {
	// DCT job-id of the job that import the engine bookmarks to DCT.
	// Deprecated
	JobId *string `json:"job_id,omitempty"`
	Job *Job `json:"job,omitempty"`
}

// NewImportEngineBookmarkResponse instantiates a new ImportEngineBookmarkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportEngineBookmarkResponse() *ImportEngineBookmarkResponse {
	this := ImportEngineBookmarkResponse{}
	return &this
}

// NewImportEngineBookmarkResponseWithDefaults instantiates a new ImportEngineBookmarkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportEngineBookmarkResponseWithDefaults() *ImportEngineBookmarkResponse {
	this := ImportEngineBookmarkResponse{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
// Deprecated
func (o *ImportEngineBookmarkResponse) GetJobId() string {
	if o == nil || IsNil(o.JobId) {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ImportEngineBookmarkResponse) GetJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *ImportEngineBookmarkResponse) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
// Deprecated
func (o *ImportEngineBookmarkResponse) SetJobId(v string) {
	o.JobId = &v
}

// GetJob returns the Job field value if set, zero value otherwise.
func (o *ImportEngineBookmarkResponse) GetJob() Job {
	if o == nil || IsNil(o.Job) {
		var ret Job
		return ret
	}
	return *o.Job
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportEngineBookmarkResponse) GetJobOk() (*Job, bool) {
	if o == nil || IsNil(o.Job) {
		return nil, false
	}
	return o.Job, true
}

// HasJob returns a boolean if a field has been set.
func (o *ImportEngineBookmarkResponse) HasJob() bool {
	if o != nil && !IsNil(o.Job) {
		return true
	}

	return false
}

// SetJob gets a reference to the given Job and assigns it to the Job field.
func (o *ImportEngineBookmarkResponse) SetJob(v Job) {
	o.Job = &v
}

func (o ImportEngineBookmarkResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportEngineBookmarkResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.Job) {
		toSerialize["job"] = o.Job
	}
	return toSerialize, nil
}

type NullableImportEngineBookmarkResponse struct {
	value *ImportEngineBookmarkResponse
	isSet bool
}

func (v NullableImportEngineBookmarkResponse) Get() *ImportEngineBookmarkResponse {
	return v.value
}

func (v *NullableImportEngineBookmarkResponse) Set(val *ImportEngineBookmarkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImportEngineBookmarkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImportEngineBookmarkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportEngineBookmarkResponse(val *ImportEngineBookmarkResponse) *NullableImportEngineBookmarkResponse {
	return &NullableImportEngineBookmarkResponse{value: val, isSet: true}
}

func (v NullableImportEngineBookmarkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportEngineBookmarkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


