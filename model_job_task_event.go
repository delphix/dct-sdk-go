/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the JobTaskEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobTaskEvent{}

// JobTaskEvent struct for JobTaskEvent
type JobTaskEvent struct {
	MessageDetails *string `json:"message_details,omitempty"`
}

// NewJobTaskEvent instantiates a new JobTaskEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobTaskEvent() *JobTaskEvent {
	this := JobTaskEvent{}
	return &this
}

// NewJobTaskEventWithDefaults instantiates a new JobTaskEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobTaskEventWithDefaults() *JobTaskEvent {
	this := JobTaskEvent{}
	return &this
}

// GetMessageDetails returns the MessageDetails field value if set, zero value otherwise.
func (o *JobTaskEvent) GetMessageDetails() string {
	if o == nil || IsNil(o.MessageDetails) {
		var ret string
		return ret
	}
	return *o.MessageDetails
}

// GetMessageDetailsOk returns a tuple with the MessageDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobTaskEvent) GetMessageDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.MessageDetails) {
		return nil, false
	}
	return o.MessageDetails, true
}

// HasMessageDetails returns a boolean if a field has been set.
func (o *JobTaskEvent) HasMessageDetails() bool {
	if o != nil && !IsNil(o.MessageDetails) {
		return true
	}

	return false
}

// SetMessageDetails gets a reference to the given string and assigns it to the MessageDetails field.
func (o *JobTaskEvent) SetMessageDetails(v string) {
	o.MessageDetails = &v
}

func (o JobTaskEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobTaskEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageDetails) {
		toSerialize["message_details"] = o.MessageDetails
	}
	return toSerialize, nil
}

type NullableJobTaskEvent struct {
	value *JobTaskEvent
	isSet bool
}

func (v NullableJobTaskEvent) Get() *JobTaskEvent {
	return v.value
}

func (v *NullableJobTaskEvent) Set(val *JobTaskEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableJobTaskEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableJobTaskEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobTaskEvent(val *JobTaskEvent) *NullableJobTaskEvent {
	return &NullableJobTaskEvent{value: val, isSet: true}
}

func (v NullableJobTaskEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobTaskEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


