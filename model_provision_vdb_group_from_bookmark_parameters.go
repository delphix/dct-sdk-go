/*
Delphix DCT API

Delphix DCT API

API version: 3.17.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProvisionVDBGroupFromBookmarkParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisionVDBGroupFromBookmarkParameters{}

// ProvisionVDBGroupFromBookmarkParameters struct for ProvisionVDBGroupFromBookmarkParameters
type ProvisionVDBGroupFromBookmarkParameters struct {
	// Name of the created VDB group name.
	Name string `json:"name"`
	// ID of a bookmark to provision this VDB Group from.
	BookmarkId string `json:"bookmark_id"`
	// Provision parameters for each of the VDBs which will need to be provisioned. The key must be the vdb_id of the corresponding entry from the bookmark, and the value the provision parameters for the VDB which will be cloned from the bookmark.
	ProvisionParameters map[string]BaseProvisionVDBParameters `json:"provision_parameters"`
	// The tags to be created for VDB Group.
	Tags []Tag `json:"tags,omitempty"`
	// Whether the account provisioning this VDB group must be configured as owner of the VDB group.
	MakeCurrentAccountOwner *bool `json:"make_current_account_owner,omitempty"`
}

type _ProvisionVDBGroupFromBookmarkParameters ProvisionVDBGroupFromBookmarkParameters

// NewProvisionVDBGroupFromBookmarkParameters instantiates a new ProvisionVDBGroupFromBookmarkParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionVDBGroupFromBookmarkParameters(name string, bookmarkId string, provisionParameters map[string]BaseProvisionVDBParameters) *ProvisionVDBGroupFromBookmarkParameters {
	this := ProvisionVDBGroupFromBookmarkParameters{}
	this.Name = name
	this.BookmarkId = bookmarkId
	this.ProvisionParameters = provisionParameters
	var makeCurrentAccountOwner bool = true
	this.MakeCurrentAccountOwner = &makeCurrentAccountOwner
	return &this
}

// NewProvisionVDBGroupFromBookmarkParametersWithDefaults instantiates a new ProvisionVDBGroupFromBookmarkParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionVDBGroupFromBookmarkParametersWithDefaults() *ProvisionVDBGroupFromBookmarkParameters {
	this := ProvisionVDBGroupFromBookmarkParameters{}
	var makeCurrentAccountOwner bool = true
	this.MakeCurrentAccountOwner = &makeCurrentAccountOwner
	return &this
}

// GetName returns the Name field value
func (o *ProvisionVDBGroupFromBookmarkParameters) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProvisionVDBGroupFromBookmarkParameters) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProvisionVDBGroupFromBookmarkParameters) SetName(v string) {
	o.Name = v
}

// GetBookmarkId returns the BookmarkId field value
func (o *ProvisionVDBGroupFromBookmarkParameters) GetBookmarkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BookmarkId
}

// GetBookmarkIdOk returns a tuple with the BookmarkId field value
// and a boolean to check if the value has been set.
func (o *ProvisionVDBGroupFromBookmarkParameters) GetBookmarkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BookmarkId, true
}

// SetBookmarkId sets field value
func (o *ProvisionVDBGroupFromBookmarkParameters) SetBookmarkId(v string) {
	o.BookmarkId = v
}

// GetProvisionParameters returns the ProvisionParameters field value
func (o *ProvisionVDBGroupFromBookmarkParameters) GetProvisionParameters() map[string]BaseProvisionVDBParameters {
	if o == nil {
		var ret map[string]BaseProvisionVDBParameters
		return ret
	}

	return o.ProvisionParameters
}

// GetProvisionParametersOk returns a tuple with the ProvisionParameters field value
// and a boolean to check if the value has been set.
func (o *ProvisionVDBGroupFromBookmarkParameters) GetProvisionParametersOk() (map[string]BaseProvisionVDBParameters, bool) {
	if o == nil {
		return map[string]BaseProvisionVDBParameters{}, false
	}
	return o.ProvisionParameters, true
}

// SetProvisionParameters sets field value
func (o *ProvisionVDBGroupFromBookmarkParameters) SetProvisionParameters(v map[string]BaseProvisionVDBParameters) {
	o.ProvisionParameters = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProvisionVDBGroupFromBookmarkParameters) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionVDBGroupFromBookmarkParameters) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProvisionVDBGroupFromBookmarkParameters) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ProvisionVDBGroupFromBookmarkParameters) SetTags(v []Tag) {
	o.Tags = v
}

// GetMakeCurrentAccountOwner returns the MakeCurrentAccountOwner field value if set, zero value otherwise.
func (o *ProvisionVDBGroupFromBookmarkParameters) GetMakeCurrentAccountOwner() bool {
	if o == nil || IsNil(o.MakeCurrentAccountOwner) {
		var ret bool
		return ret
	}
	return *o.MakeCurrentAccountOwner
}

// GetMakeCurrentAccountOwnerOk returns a tuple with the MakeCurrentAccountOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionVDBGroupFromBookmarkParameters) GetMakeCurrentAccountOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.MakeCurrentAccountOwner) {
		return nil, false
	}
	return o.MakeCurrentAccountOwner, true
}

// HasMakeCurrentAccountOwner returns a boolean if a field has been set.
func (o *ProvisionVDBGroupFromBookmarkParameters) HasMakeCurrentAccountOwner() bool {
	if o != nil && !IsNil(o.MakeCurrentAccountOwner) {
		return true
	}

	return false
}

// SetMakeCurrentAccountOwner gets a reference to the given bool and assigns it to the MakeCurrentAccountOwner field.
func (o *ProvisionVDBGroupFromBookmarkParameters) SetMakeCurrentAccountOwner(v bool) {
	o.MakeCurrentAccountOwner = &v
}

func (o ProvisionVDBGroupFromBookmarkParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisionVDBGroupFromBookmarkParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["bookmark_id"] = o.BookmarkId
	toSerialize["provision_parameters"] = o.ProvisionParameters
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.MakeCurrentAccountOwner) {
		toSerialize["make_current_account_owner"] = o.MakeCurrentAccountOwner
	}
	return toSerialize, nil
}

func (o *ProvisionVDBGroupFromBookmarkParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"bookmark_id",
		"provision_parameters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProvisionVDBGroupFromBookmarkParameters := _ProvisionVDBGroupFromBookmarkParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProvisionVDBGroupFromBookmarkParameters)

	if err != nil {
		return err
	}

	*o = ProvisionVDBGroupFromBookmarkParameters(varProvisionVDBGroupFromBookmarkParameters)

	return err
}

type NullableProvisionVDBGroupFromBookmarkParameters struct {
	value *ProvisionVDBGroupFromBookmarkParameters
	isSet bool
}

func (v NullableProvisionVDBGroupFromBookmarkParameters) Get() *ProvisionVDBGroupFromBookmarkParameters {
	return v.value
}

func (v *NullableProvisionVDBGroupFromBookmarkParameters) Set(val *ProvisionVDBGroupFromBookmarkParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionVDBGroupFromBookmarkParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionVDBGroupFromBookmarkParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionVDBGroupFromBookmarkParameters(val *ProvisionVDBGroupFromBookmarkParameters) *NullableProvisionVDBGroupFromBookmarkParameters {
	return &NullableProvisionVDBGroupFromBookmarkParameters{value: val, isSet: true}
}

func (v NullableProvisionVDBGroupFromBookmarkParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionVDBGroupFromBookmarkParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


