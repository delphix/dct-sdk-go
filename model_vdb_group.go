/*
Delphix API Gateway

Delphix API Gateway API

API version: 1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VDBGroup A collection of virtual databases and datesets.
type VDBGroup struct {
	// A unique identifier for the entity.
	Id string `json:"id"`
	// A unique name for the entity.
	Name string `json:"name"`
	// The list of VDB IDs in this VDBGroup.
	VdbIds []string `json:"vdb_ids"`
}

// NewVDBGroup instantiates a new VDBGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVDBGroup(id string, name string, vdbIds []string) *VDBGroup {
	this := VDBGroup{}
	this.Id = id
	this.Name = name
	this.VdbIds = vdbIds
	return &this
}

// NewVDBGroupWithDefaults instantiates a new VDBGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVDBGroupWithDefaults() *VDBGroup {
	this := VDBGroup{}
	return &this
}

// GetId returns the Id field value
func (o *VDBGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VDBGroup) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VDBGroup) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *VDBGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VDBGroup) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VDBGroup) SetName(v string) {
	o.Name = v
}

// GetVdbIds returns the VdbIds field value
func (o *VDBGroup) GetVdbIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VdbIds
}

// GetVdbIdsOk returns a tuple with the VdbIds field value
// and a boolean to check if the value has been set.
func (o *VDBGroup) GetVdbIdsOk() ([]string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VdbIds, true
}

// SetVdbIds sets field value
func (o *VDBGroup) SetVdbIds(v []string) {
	o.VdbIds = v
}

func (o VDBGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["vdb_ids"] = o.VdbIds
	}
	return json.Marshal(toSerialize)
}

type NullableVDBGroup struct {
	value *VDBGroup
	isSet bool
}

func (v NullableVDBGroup) Get() *VDBGroup {
	return v.value
}

func (v *NullableVDBGroup) Set(val *VDBGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableVDBGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableVDBGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVDBGroup(val *VDBGroup) *NullableVDBGroup {
	return &NullableVDBGroup{value: val, isSet: true}
}

func (v NullableVDBGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVDBGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


