/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the ConvertDataLayoutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConvertDataLayoutRequest{}

// ConvertDataLayoutRequest struct for ConvertDataLayoutRequest
type ConvertDataLayoutRequest struct {
	// Skip running the account import process. If this flag is not set, then accounts from self-service will overwrite existing accounts if any.
	SkipAccountImport *bool `json:"skip_account_import,omitempty"`
}

// NewConvertDataLayoutRequest instantiates a new ConvertDataLayoutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConvertDataLayoutRequest() *ConvertDataLayoutRequest {
	this := ConvertDataLayoutRequest{}
	var skipAccountImport bool = false
	this.SkipAccountImport = &skipAccountImport
	return &this
}

// NewConvertDataLayoutRequestWithDefaults instantiates a new ConvertDataLayoutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConvertDataLayoutRequestWithDefaults() *ConvertDataLayoutRequest {
	this := ConvertDataLayoutRequest{}
	var skipAccountImport bool = false
	this.SkipAccountImport = &skipAccountImport
	return &this
}

// GetSkipAccountImport returns the SkipAccountImport field value if set, zero value otherwise.
func (o *ConvertDataLayoutRequest) GetSkipAccountImport() bool {
	if o == nil || IsNil(o.SkipAccountImport) {
		var ret bool
		return ret
	}
	return *o.SkipAccountImport
}

// GetSkipAccountImportOk returns a tuple with the SkipAccountImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertDataLayoutRequest) GetSkipAccountImportOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipAccountImport) {
		return nil, false
	}
	return o.SkipAccountImport, true
}

// HasSkipAccountImport returns a boolean if a field has been set.
func (o *ConvertDataLayoutRequest) HasSkipAccountImport() bool {
	if o != nil && !IsNil(o.SkipAccountImport) {
		return true
	}

	return false
}

// SetSkipAccountImport gets a reference to the given bool and assigns it to the SkipAccountImport field.
func (o *ConvertDataLayoutRequest) SetSkipAccountImport(v bool) {
	o.SkipAccountImport = &v
}

func (o ConvertDataLayoutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConvertDataLayoutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SkipAccountImport) {
		toSerialize["skip_account_import"] = o.SkipAccountImport
	}
	return toSerialize, nil
}

type NullableConvertDataLayoutRequest struct {
	value *ConvertDataLayoutRequest
	isSet bool
}

func (v NullableConvertDataLayoutRequest) Get() *ConvertDataLayoutRequest {
	return v.value
}

func (v *NullableConvertDataLayoutRequest) Set(val *ConvertDataLayoutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConvertDataLayoutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConvertDataLayoutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConvertDataLayoutRequest(val *ConvertDataLayoutRequest) *NullableConvertDataLayoutRequest {
	return &NullableConvertDataLayoutRequest{value: val, isSet: true}
}

func (v NullableConvertDataLayoutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConvertDataLayoutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


