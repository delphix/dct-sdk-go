/*
Delphix DCT API

Delphix DCT API

API version: 3.18.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the LockVDBGroupParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LockVDBGroupParameters{}

// LockVDBGroupParameters struct for LockVDBGroupParameters
type LockVDBGroupParameters struct {
	// Id of the account on whose behalf this request is being made. Only accounts having LOCK_FOR_OTHER_ACCOUNT permission can lock VDB Groups on behalf of other accounts. If this property is not specified then the account id of the authenticated user making the request is used.
	AccountId *int64 `json:"account_id,omitempty"`
}

// NewLockVDBGroupParameters instantiates a new LockVDBGroupParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockVDBGroupParameters() *LockVDBGroupParameters {
	this := LockVDBGroupParameters{}
	return &this
}

// NewLockVDBGroupParametersWithDefaults instantiates a new LockVDBGroupParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockVDBGroupParametersWithDefaults() *LockVDBGroupParameters {
	this := LockVDBGroupParameters{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *LockVDBGroupParameters) GetAccountId() int64 {
	if o == nil || IsNil(o.AccountId) {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LockVDBGroupParameters) GetAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *LockVDBGroupParameters) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *LockVDBGroupParameters) SetAccountId(v int64) {
	o.AccountId = &v
}

func (o LockVDBGroupParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LockVDBGroupParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	return toSerialize, nil
}

type NullableLockVDBGroupParameters struct {
	value *LockVDBGroupParameters
	isSet bool
}

func (v NullableLockVDBGroupParameters) Get() *LockVDBGroupParameters {
	return v.value
}

func (v *NullableLockVDBGroupParameters) Set(val *LockVDBGroupParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableLockVDBGroupParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableLockVDBGroupParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockVDBGroupParameters(val *LockVDBGroupParameters) *NullableLockVDBGroupParameters {
	return &NullableLockVDBGroupParameters{value: val, isSet: true}
}

func (v NullableLockVDBGroupParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockVDBGroupParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


